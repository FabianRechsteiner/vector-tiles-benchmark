/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 387.0, "minX": 0.0, "maxY": 9608.0, "series": [{"data": [[0.0, 2477.0], [0.1, 2477.0], [0.2, 2477.0], [0.3, 2477.0], [0.4, 2477.0], [0.5, 2477.0], [0.6, 2477.0], [0.7, 2477.0], [0.8, 2477.0], [0.9, 2477.0], [1.0, 2480.0], [1.1, 2480.0], [1.2, 2480.0], [1.3, 2480.0], [1.4, 2480.0], [1.5, 2480.0], [1.6, 2480.0], [1.7, 2480.0], [1.8, 2480.0], [1.9, 2480.0], [2.0, 2484.0], [2.1, 2484.0], [2.2, 2484.0], [2.3, 2484.0], [2.4, 2484.0], [2.5, 2484.0], [2.6, 2484.0], [2.7, 2484.0], [2.8, 2484.0], [2.9, 2484.0], [3.0, 2537.0], [3.1, 2537.0], [3.2, 2537.0], [3.3, 2537.0], [3.4, 2537.0], [3.5, 2537.0], [3.6, 2537.0], [3.7, 2537.0], [3.8, 2537.0], [3.9, 2537.0], [4.0, 2563.0], [4.1, 2563.0], [4.2, 2563.0], [4.3, 2563.0], [4.4, 2563.0], [4.5, 2563.0], [4.6, 2563.0], [4.7, 2563.0], [4.8, 2563.0], [4.9, 2563.0], [5.0, 2597.0], [5.1, 2597.0], [5.2, 2597.0], [5.3, 2597.0], [5.4, 2597.0], [5.5, 2597.0], [5.6, 2597.0], [5.7, 2597.0], [5.8, 2597.0], [5.9, 2597.0], [6.0, 2599.0], [6.1, 2599.0], [6.2, 2599.0], [6.3, 2599.0], [6.4, 2599.0], [6.5, 2599.0], [6.6, 2599.0], [6.7, 2599.0], [6.8, 2599.0], [6.9, 2599.0], [7.0, 2632.0], [7.1, 2632.0], [7.2, 2632.0], [7.3, 2632.0], [7.4, 2632.0], [7.5, 2632.0], [7.6, 2632.0], [7.7, 2632.0], [7.8, 2632.0], [7.9, 2632.0], [8.0, 2648.0], [8.1, 2648.0], [8.2, 2648.0], [8.3, 2648.0], [8.4, 2648.0], [8.5, 2648.0], [8.6, 2648.0], [8.7, 2648.0], [8.8, 2648.0], [8.9, 2648.0], [9.0, 2656.0], [9.1, 2656.0], [9.2, 2656.0], [9.3, 2656.0], [9.4, 2656.0], [9.5, 2656.0], [9.6, 2656.0], [9.7, 2656.0], [9.8, 2656.0], [9.9, 2656.0], [10.0, 2680.0], [10.1, 2680.0], [10.2, 2680.0], [10.3, 2680.0], [10.4, 2680.0], [10.5, 2680.0], [10.6, 2680.0], [10.7, 2680.0], [10.8, 2680.0], [10.9, 2680.0], [11.0, 2705.0], [11.1, 2705.0], [11.2, 2705.0], [11.3, 2705.0], [11.4, 2705.0], [11.5, 2705.0], [11.6, 2705.0], [11.7, 2705.0], [11.8, 2705.0], [11.9, 2705.0], [12.0, 2717.0], [12.1, 2717.0], [12.2, 2717.0], [12.3, 2717.0], [12.4, 2717.0], [12.5, 2717.0], [12.6, 2717.0], [12.7, 2717.0], [12.8, 2717.0], [12.9, 2717.0], [13.0, 2723.0], [13.1, 2723.0], [13.2, 2723.0], [13.3, 2723.0], [13.4, 2723.0], [13.5, 2723.0], [13.6, 2723.0], [13.7, 2723.0], [13.8, 2723.0], [13.9, 2723.0], [14.0, 2727.0], [14.1, 2727.0], [14.2, 2727.0], [14.3, 2727.0], [14.4, 2727.0], [14.5, 2727.0], [14.6, 2727.0], [14.7, 2727.0], [14.8, 2727.0], [14.9, 2727.0], [15.0, 2737.0], [15.1, 2737.0], [15.2, 2737.0], [15.3, 2737.0], [15.4, 2737.0], [15.5, 2737.0], [15.6, 2737.0], [15.7, 2737.0], [15.8, 2737.0], [15.9, 2737.0], [16.0, 2741.0], [16.1, 2741.0], [16.2, 2741.0], [16.3, 2741.0], [16.4, 2741.0], [16.5, 2741.0], [16.6, 2741.0], [16.7, 2741.0], [16.8, 2741.0], [16.9, 2741.0], [17.0, 2748.0], [17.1, 2748.0], [17.2, 2748.0], [17.3, 2748.0], [17.4, 2748.0], [17.5, 2748.0], [17.6, 2748.0], [17.7, 2748.0], [17.8, 2748.0], [17.9, 2748.0], [18.0, 2751.0], [18.1, 2751.0], [18.2, 2751.0], [18.3, 2751.0], [18.4, 2751.0], [18.5, 2751.0], [18.6, 2751.0], [18.7, 2751.0], [18.8, 2751.0], [18.9, 2751.0], [19.0, 2775.0], [19.1, 2775.0], [19.2, 2775.0], [19.3, 2775.0], [19.4, 2775.0], [19.5, 2775.0], [19.6, 2775.0], [19.7, 2775.0], [19.8, 2775.0], [19.9, 2775.0], [20.0, 2776.0], [20.1, 2776.0], [20.2, 2776.0], [20.3, 2776.0], [20.4, 2776.0], [20.5, 2776.0], [20.6, 2776.0], [20.7, 2776.0], [20.8, 2776.0], [20.9, 2776.0], [21.0, 2781.0], [21.1, 2781.0], [21.2, 2781.0], [21.3, 2781.0], [21.4, 2781.0], [21.5, 2781.0], [21.6, 2781.0], [21.7, 2781.0], [21.8, 2781.0], [21.9, 2781.0], [22.0, 2781.0], [22.1, 2781.0], [22.2, 2781.0], [22.3, 2781.0], [22.4, 2781.0], [22.5, 2781.0], [22.6, 2781.0], [22.7, 2781.0], [22.8, 2781.0], [22.9, 2781.0], [23.0, 2789.0], [23.1, 2789.0], [23.2, 2789.0], [23.3, 2789.0], [23.4, 2789.0], [23.5, 2789.0], [23.6, 2789.0], [23.7, 2789.0], [23.8, 2789.0], [23.9, 2789.0], [24.0, 2813.0], [24.1, 2813.0], [24.2, 2813.0], [24.3, 2813.0], [24.4, 2813.0], [24.5, 2813.0], [24.6, 2813.0], [24.7, 2813.0], [24.8, 2813.0], [24.9, 2813.0], [25.0, 2820.0], [25.1, 2820.0], [25.2, 2820.0], [25.3, 2820.0], [25.4, 2820.0], [25.5, 2820.0], [25.6, 2820.0], [25.7, 2820.0], [25.8, 2820.0], [25.9, 2820.0], [26.0, 2821.0], [26.1, 2821.0], [26.2, 2821.0], [26.3, 2821.0], [26.4, 2821.0], [26.5, 2821.0], [26.6, 2821.0], [26.7, 2821.0], [26.8, 2821.0], [26.9, 2821.0], [27.0, 2827.0], [27.1, 2827.0], [27.2, 2827.0], [27.3, 2827.0], [27.4, 2827.0], [27.5, 2827.0], [27.6, 2827.0], [27.7, 2827.0], [27.8, 2827.0], [27.9, 2827.0], [28.0, 2827.0], [28.1, 2827.0], [28.2, 2827.0], [28.3, 2827.0], [28.4, 2827.0], [28.5, 2827.0], [28.6, 2827.0], [28.7, 2827.0], [28.8, 2827.0], [28.9, 2827.0], [29.0, 2827.0], [29.1, 2827.0], [29.2, 2827.0], [29.3, 2827.0], [29.4, 2827.0], [29.5, 2827.0], [29.6, 2827.0], [29.7, 2827.0], [29.8, 2827.0], [29.9, 2827.0], [30.0, 2830.0], [30.1, 2830.0], [30.2, 2830.0], [30.3, 2830.0], [30.4, 2830.0], [30.5, 2830.0], [30.6, 2830.0], [30.7, 2830.0], [30.8, 2830.0], [30.9, 2830.0], [31.0, 2833.0], [31.1, 2833.0], [31.2, 2833.0], [31.3, 2833.0], [31.4, 2833.0], [31.5, 2833.0], [31.6, 2833.0], [31.7, 2833.0], [31.8, 2833.0], [31.9, 2833.0], [32.0, 2838.0], [32.1, 2838.0], [32.2, 2838.0], [32.3, 2838.0], [32.4, 2838.0], [32.5, 2838.0], [32.6, 2838.0], [32.7, 2838.0], [32.8, 2838.0], [32.9, 2838.0], [33.0, 2841.0], [33.1, 2841.0], [33.2, 2841.0], [33.3, 2841.0], [33.4, 2841.0], [33.5, 2841.0], [33.6, 2841.0], [33.7, 2841.0], [33.8, 2841.0], [33.9, 2841.0], [34.0, 2841.0], [34.1, 2841.0], [34.2, 2841.0], [34.3, 2841.0], [34.4, 2841.0], [34.5, 2841.0], [34.6, 2841.0], [34.7, 2841.0], [34.8, 2841.0], [34.9, 2841.0], [35.0, 2853.0], [35.1, 2853.0], [35.2, 2853.0], [35.3, 2853.0], [35.4, 2853.0], [35.5, 2853.0], [35.6, 2853.0], [35.7, 2853.0], [35.8, 2853.0], [35.9, 2853.0], [36.0, 2854.0], [36.1, 2854.0], [36.2, 2854.0], [36.3, 2854.0], [36.4, 2854.0], [36.5, 2854.0], [36.6, 2854.0], [36.7, 2854.0], [36.8, 2854.0], [36.9, 2854.0], [37.0, 2857.0], [37.1, 2857.0], [37.2, 2857.0], [37.3, 2857.0], [37.4, 2857.0], [37.5, 2857.0], [37.6, 2857.0], [37.7, 2857.0], [37.8, 2857.0], [37.9, 2857.0], [38.0, 2860.0], [38.1, 2860.0], [38.2, 2860.0], [38.3, 2860.0], [38.4, 2860.0], [38.5, 2860.0], [38.6, 2860.0], [38.7, 2860.0], [38.8, 2860.0], [38.9, 2860.0], [39.0, 2861.0], [39.1, 2861.0], [39.2, 2861.0], [39.3, 2861.0], [39.4, 2861.0], [39.5, 2861.0], [39.6, 2861.0], [39.7, 2861.0], [39.8, 2861.0], [39.9, 2861.0], [40.0, 2863.0], [40.1, 2863.0], [40.2, 2863.0], [40.3, 2863.0], [40.4, 2863.0], [40.5, 2863.0], [40.6, 2863.0], [40.7, 2863.0], [40.8, 2863.0], [40.9, 2863.0], [41.0, 2868.0], [41.1, 2868.0], [41.2, 2868.0], [41.3, 2868.0], [41.4, 2868.0], [41.5, 2868.0], [41.6, 2868.0], [41.7, 2868.0], [41.8, 2868.0], [41.9, 2868.0], [42.0, 2871.0], [42.1, 2871.0], [42.2, 2871.0], [42.3, 2871.0], [42.4, 2871.0], [42.5, 2871.0], [42.6, 2871.0], [42.7, 2871.0], [42.8, 2871.0], [42.9, 2871.0], [43.0, 2874.0], [43.1, 2874.0], [43.2, 2874.0], [43.3, 2874.0], [43.4, 2874.0], [43.5, 2874.0], [43.6, 2874.0], [43.7, 2874.0], [43.8, 2874.0], [43.9, 2874.0], [44.0, 2877.0], [44.1, 2877.0], [44.2, 2877.0], [44.3, 2877.0], [44.4, 2877.0], [44.5, 2877.0], [44.6, 2877.0], [44.7, 2877.0], [44.8, 2877.0], [44.9, 2877.0], [45.0, 2878.0], [45.1, 2878.0], [45.2, 2878.0], [45.3, 2878.0], [45.4, 2878.0], [45.5, 2878.0], [45.6, 2878.0], [45.7, 2878.0], [45.8, 2878.0], [45.9, 2878.0], [46.0, 2879.0], [46.1, 2879.0], [46.2, 2879.0], [46.3, 2879.0], [46.4, 2879.0], [46.5, 2879.0], [46.6, 2879.0], [46.7, 2879.0], [46.8, 2879.0], [46.9, 2879.0], [47.0, 2880.0], [47.1, 2880.0], [47.2, 2880.0], [47.3, 2880.0], [47.4, 2880.0], [47.5, 2880.0], [47.6, 2880.0], [47.7, 2880.0], [47.8, 2880.0], [47.9, 2880.0], [48.0, 2883.0], [48.1, 2883.0], [48.2, 2883.0], [48.3, 2883.0], [48.4, 2883.0], [48.5, 2883.0], [48.6, 2883.0], [48.7, 2883.0], [48.8, 2883.0], [48.9, 2883.0], [49.0, 2885.0], [49.1, 2885.0], [49.2, 2885.0], [49.3, 2885.0], [49.4, 2885.0], [49.5, 2885.0], [49.6, 2885.0], [49.7, 2885.0], [49.8, 2885.0], [49.9, 2885.0], [50.0, 2888.0], [50.1, 2888.0], [50.2, 2888.0], [50.3, 2888.0], [50.4, 2888.0], [50.5, 2888.0], [50.6, 2888.0], [50.7, 2888.0], [50.8, 2888.0], [50.9, 2888.0], [51.0, 2901.0], [51.1, 2901.0], [51.2, 2901.0], [51.3, 2901.0], [51.4, 2901.0], [51.5, 2901.0], [51.6, 2901.0], [51.7, 2901.0], [51.8, 2901.0], [51.9, 2901.0], [52.0, 2902.0], [52.1, 2902.0], [52.2, 2902.0], [52.3, 2902.0], [52.4, 2902.0], [52.5, 2902.0], [52.6, 2902.0], [52.7, 2902.0], [52.8, 2902.0], [52.9, 2902.0], [53.0, 2909.0], [53.1, 2909.0], [53.2, 2909.0], [53.3, 2909.0], [53.4, 2909.0], [53.5, 2909.0], [53.6, 2909.0], [53.7, 2909.0], [53.8, 2909.0], [53.9, 2909.0], [54.0, 2912.0], [54.1, 2912.0], [54.2, 2912.0], [54.3, 2912.0], [54.4, 2912.0], [54.5, 2912.0], [54.6, 2912.0], [54.7, 2912.0], [54.8, 2912.0], [54.9, 2912.0], [55.0, 2913.0], [55.1, 2913.0], [55.2, 2913.0], [55.3, 2913.0], [55.4, 2913.0], [55.5, 2913.0], [55.6, 2913.0], [55.7, 2913.0], [55.8, 2913.0], [55.9, 2913.0], [56.0, 2932.0], [56.1, 2932.0], [56.2, 2932.0], [56.3, 2932.0], [56.4, 2932.0], [56.5, 2932.0], [56.6, 2932.0], [56.7, 2932.0], [56.8, 2932.0], [56.9, 2932.0], [57.0, 2941.0], [57.1, 2941.0], [57.2, 2941.0], [57.3, 2941.0], [57.4, 2941.0], [57.5, 2941.0], [57.6, 2941.0], [57.7, 2941.0], [57.8, 2941.0], [57.9, 2941.0], [58.0, 2944.0], [58.1, 2944.0], [58.2, 2944.0], [58.3, 2944.0], [58.4, 2944.0], [58.5, 2944.0], [58.6, 2944.0], [58.7, 2944.0], [58.8, 2944.0], [58.9, 2944.0], [59.0, 2953.0], [59.1, 2953.0], [59.2, 2953.0], [59.3, 2953.0], [59.4, 2953.0], [59.5, 2953.0], [59.6, 2953.0], [59.7, 2953.0], [59.8, 2953.0], [59.9, 2953.0], [60.0, 2953.0], [60.1, 2953.0], [60.2, 2953.0], [60.3, 2953.0], [60.4, 2953.0], [60.5, 2953.0], [60.6, 2953.0], [60.7, 2953.0], [60.8, 2953.0], [60.9, 2953.0], [61.0, 2969.0], [61.1, 2969.0], [61.2, 2969.0], [61.3, 2969.0], [61.4, 2969.0], [61.5, 2969.0], [61.6, 2969.0], [61.7, 2969.0], [61.8, 2969.0], [61.9, 2969.0], [62.0, 2970.0], [62.1, 2970.0], [62.2, 2970.0], [62.3, 2970.0], [62.4, 2970.0], [62.5, 2970.0], [62.6, 2970.0], [62.7, 2970.0], [62.8, 2970.0], [62.9, 2970.0], [63.0, 2971.0], [63.1, 2971.0], [63.2, 2971.0], [63.3, 2971.0], [63.4, 2971.0], [63.5, 2971.0], [63.6, 2971.0], [63.7, 2971.0], [63.8, 2971.0], [63.9, 2971.0], [64.0, 2975.0], [64.1, 2975.0], [64.2, 2975.0], [64.3, 2975.0], [64.4, 2975.0], [64.5, 2975.0], [64.6, 2975.0], [64.7, 2975.0], [64.8, 2975.0], [64.9, 2975.0], [65.0, 2986.0], [65.1, 2986.0], [65.2, 2986.0], [65.3, 2986.0], [65.4, 2986.0], [65.5, 2986.0], [65.6, 2986.0], [65.7, 2986.0], [65.8, 2986.0], [65.9, 2986.0], [66.0, 2991.0], [66.1, 2991.0], [66.2, 2991.0], [66.3, 2991.0], [66.4, 2991.0], [66.5, 2991.0], [66.6, 2991.0], [66.7, 2991.0], [66.8, 2991.0], [66.9, 2991.0], [67.0, 2995.0], [67.1, 2995.0], [67.2, 2995.0], [67.3, 2995.0], [67.4, 2995.0], [67.5, 2995.0], [67.6, 2995.0], [67.7, 2995.0], [67.8, 2995.0], [67.9, 2995.0], [68.0, 2999.0], [68.1, 2999.0], [68.2, 2999.0], [68.3, 2999.0], [68.4, 2999.0], [68.5, 2999.0], [68.6, 2999.0], [68.7, 2999.0], [68.8, 2999.0], [68.9, 2999.0], [69.0, 3002.0], [69.1, 3002.0], [69.2, 3002.0], [69.3, 3002.0], [69.4, 3002.0], [69.5, 3002.0], [69.6, 3002.0], [69.7, 3002.0], [69.8, 3002.0], [69.9, 3002.0], [70.0, 3007.0], [70.1, 3007.0], [70.2, 3007.0], [70.3, 3007.0], [70.4, 3007.0], [70.5, 3007.0], [70.6, 3007.0], [70.7, 3007.0], [70.8, 3007.0], [70.9, 3007.0], [71.0, 3022.0], [71.1, 3022.0], [71.2, 3022.0], [71.3, 3022.0], [71.4, 3022.0], [71.5, 3022.0], [71.6, 3022.0], [71.7, 3022.0], [71.8, 3022.0], [71.9, 3022.0], [72.0, 3026.0], [72.1, 3026.0], [72.2, 3026.0], [72.3, 3026.0], [72.4, 3026.0], [72.5, 3026.0], [72.6, 3026.0], [72.7, 3026.0], [72.8, 3026.0], [72.9, 3026.0], [73.0, 3032.0], [73.1, 3032.0], [73.2, 3032.0], [73.3, 3032.0], [73.4, 3032.0], [73.5, 3032.0], [73.6, 3032.0], [73.7, 3032.0], [73.8, 3032.0], [73.9, 3032.0], [74.0, 3035.0], [74.1, 3035.0], [74.2, 3035.0], [74.3, 3035.0], [74.4, 3035.0], [74.5, 3035.0], [74.6, 3035.0], [74.7, 3035.0], [74.8, 3035.0], [74.9, 3035.0], [75.0, 3044.0], [75.1, 3044.0], [75.2, 3044.0], [75.3, 3044.0], [75.4, 3044.0], [75.5, 3044.0], [75.6, 3044.0], [75.7, 3044.0], [75.8, 3044.0], [75.9, 3044.0], [76.0, 3055.0], [76.1, 3055.0], [76.2, 3055.0], [76.3, 3055.0], [76.4, 3055.0], [76.5, 3055.0], [76.6, 3055.0], [76.7, 3055.0], [76.8, 3055.0], [76.9, 3055.0], [77.0, 3062.0], [77.1, 3062.0], [77.2, 3062.0], [77.3, 3062.0], [77.4, 3062.0], [77.5, 3062.0], [77.6, 3062.0], [77.7, 3062.0], [77.8, 3062.0], [77.9, 3062.0], [78.0, 3078.0], [78.1, 3078.0], [78.2, 3078.0], [78.3, 3078.0], [78.4, 3078.0], [78.5, 3078.0], [78.6, 3078.0], [78.7, 3078.0], [78.8, 3078.0], [78.9, 3078.0], [79.0, 3082.0], [79.1, 3082.0], [79.2, 3082.0], [79.3, 3082.0], [79.4, 3082.0], [79.5, 3082.0], [79.6, 3082.0], [79.7, 3082.0], [79.8, 3082.0], [79.9, 3082.0], [80.0, 3096.0], [80.1, 3096.0], [80.2, 3096.0], [80.3, 3096.0], [80.4, 3096.0], [80.5, 3096.0], [80.6, 3096.0], [80.7, 3096.0], [80.8, 3096.0], [80.9, 3096.0], [81.0, 3104.0], [81.1, 3104.0], [81.2, 3104.0], [81.3, 3104.0], [81.4, 3104.0], [81.5, 3104.0], [81.6, 3104.0], [81.7, 3104.0], [81.8, 3104.0], [81.9, 3104.0], [82.0, 3106.0], [82.1, 3106.0], [82.2, 3106.0], [82.3, 3106.0], [82.4, 3106.0], [82.5, 3106.0], [82.6, 3106.0], [82.7, 3106.0], [82.8, 3106.0], [82.9, 3106.0], [83.0, 3107.0], [83.1, 3107.0], [83.2, 3107.0], [83.3, 3107.0], [83.4, 3107.0], [83.5, 3107.0], [83.6, 3107.0], [83.7, 3107.0], [83.8, 3107.0], [83.9, 3107.0], [84.0, 3109.0], [84.1, 3109.0], [84.2, 3109.0], [84.3, 3109.0], [84.4, 3109.0], [84.5, 3109.0], [84.6, 3109.0], [84.7, 3109.0], [84.8, 3109.0], [84.9, 3109.0], [85.0, 3113.0], [85.1, 3113.0], [85.2, 3113.0], [85.3, 3113.0], [85.4, 3113.0], [85.5, 3113.0], [85.6, 3113.0], [85.7, 3113.0], [85.8, 3113.0], [85.9, 3113.0], [86.0, 3136.0], [86.1, 3136.0], [86.2, 3136.0], [86.3, 3136.0], [86.4, 3136.0], [86.5, 3136.0], [86.6, 3136.0], [86.7, 3136.0], [86.8, 3136.0], [86.9, 3136.0], [87.0, 3136.0], [87.1, 3136.0], [87.2, 3136.0], [87.3, 3136.0], [87.4, 3136.0], [87.5, 3136.0], [87.6, 3136.0], [87.7, 3136.0], [87.8, 3136.0], [87.9, 3136.0], [88.0, 3137.0], [88.1, 3137.0], [88.2, 3137.0], [88.3, 3137.0], [88.4, 3137.0], [88.5, 3137.0], [88.6, 3137.0], [88.7, 3137.0], [88.8, 3137.0], [88.9, 3137.0], [89.0, 3159.0], [89.1, 3159.0], [89.2, 3159.0], [89.3, 3159.0], [89.4, 3159.0], [89.5, 3159.0], [89.6, 3159.0], [89.7, 3159.0], [89.8, 3159.0], [89.9, 3159.0], [90.0, 3161.0], [90.1, 3161.0], [90.2, 3161.0], [90.3, 3161.0], [90.4, 3161.0], [90.5, 3161.0], [90.6, 3161.0], [90.7, 3161.0], [90.8, 3161.0], [90.9, 3161.0], [91.0, 3163.0], [91.1, 3163.0], [91.2, 3163.0], [91.3, 3163.0], [91.4, 3163.0], [91.5, 3163.0], [91.6, 3163.0], [91.7, 3163.0], [91.8, 3163.0], [91.9, 3163.0], [92.0, 3168.0], [92.1, 3168.0], [92.2, 3168.0], [92.3, 3168.0], [92.4, 3168.0], [92.5, 3168.0], [92.6, 3168.0], [92.7, 3168.0], [92.8, 3168.0], [92.9, 3168.0], [93.0, 3168.0], [93.1, 3168.0], [93.2, 3168.0], [93.3, 3168.0], [93.4, 3168.0], [93.5, 3168.0], [93.6, 3168.0], [93.7, 3168.0], [93.8, 3168.0], [93.9, 3168.0], [94.0, 3170.0], [94.1, 3170.0], [94.2, 3170.0], [94.3, 3170.0], [94.4, 3170.0], [94.5, 3170.0], [94.6, 3170.0], [94.7, 3170.0], [94.8, 3170.0], [94.9, 3170.0], [95.0, 3183.0], [95.1, 3183.0], [95.2, 3183.0], [95.3, 3183.0], [95.4, 3183.0], [95.5, 3183.0], [95.6, 3183.0], [95.7, 3183.0], [95.8, 3183.0], [95.9, 3183.0], [96.0, 3261.0], [96.1, 3261.0], [96.2, 3261.0], [96.3, 3261.0], [96.4, 3261.0], [96.5, 3261.0], [96.6, 3261.0], [96.7, 3261.0], [96.8, 3261.0], [96.9, 3261.0], [97.0, 3347.0], [97.1, 3347.0], [97.2, 3347.0], [97.3, 3347.0], [97.4, 3347.0], [97.5, 3347.0], [97.6, 3347.0], [97.7, 3347.0], [97.8, 3347.0], [97.9, 3347.0], [98.0, 3382.0], [98.1, 3382.0], [98.2, 3382.0], [98.3, 3382.0], [98.4, 3382.0], [98.5, 3382.0], [98.6, 3382.0], [98.7, 3382.0], [98.8, 3382.0], [98.9, 3382.0], [99.0, 3593.0], [99.1, 3593.0], [99.2, 3593.0], [99.3, 3593.0], [99.4, 3593.0], [99.5, 3593.0], [99.6, 3593.0], [99.7, 3593.0], [99.8, 3593.0], [99.9, 3593.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[0.0, 3685.0], [0.1, 3685.0], [0.2, 3685.0], [0.3, 3685.0], [0.4, 3685.0], [0.5, 3685.0], [0.6, 3685.0], [0.7, 3685.0], [0.8, 3685.0], [0.9, 3685.0], [1.0, 3767.0], [1.1, 3767.0], [1.2, 3767.0], [1.3, 3767.0], [1.4, 3767.0], [1.5, 3767.0], [1.6, 3767.0], [1.7, 3767.0], [1.8, 3767.0], [1.9, 3767.0], [2.0, 3790.0], [2.1, 3790.0], [2.2, 3790.0], [2.3, 3790.0], [2.4, 3790.0], [2.5, 3790.0], [2.6, 3790.0], [2.7, 3790.0], [2.8, 3790.0], [2.9, 3790.0], [3.0, 3793.0], [3.1, 3793.0], [3.2, 3793.0], [3.3, 3793.0], [3.4, 3793.0], [3.5, 3793.0], [3.6, 3793.0], [3.7, 3793.0], [3.8, 3793.0], [3.9, 3793.0], [4.0, 3803.0], [4.1, 3803.0], [4.2, 3803.0], [4.3, 3803.0], [4.4, 3803.0], [4.5, 3803.0], [4.6, 3803.0], [4.7, 3803.0], [4.8, 3803.0], [4.9, 3803.0], [5.0, 3849.0], [5.1, 3849.0], [5.2, 3849.0], [5.3, 3849.0], [5.4, 3849.0], [5.5, 3849.0], [5.6, 3849.0], [5.7, 3849.0], [5.8, 3849.0], [5.9, 3849.0], [6.0, 3860.0], [6.1, 3860.0], [6.2, 3860.0], [6.3, 3860.0], [6.4, 3860.0], [6.5, 3860.0], [6.6, 3860.0], [6.7, 3860.0], [6.8, 3860.0], [6.9, 3860.0], [7.0, 3862.0], [7.1, 3862.0], [7.2, 3862.0], [7.3, 3862.0], [7.4, 3862.0], [7.5, 3862.0], [7.6, 3862.0], [7.7, 3862.0], [7.8, 3862.0], [7.9, 3862.0], [8.0, 3863.0], [8.1, 3863.0], [8.2, 3863.0], [8.3, 3863.0], [8.4, 3863.0], [8.5, 3863.0], [8.6, 3863.0], [8.7, 3863.0], [8.8, 3863.0], [8.9, 3863.0], [9.0, 3871.0], [9.1, 3871.0], [9.2, 3871.0], [9.3, 3871.0], [9.4, 3871.0], [9.5, 3871.0], [9.6, 3871.0], [9.7, 3871.0], [9.8, 3871.0], [9.9, 3871.0], [10.0, 3907.0], [10.1, 3907.0], [10.2, 3907.0], [10.3, 3907.0], [10.4, 3907.0], [10.5, 3907.0], [10.6, 3907.0], [10.7, 3907.0], [10.8, 3907.0], [10.9, 3907.0], [11.0, 3916.0], [11.1, 3916.0], [11.2, 3916.0], [11.3, 3916.0], [11.4, 3916.0], [11.5, 3916.0], [11.6, 3916.0], [11.7, 3916.0], [11.8, 3916.0], [11.9, 3916.0], [12.0, 3918.0], [12.1, 3918.0], [12.2, 3918.0], [12.3, 3918.0], [12.4, 3918.0], [12.5, 3918.0], [12.6, 3918.0], [12.7, 3918.0], [12.8, 3918.0], [12.9, 3918.0], [13.0, 3923.0], [13.1, 3923.0], [13.2, 3923.0], [13.3, 3923.0], [13.4, 3923.0], [13.5, 3923.0], [13.6, 3923.0], [13.7, 3923.0], [13.8, 3923.0], [13.9, 3923.0], [14.0, 3928.0], [14.1, 3928.0], [14.2, 3928.0], [14.3, 3928.0], [14.4, 3928.0], [14.5, 3928.0], [14.6, 3928.0], [14.7, 3928.0], [14.8, 3928.0], [14.9, 3928.0], [15.0, 3935.0], [15.1, 3935.0], [15.2, 3935.0], [15.3, 3935.0], [15.4, 3935.0], [15.5, 3935.0], [15.6, 3935.0], [15.7, 3935.0], [15.8, 3935.0], [15.9, 3935.0], [16.0, 3953.0], [16.1, 3953.0], [16.2, 3953.0], [16.3, 3953.0], [16.4, 3953.0], [16.5, 3953.0], [16.6, 3953.0], [16.7, 3953.0], [16.8, 3953.0], [16.9, 3953.0], [17.0, 3958.0], [17.1, 3958.0], [17.2, 3958.0], [17.3, 3958.0], [17.4, 3958.0], [17.5, 3958.0], [17.6, 3958.0], [17.7, 3958.0], [17.8, 3958.0], [17.9, 3958.0], [18.0, 3960.0], [18.1, 3960.0], [18.2, 3960.0], [18.3, 3960.0], [18.4, 3960.0], [18.5, 3960.0], [18.6, 3960.0], [18.7, 3960.0], [18.8, 3960.0], [18.9, 3960.0], [19.0, 3970.0], [19.1, 3970.0], [19.2, 3970.0], [19.3, 3970.0], [19.4, 3970.0], [19.5, 3970.0], [19.6, 3970.0], [19.7, 3970.0], [19.8, 3970.0], [19.9, 3970.0], [20.0, 3985.0], [20.1, 3985.0], [20.2, 3985.0], [20.3, 3985.0], [20.4, 3985.0], [20.5, 3985.0], [20.6, 3985.0], [20.7, 3985.0], [20.8, 3985.0], [20.9, 3985.0], [21.0, 3987.0], [21.1, 3987.0], [21.2, 3987.0], [21.3, 3987.0], [21.4, 3987.0], [21.5, 3987.0], [21.6, 3987.0], [21.7, 3987.0], [21.8, 3987.0], [21.9, 3987.0], [22.0, 3991.0], [22.1, 3991.0], [22.2, 3991.0], [22.3, 3991.0], [22.4, 3991.0], [22.5, 3991.0], [22.6, 3991.0], [22.7, 3991.0], [22.8, 3991.0], [22.9, 3991.0], [23.0, 3994.0], [23.1, 3994.0], [23.2, 3994.0], [23.3, 3994.0], [23.4, 3994.0], [23.5, 3994.0], [23.6, 3994.0], [23.7, 3994.0], [23.8, 3994.0], [23.9, 3994.0], [24.0, 3999.0], [24.1, 3999.0], [24.2, 3999.0], [24.3, 3999.0], [24.4, 3999.0], [24.5, 3999.0], [24.6, 3999.0], [24.7, 3999.0], [24.8, 3999.0], [24.9, 3999.0], [25.0, 4014.0], [25.1, 4014.0], [25.2, 4014.0], [25.3, 4014.0], [25.4, 4014.0], [25.5, 4014.0], [25.6, 4014.0], [25.7, 4014.0], [25.8, 4014.0], [25.9, 4014.0], [26.0, 4016.0], [26.1, 4016.0], [26.2, 4016.0], [26.3, 4016.0], [26.4, 4016.0], [26.5, 4016.0], [26.6, 4016.0], [26.7, 4016.0], [26.8, 4016.0], [26.9, 4016.0], [27.0, 4019.0], [27.1, 4019.0], [27.2, 4019.0], [27.3, 4019.0], [27.4, 4019.0], [27.5, 4019.0], [27.6, 4019.0], [27.7, 4019.0], [27.8, 4019.0], [27.9, 4019.0], [28.0, 4019.0], [28.1, 4019.0], [28.2, 4019.0], [28.3, 4019.0], [28.4, 4019.0], [28.5, 4019.0], [28.6, 4019.0], [28.7, 4019.0], [28.8, 4019.0], [28.9, 4019.0], [29.0, 4028.0], [29.1, 4028.0], [29.2, 4028.0], [29.3, 4028.0], [29.4, 4028.0], [29.5, 4028.0], [29.6, 4028.0], [29.7, 4028.0], [29.8, 4028.0], [29.9, 4028.0], [30.0, 4043.0], [30.1, 4043.0], [30.2, 4043.0], [30.3, 4043.0], [30.4, 4043.0], [30.5, 4043.0], [30.6, 4043.0], [30.7, 4043.0], [30.8, 4043.0], [30.9, 4043.0], [31.0, 4043.0], [31.1, 4043.0], [31.2, 4043.0], [31.3, 4043.0], [31.4, 4043.0], [31.5, 4043.0], [31.6, 4043.0], [31.7, 4043.0], [31.8, 4043.0], [31.9, 4043.0], [32.0, 4045.0], [32.1, 4045.0], [32.2, 4045.0], [32.3, 4045.0], [32.4, 4045.0], [32.5, 4045.0], [32.6, 4045.0], [32.7, 4045.0], [32.8, 4045.0], [32.9, 4045.0], [33.0, 4052.0], [33.1, 4052.0], [33.2, 4052.0], [33.3, 4052.0], [33.4, 4052.0], [33.5, 4052.0], [33.6, 4052.0], [33.7, 4052.0], [33.8, 4052.0], [33.9, 4052.0], [34.0, 4056.0], [34.1, 4056.0], [34.2, 4056.0], [34.3, 4056.0], [34.4, 4056.0], [34.5, 4056.0], [34.6, 4056.0], [34.7, 4056.0], [34.8, 4056.0], [34.9, 4056.0], [35.0, 4066.0], [35.1, 4066.0], [35.2, 4066.0], [35.3, 4066.0], [35.4, 4066.0], [35.5, 4066.0], [35.6, 4066.0], [35.7, 4066.0], [35.8, 4066.0], [35.9, 4066.0], [36.0, 4070.0], [36.1, 4070.0], [36.2, 4070.0], [36.3, 4070.0], [36.4, 4070.0], [36.5, 4070.0], [36.6, 4070.0], [36.7, 4070.0], [36.8, 4070.0], [36.9, 4070.0], [37.0, 4082.0], [37.1, 4082.0], [37.2, 4082.0], [37.3, 4082.0], [37.4, 4082.0], [37.5, 4082.0], [37.6, 4082.0], [37.7, 4082.0], [37.8, 4082.0], [37.9, 4082.0], [38.0, 4083.0], [38.1, 4083.0], [38.2, 4083.0], [38.3, 4083.0], [38.4, 4083.0], [38.5, 4083.0], [38.6, 4083.0], [38.7, 4083.0], [38.8, 4083.0], [38.9, 4083.0], [39.0, 4086.0], [39.1, 4086.0], [39.2, 4086.0], [39.3, 4086.0], [39.4, 4086.0], [39.5, 4086.0], [39.6, 4086.0], [39.7, 4086.0], [39.8, 4086.0], [39.9, 4086.0], [40.0, 4090.0], [40.1, 4090.0], [40.2, 4090.0], [40.3, 4090.0], [40.4, 4090.0], [40.5, 4090.0], [40.6, 4090.0], [40.7, 4090.0], [40.8, 4090.0], [40.9, 4090.0], [41.0, 4099.0], [41.1, 4099.0], [41.2, 4099.0], [41.3, 4099.0], [41.4, 4099.0], [41.5, 4099.0], [41.6, 4099.0], [41.7, 4099.0], [41.8, 4099.0], [41.9, 4099.0], [42.0, 4101.0], [42.1, 4101.0], [42.2, 4101.0], [42.3, 4101.0], [42.4, 4101.0], [42.5, 4101.0], [42.6, 4101.0], [42.7, 4101.0], [42.8, 4101.0], [42.9, 4101.0], [43.0, 4104.0], [43.1, 4104.0], [43.2, 4104.0], [43.3, 4104.0], [43.4, 4104.0], [43.5, 4104.0], [43.6, 4104.0], [43.7, 4104.0], [43.8, 4104.0], [43.9, 4104.0], [44.0, 4112.0], [44.1, 4112.0], [44.2, 4112.0], [44.3, 4112.0], [44.4, 4112.0], [44.5, 4112.0], [44.6, 4112.0], [44.7, 4112.0], [44.8, 4112.0], [44.9, 4112.0], [45.0, 4115.0], [45.1, 4115.0], [45.2, 4115.0], [45.3, 4115.0], [45.4, 4115.0], [45.5, 4115.0], [45.6, 4115.0], [45.7, 4115.0], [45.8, 4115.0], [45.9, 4115.0], [46.0, 4116.0], [46.1, 4116.0], [46.2, 4116.0], [46.3, 4116.0], [46.4, 4116.0], [46.5, 4116.0], [46.6, 4116.0], [46.7, 4116.0], [46.8, 4116.0], [46.9, 4116.0], [47.0, 4116.0], [47.1, 4116.0], [47.2, 4116.0], [47.3, 4116.0], [47.4, 4116.0], [47.5, 4116.0], [47.6, 4116.0], [47.7, 4116.0], [47.8, 4116.0], [47.9, 4116.0], [48.0, 4122.0], [48.1, 4122.0], [48.2, 4122.0], [48.3, 4122.0], [48.4, 4122.0], [48.5, 4122.0], [48.6, 4122.0], [48.7, 4122.0], [48.8, 4122.0], [48.9, 4122.0], [49.0, 4123.0], [49.1, 4123.0], [49.2, 4123.0], [49.3, 4123.0], [49.4, 4123.0], [49.5, 4123.0], [49.6, 4123.0], [49.7, 4123.0], [49.8, 4123.0], [49.9, 4123.0], [50.0, 4131.0], [50.1, 4131.0], [50.2, 4131.0], [50.3, 4131.0], [50.4, 4131.0], [50.5, 4131.0], [50.6, 4131.0], [50.7, 4131.0], [50.8, 4131.0], [50.9, 4131.0], [51.0, 4143.0], [51.1, 4143.0], [51.2, 4143.0], [51.3, 4143.0], [51.4, 4143.0], [51.5, 4143.0], [51.6, 4143.0], [51.7, 4143.0], [51.8, 4143.0], [51.9, 4143.0], [52.0, 4147.0], [52.1, 4147.0], [52.2, 4147.0], [52.3, 4147.0], [52.4, 4147.0], [52.5, 4147.0], [52.6, 4147.0], [52.7, 4147.0], [52.8, 4147.0], [52.9, 4147.0], [53.0, 4154.0], [53.1, 4154.0], [53.2, 4154.0], [53.3, 4154.0], [53.4, 4154.0], [53.5, 4154.0], [53.6, 4154.0], [53.7, 4154.0], [53.8, 4154.0], [53.9, 4154.0], [54.0, 4159.0], [54.1, 4159.0], [54.2, 4159.0], [54.3, 4159.0], [54.4, 4159.0], [54.5, 4159.0], [54.6, 4159.0], [54.7, 4159.0], [54.8, 4159.0], [54.9, 4159.0], [55.0, 4172.0], [55.1, 4172.0], [55.2, 4172.0], [55.3, 4172.0], [55.4, 4172.0], [55.5, 4172.0], [55.6, 4172.0], [55.7, 4172.0], [55.8, 4172.0], [55.9, 4172.0], [56.0, 4173.0], [56.1, 4173.0], [56.2, 4173.0], [56.3, 4173.0], [56.4, 4173.0], [56.5, 4173.0], [56.6, 4173.0], [56.7, 4173.0], [56.8, 4173.0], [56.9, 4173.0], [57.0, 4175.0], [57.1, 4175.0], [57.2, 4175.0], [57.3, 4175.0], [57.4, 4175.0], [57.5, 4175.0], [57.6, 4175.0], [57.7, 4175.0], [57.8, 4175.0], [57.9, 4175.0], [58.0, 4184.0], [58.1, 4184.0], [58.2, 4184.0], [58.3, 4184.0], [58.4, 4184.0], [58.5, 4184.0], [58.6, 4184.0], [58.7, 4184.0], [58.8, 4184.0], [58.9, 4184.0], [59.0, 4195.0], [59.1, 4195.0], [59.2, 4195.0], [59.3, 4195.0], [59.4, 4195.0], [59.5, 4195.0], [59.6, 4195.0], [59.7, 4195.0], [59.8, 4195.0], [59.9, 4195.0], [60.0, 4196.0], [60.1, 4196.0], [60.2, 4196.0], [60.3, 4196.0], [60.4, 4196.0], [60.5, 4196.0], [60.6, 4196.0], [60.7, 4196.0], [60.8, 4196.0], [60.9, 4196.0], [61.0, 4198.0], [61.1, 4198.0], [61.2, 4198.0], [61.3, 4198.0], [61.4, 4198.0], [61.5, 4198.0], [61.6, 4198.0], [61.7, 4198.0], [61.8, 4198.0], [61.9, 4198.0], [62.0, 4203.0], [62.1, 4203.0], [62.2, 4203.0], [62.3, 4203.0], [62.4, 4203.0], [62.5, 4203.0], [62.6, 4203.0], [62.7, 4203.0], [62.8, 4203.0], [62.9, 4203.0], [63.0, 4215.0], [63.1, 4215.0], [63.2, 4215.0], [63.3, 4215.0], [63.4, 4215.0], [63.5, 4215.0], [63.6, 4215.0], [63.7, 4215.0], [63.8, 4215.0], [63.9, 4215.0], [64.0, 4217.0], [64.1, 4217.0], [64.2, 4217.0], [64.3, 4217.0], [64.4, 4217.0], [64.5, 4217.0], [64.6, 4217.0], [64.7, 4217.0], [64.8, 4217.0], [64.9, 4217.0], [65.0, 4221.0], [65.1, 4221.0], [65.2, 4221.0], [65.3, 4221.0], [65.4, 4221.0], [65.5, 4221.0], [65.6, 4221.0], [65.7, 4221.0], [65.8, 4221.0], [65.9, 4221.0], [66.0, 4234.0], [66.1, 4234.0], [66.2, 4234.0], [66.3, 4234.0], [66.4, 4234.0], [66.5, 4234.0], [66.6, 4234.0], [66.7, 4234.0], [66.8, 4234.0], [66.9, 4234.0], [67.0, 4235.0], [67.1, 4235.0], [67.2, 4235.0], [67.3, 4235.0], [67.4, 4235.0], [67.5, 4235.0], [67.6, 4235.0], [67.7, 4235.0], [67.8, 4235.0], [67.9, 4235.0], [68.0, 4238.0], [68.1, 4238.0], [68.2, 4238.0], [68.3, 4238.0], [68.4, 4238.0], [68.5, 4238.0], [68.6, 4238.0], [68.7, 4238.0], [68.8, 4238.0], [68.9, 4238.0], [69.0, 4240.0], [69.1, 4240.0], [69.2, 4240.0], [69.3, 4240.0], [69.4, 4240.0], [69.5, 4240.0], [69.6, 4240.0], [69.7, 4240.0], [69.8, 4240.0], [69.9, 4240.0], [70.0, 4242.0], [70.1, 4242.0], [70.2, 4242.0], [70.3, 4242.0], [70.4, 4242.0], [70.5, 4242.0], [70.6, 4242.0], [70.7, 4242.0], [70.8, 4242.0], [70.9, 4242.0], [71.0, 4248.0], [71.1, 4248.0], [71.2, 4248.0], [71.3, 4248.0], [71.4, 4248.0], [71.5, 4248.0], [71.6, 4248.0], [71.7, 4248.0], [71.8, 4248.0], [71.9, 4248.0], [72.0, 4251.0], [72.1, 4251.0], [72.2, 4251.0], [72.3, 4251.0], [72.4, 4251.0], [72.5, 4251.0], [72.6, 4251.0], [72.7, 4251.0], [72.8, 4251.0], [72.9, 4251.0], [73.0, 4255.0], [73.1, 4255.0], [73.2, 4255.0], [73.3, 4255.0], [73.4, 4255.0], [73.5, 4255.0], [73.6, 4255.0], [73.7, 4255.0], [73.8, 4255.0], [73.9, 4255.0], [74.0, 4255.0], [74.1, 4255.0], [74.2, 4255.0], [74.3, 4255.0], [74.4, 4255.0], [74.5, 4255.0], [74.6, 4255.0], [74.7, 4255.0], [74.8, 4255.0], [74.9, 4255.0], [75.0, 4264.0], [75.1, 4264.0], [75.2, 4264.0], [75.3, 4264.0], [75.4, 4264.0], [75.5, 4264.0], [75.6, 4264.0], [75.7, 4264.0], [75.8, 4264.0], [75.9, 4264.0], [76.0, 4268.0], [76.1, 4268.0], [76.2, 4268.0], [76.3, 4268.0], [76.4, 4268.0], [76.5, 4268.0], [76.6, 4268.0], [76.7, 4268.0], [76.8, 4268.0], [76.9, 4268.0], [77.0, 4283.0], [77.1, 4283.0], [77.2, 4283.0], [77.3, 4283.0], [77.4, 4283.0], [77.5, 4283.0], [77.6, 4283.0], [77.7, 4283.0], [77.8, 4283.0], [77.9, 4283.0], [78.0, 4298.0], [78.1, 4298.0], [78.2, 4298.0], [78.3, 4298.0], [78.4, 4298.0], [78.5, 4298.0], [78.6, 4298.0], [78.7, 4298.0], [78.8, 4298.0], [78.9, 4298.0], [79.0, 4303.0], [79.1, 4303.0], [79.2, 4303.0], [79.3, 4303.0], [79.4, 4303.0], [79.5, 4303.0], [79.6, 4303.0], [79.7, 4303.0], [79.8, 4303.0], [79.9, 4303.0], [80.0, 4305.0], [80.1, 4305.0], [80.2, 4305.0], [80.3, 4305.0], [80.4, 4305.0], [80.5, 4305.0], [80.6, 4305.0], [80.7, 4305.0], [80.8, 4305.0], [80.9, 4305.0], [81.0, 4311.0], [81.1, 4311.0], [81.2, 4311.0], [81.3, 4311.0], [81.4, 4311.0], [81.5, 4311.0], [81.6, 4311.0], [81.7, 4311.0], [81.8, 4311.0], [81.9, 4311.0], [82.0, 4320.0], [82.1, 4320.0], [82.2, 4320.0], [82.3, 4320.0], [82.4, 4320.0], [82.5, 4320.0], [82.6, 4320.0], [82.7, 4320.0], [82.8, 4320.0], [82.9, 4320.0], [83.0, 4346.0], [83.1, 4346.0], [83.2, 4346.0], [83.3, 4346.0], [83.4, 4346.0], [83.5, 4346.0], [83.6, 4346.0], [83.7, 4346.0], [83.8, 4346.0], [83.9, 4346.0], [84.0, 4349.0], [84.1, 4349.0], [84.2, 4349.0], [84.3, 4349.0], [84.4, 4349.0], [84.5, 4349.0], [84.6, 4349.0], [84.7, 4349.0], [84.8, 4349.0], [84.9, 4349.0], [85.0, 4380.0], [85.1, 4380.0], [85.2, 4380.0], [85.3, 4380.0], [85.4, 4380.0], [85.5, 4380.0], [85.6, 4380.0], [85.7, 4380.0], [85.8, 4380.0], [85.9, 4380.0], [86.0, 4382.0], [86.1, 4382.0], [86.2, 4382.0], [86.3, 4382.0], [86.4, 4382.0], [86.5, 4382.0], [86.6, 4382.0], [86.7, 4382.0], [86.8, 4382.0], [86.9, 4382.0], [87.0, 4405.0], [87.1, 4405.0], [87.2, 4405.0], [87.3, 4405.0], [87.4, 4405.0], [87.5, 4405.0], [87.6, 4405.0], [87.7, 4405.0], [87.8, 4405.0], [87.9, 4405.0], [88.0, 4407.0], [88.1, 4407.0], [88.2, 4407.0], [88.3, 4407.0], [88.4, 4407.0], [88.5, 4407.0], [88.6, 4407.0], [88.7, 4407.0], [88.8, 4407.0], [88.9, 4407.0], [89.0, 4418.0], [89.1, 4418.0], [89.2, 4418.0], [89.3, 4418.0], [89.4, 4418.0], [89.5, 4418.0], [89.6, 4418.0], [89.7, 4418.0], [89.8, 4418.0], [89.9, 4418.0], [90.0, 4431.0], [90.1, 4431.0], [90.2, 4431.0], [90.3, 4431.0], [90.4, 4431.0], [90.5, 4431.0], [90.6, 4431.0], [90.7, 4431.0], [90.8, 4431.0], [90.9, 4431.0], [91.0, 4441.0], [91.1, 4441.0], [91.2, 4441.0], [91.3, 4441.0], [91.4, 4441.0], [91.5, 4441.0], [91.6, 4441.0], [91.7, 4441.0], [91.8, 4441.0], [91.9, 4441.0], [92.0, 4448.0], [92.1, 4448.0], [92.2, 4448.0], [92.3, 4448.0], [92.4, 4448.0], [92.5, 4448.0], [92.6, 4448.0], [92.7, 4448.0], [92.8, 4448.0], [92.9, 4448.0], [93.0, 4455.0], [93.1, 4455.0], [93.2, 4455.0], [93.3, 4455.0], [93.4, 4455.0], [93.5, 4455.0], [93.6, 4455.0], [93.7, 4455.0], [93.8, 4455.0], [93.9, 4455.0], [94.0, 4465.0], [94.1, 4465.0], [94.2, 4465.0], [94.3, 4465.0], [94.4, 4465.0], [94.5, 4465.0], [94.6, 4465.0], [94.7, 4465.0], [94.8, 4465.0], [94.9, 4465.0], [95.0, 4498.0], [95.1, 4498.0], [95.2, 4498.0], [95.3, 4498.0], [95.4, 4498.0], [95.5, 4498.0], [95.6, 4498.0], [95.7, 4498.0], [95.8, 4498.0], [95.9, 4498.0], [96.0, 4540.0], [96.1, 4540.0], [96.2, 4540.0], [96.3, 4540.0], [96.4, 4540.0], [96.5, 4540.0], [96.6, 4540.0], [96.7, 4540.0], [96.8, 4540.0], [96.9, 4540.0], [97.0, 4616.0], [97.1, 4616.0], [97.2, 4616.0], [97.3, 4616.0], [97.4, 4616.0], [97.5, 4616.0], [97.6, 4616.0], [97.7, 4616.0], [97.8, 4616.0], [97.9, 4616.0], [98.0, 4632.0], [98.1, 4632.0], [98.2, 4632.0], [98.3, 4632.0], [98.4, 4632.0], [98.5, 4632.0], [98.6, 4632.0], [98.7, 4632.0], [98.8, 4632.0], [98.9, 4632.0], [99.0, 5420.0], [99.1, 5420.0], [99.2, 5420.0], [99.3, 5420.0], [99.4, 5420.0], [99.5, 5420.0], [99.6, 5420.0], [99.7, 5420.0], [99.8, 5420.0], [99.9, 5420.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[0.0, 8171.0], [0.1, 8171.0], [0.2, 8171.0], [0.3, 8171.0], [0.4, 8171.0], [0.5, 8171.0], [0.6, 8171.0], [0.7, 8171.0], [0.8, 8171.0], [0.9, 8171.0], [1.0, 8264.0], [1.1, 8264.0], [1.2, 8264.0], [1.3, 8264.0], [1.4, 8264.0], [1.5, 8264.0], [1.6, 8264.0], [1.7, 8264.0], [1.8, 8264.0], [1.9, 8264.0], [2.0, 8269.0], [2.1, 8269.0], [2.2, 8269.0], [2.3, 8269.0], [2.4, 8269.0], [2.5, 8269.0], [2.6, 8269.0], [2.7, 8269.0], [2.8, 8269.0], [2.9, 8269.0], [3.0, 8286.0], [3.1, 8286.0], [3.2, 8286.0], [3.3, 8286.0], [3.4, 8286.0], [3.5, 8286.0], [3.6, 8286.0], [3.7, 8286.0], [3.8, 8286.0], [3.9, 8286.0], [4.0, 8312.0], [4.1, 8312.0], [4.2, 8312.0], [4.3, 8312.0], [4.4, 8312.0], [4.5, 8312.0], [4.6, 8312.0], [4.7, 8312.0], [4.8, 8312.0], [4.9, 8312.0], [5.0, 8327.0], [5.1, 8327.0], [5.2, 8327.0], [5.3, 8327.0], [5.4, 8327.0], [5.5, 8327.0], [5.6, 8327.0], [5.7, 8327.0], [5.8, 8327.0], [5.9, 8327.0], [6.0, 8353.0], [6.1, 8353.0], [6.2, 8353.0], [6.3, 8353.0], [6.4, 8353.0], [6.5, 8353.0], [6.6, 8353.0], [6.7, 8353.0], [6.8, 8353.0], [6.9, 8353.0], [7.0, 8354.0], [7.1, 8354.0], [7.2, 8354.0], [7.3, 8354.0], [7.4, 8354.0], [7.5, 8354.0], [7.6, 8354.0], [7.7, 8354.0], [7.8, 8354.0], [7.9, 8354.0], [8.0, 8361.0], [8.1, 8361.0], [8.2, 8361.0], [8.3, 8361.0], [8.4, 8361.0], [8.5, 8361.0], [8.6, 8361.0], [8.7, 8361.0], [8.8, 8361.0], [8.9, 8361.0], [9.0, 8376.0], [9.1, 8376.0], [9.2, 8376.0], [9.3, 8376.0], [9.4, 8376.0], [9.5, 8376.0], [9.6, 8376.0], [9.7, 8376.0], [9.8, 8376.0], [9.9, 8376.0], [10.0, 8379.0], [10.1, 8379.0], [10.2, 8379.0], [10.3, 8379.0], [10.4, 8379.0], [10.5, 8379.0], [10.6, 8379.0], [10.7, 8379.0], [10.8, 8379.0], [10.9, 8379.0], [11.0, 8384.0], [11.1, 8384.0], [11.2, 8384.0], [11.3, 8384.0], [11.4, 8384.0], [11.5, 8384.0], [11.6, 8384.0], [11.7, 8384.0], [11.8, 8384.0], [11.9, 8384.0], [12.0, 8387.0], [12.1, 8387.0], [12.2, 8387.0], [12.3, 8387.0], [12.4, 8387.0], [12.5, 8387.0], [12.6, 8387.0], [12.7, 8387.0], [12.8, 8387.0], [12.9, 8387.0], [13.0, 8414.0], [13.1, 8414.0], [13.2, 8414.0], [13.3, 8414.0], [13.4, 8414.0], [13.5, 8414.0], [13.6, 8414.0], [13.7, 8414.0], [13.8, 8414.0], [13.9, 8414.0], [14.0, 8436.0], [14.1, 8436.0], [14.2, 8436.0], [14.3, 8436.0], [14.4, 8436.0], [14.5, 8436.0], [14.6, 8436.0], [14.7, 8436.0], [14.8, 8436.0], [14.9, 8436.0], [15.0, 8451.0], [15.1, 8451.0], [15.2, 8451.0], [15.3, 8451.0], [15.4, 8451.0], [15.5, 8451.0], [15.6, 8451.0], [15.7, 8451.0], [15.8, 8451.0], [15.9, 8451.0], [16.0, 8461.0], [16.1, 8461.0], [16.2, 8461.0], [16.3, 8461.0], [16.4, 8461.0], [16.5, 8461.0], [16.6, 8461.0], [16.7, 8461.0], [16.8, 8461.0], [16.9, 8461.0], [17.0, 8469.0], [17.1, 8469.0], [17.2, 8469.0], [17.3, 8469.0], [17.4, 8469.0], [17.5, 8469.0], [17.6, 8469.0], [17.7, 8469.0], [17.8, 8469.0], [17.9, 8469.0], [18.0, 8481.0], [18.1, 8481.0], [18.2, 8481.0], [18.3, 8481.0], [18.4, 8481.0], [18.5, 8481.0], [18.6, 8481.0], [18.7, 8481.0], [18.8, 8481.0], [18.9, 8481.0], [19.0, 8492.0], [19.1, 8492.0], [19.2, 8492.0], [19.3, 8492.0], [19.4, 8492.0], [19.5, 8492.0], [19.6, 8492.0], [19.7, 8492.0], [19.8, 8492.0], [19.9, 8492.0], [20.0, 8515.0], [20.1, 8515.0], [20.2, 8515.0], [20.3, 8515.0], [20.4, 8515.0], [20.5, 8515.0], [20.6, 8515.0], [20.7, 8515.0], [20.8, 8515.0], [20.9, 8515.0], [21.0, 8528.0], [21.1, 8528.0], [21.2, 8528.0], [21.3, 8528.0], [21.4, 8528.0], [21.5, 8528.0], [21.6, 8528.0], [21.7, 8528.0], [21.8, 8528.0], [21.9, 8528.0], [22.0, 8546.0], [22.1, 8546.0], [22.2, 8546.0], [22.3, 8546.0], [22.4, 8546.0], [22.5, 8546.0], [22.6, 8546.0], [22.7, 8546.0], [22.8, 8546.0], [22.9, 8546.0], [23.0, 8548.0], [23.1, 8548.0], [23.2, 8548.0], [23.3, 8548.0], [23.4, 8548.0], [23.5, 8548.0], [23.6, 8548.0], [23.7, 8548.0], [23.8, 8548.0], [23.9, 8548.0], [24.0, 8554.0], [24.1, 8554.0], [24.2, 8554.0], [24.3, 8554.0], [24.4, 8554.0], [24.5, 8554.0], [24.6, 8554.0], [24.7, 8554.0], [24.8, 8554.0], [24.9, 8554.0], [25.0, 8564.0], [25.1, 8564.0], [25.2, 8564.0], [25.3, 8564.0], [25.4, 8564.0], [25.5, 8564.0], [25.6, 8564.0], [25.7, 8564.0], [25.8, 8564.0], [25.9, 8564.0], [26.0, 8571.0], [26.1, 8571.0], [26.2, 8571.0], [26.3, 8571.0], [26.4, 8571.0], [26.5, 8571.0], [26.6, 8571.0], [26.7, 8571.0], [26.8, 8571.0], [26.9, 8571.0], [27.0, 8589.0], [27.1, 8589.0], [27.2, 8589.0], [27.3, 8589.0], [27.4, 8589.0], [27.5, 8589.0], [27.6, 8589.0], [27.7, 8589.0], [27.8, 8589.0], [27.9, 8589.0], [28.0, 8595.0], [28.1, 8595.0], [28.2, 8595.0], [28.3, 8595.0], [28.4, 8595.0], [28.5, 8595.0], [28.6, 8595.0], [28.7, 8595.0], [28.8, 8595.0], [28.9, 8595.0], [29.0, 8597.0], [29.1, 8597.0], [29.2, 8597.0], [29.3, 8597.0], [29.4, 8597.0], [29.5, 8597.0], [29.6, 8597.0], [29.7, 8597.0], [29.8, 8597.0], [29.9, 8597.0], [30.0, 8624.0], [30.1, 8624.0], [30.2, 8624.0], [30.3, 8624.0], [30.4, 8624.0], [30.5, 8624.0], [30.6, 8624.0], [30.7, 8624.0], [30.8, 8624.0], [30.9, 8624.0], [31.0, 8625.0], [31.1, 8625.0], [31.2, 8625.0], [31.3, 8625.0], [31.4, 8625.0], [31.5, 8625.0], [31.6, 8625.0], [31.7, 8625.0], [31.8, 8625.0], [31.9, 8625.0], [32.0, 8629.0], [32.1, 8629.0], [32.2, 8629.0], [32.3, 8629.0], [32.4, 8629.0], [32.5, 8629.0], [32.6, 8629.0], [32.7, 8629.0], [32.8, 8629.0], [32.9, 8629.0], [33.0, 8642.0], [33.1, 8642.0], [33.2, 8642.0], [33.3, 8642.0], [33.4, 8642.0], [33.5, 8642.0], [33.6, 8642.0], [33.7, 8642.0], [33.8, 8642.0], [33.9, 8642.0], [34.0, 8657.0], [34.1, 8657.0], [34.2, 8657.0], [34.3, 8657.0], [34.4, 8657.0], [34.5, 8657.0], [34.6, 8657.0], [34.7, 8657.0], [34.8, 8657.0], [34.9, 8657.0], [35.0, 8664.0], [35.1, 8664.0], [35.2, 8664.0], [35.3, 8664.0], [35.4, 8664.0], [35.5, 8664.0], [35.6, 8664.0], [35.7, 8664.0], [35.8, 8664.0], [35.9, 8664.0], [36.0, 8669.0], [36.1, 8669.0], [36.2, 8669.0], [36.3, 8669.0], [36.4, 8669.0], [36.5, 8669.0], [36.6, 8669.0], [36.7, 8669.0], [36.8, 8669.0], [36.9, 8669.0], [37.0, 8678.0], [37.1, 8678.0], [37.2, 8678.0], [37.3, 8678.0], [37.4, 8678.0], [37.5, 8678.0], [37.6, 8678.0], [37.7, 8678.0], [37.8, 8678.0], [37.9, 8678.0], [38.0, 8681.0], [38.1, 8681.0], [38.2, 8681.0], [38.3, 8681.0], [38.4, 8681.0], [38.5, 8681.0], [38.6, 8681.0], [38.7, 8681.0], [38.8, 8681.0], [38.9, 8681.0], [39.0, 8683.0], [39.1, 8683.0], [39.2, 8683.0], [39.3, 8683.0], [39.4, 8683.0], [39.5, 8683.0], [39.6, 8683.0], [39.7, 8683.0], [39.8, 8683.0], [39.9, 8683.0], [40.0, 8708.0], [40.1, 8708.0], [40.2, 8708.0], [40.3, 8708.0], [40.4, 8708.0], [40.5, 8708.0], [40.6, 8708.0], [40.7, 8708.0], [40.8, 8708.0], [40.9, 8708.0], [41.0, 8713.0], [41.1, 8713.0], [41.2, 8713.0], [41.3, 8713.0], [41.4, 8713.0], [41.5, 8713.0], [41.6, 8713.0], [41.7, 8713.0], [41.8, 8713.0], [41.9, 8713.0], [42.0, 8716.0], [42.1, 8716.0], [42.2, 8716.0], [42.3, 8716.0], [42.4, 8716.0], [42.5, 8716.0], [42.6, 8716.0], [42.7, 8716.0], [42.8, 8716.0], [42.9, 8716.0], [43.0, 8722.0], [43.1, 8722.0], [43.2, 8722.0], [43.3, 8722.0], [43.4, 8722.0], [43.5, 8722.0], [43.6, 8722.0], [43.7, 8722.0], [43.8, 8722.0], [43.9, 8722.0], [44.0, 8732.0], [44.1, 8732.0], [44.2, 8732.0], [44.3, 8732.0], [44.4, 8732.0], [44.5, 8732.0], [44.6, 8732.0], [44.7, 8732.0], [44.8, 8732.0], [44.9, 8732.0], [45.0, 8743.0], [45.1, 8743.0], [45.2, 8743.0], [45.3, 8743.0], [45.4, 8743.0], [45.5, 8743.0], [45.6, 8743.0], [45.7, 8743.0], [45.8, 8743.0], [45.9, 8743.0], [46.0, 8745.0], [46.1, 8745.0], [46.2, 8745.0], [46.3, 8745.0], [46.4, 8745.0], [46.5, 8745.0], [46.6, 8745.0], [46.7, 8745.0], [46.8, 8745.0], [46.9, 8745.0], [47.0, 8749.0], [47.1, 8749.0], [47.2, 8749.0], [47.3, 8749.0], [47.4, 8749.0], [47.5, 8749.0], [47.6, 8749.0], [47.7, 8749.0], [47.8, 8749.0], [47.9, 8749.0], [48.0, 8754.0], [48.1, 8754.0], [48.2, 8754.0], [48.3, 8754.0], [48.4, 8754.0], [48.5, 8754.0], [48.6, 8754.0], [48.7, 8754.0], [48.8, 8754.0], [48.9, 8754.0], [49.0, 8760.0], [49.1, 8760.0], [49.2, 8760.0], [49.3, 8760.0], [49.4, 8760.0], [49.5, 8760.0], [49.6, 8760.0], [49.7, 8760.0], [49.8, 8760.0], [49.9, 8760.0], [50.0, 8784.0], [50.1, 8784.0], [50.2, 8784.0], [50.3, 8784.0], [50.4, 8784.0], [50.5, 8784.0], [50.6, 8784.0], [50.7, 8784.0], [50.8, 8784.0], [50.9, 8784.0], [51.0, 8787.0], [51.1, 8787.0], [51.2, 8787.0], [51.3, 8787.0], [51.4, 8787.0], [51.5, 8787.0], [51.6, 8787.0], [51.7, 8787.0], [51.8, 8787.0], [51.9, 8787.0], [52.0, 8799.0], [52.1, 8799.0], [52.2, 8799.0], [52.3, 8799.0], [52.4, 8799.0], [52.5, 8799.0], [52.6, 8799.0], [52.7, 8799.0], [52.8, 8799.0], [52.9, 8799.0], [53.0, 8800.0], [53.1, 8800.0], [53.2, 8800.0], [53.3, 8800.0], [53.4, 8800.0], [53.5, 8800.0], [53.6, 8800.0], [53.7, 8800.0], [53.8, 8800.0], [53.9, 8800.0], [54.0, 8803.0], [54.1, 8803.0], [54.2, 8803.0], [54.3, 8803.0], [54.4, 8803.0], [54.5, 8803.0], [54.6, 8803.0], [54.7, 8803.0], [54.8, 8803.0], [54.9, 8803.0], [55.0, 8820.0], [55.1, 8820.0], [55.2, 8820.0], [55.3, 8820.0], [55.4, 8820.0], [55.5, 8820.0], [55.6, 8820.0], [55.7, 8820.0], [55.8, 8820.0], [55.9, 8820.0], [56.0, 8821.0], [56.1, 8821.0], [56.2, 8821.0], [56.3, 8821.0], [56.4, 8821.0], [56.5, 8821.0], [56.6, 8821.0], [56.7, 8821.0], [56.8, 8821.0], [56.9, 8821.0], [57.0, 8826.0], [57.1, 8826.0], [57.2, 8826.0], [57.3, 8826.0], [57.4, 8826.0], [57.5, 8826.0], [57.6, 8826.0], [57.7, 8826.0], [57.8, 8826.0], [57.9, 8826.0], [58.0, 8839.0], [58.1, 8839.0], [58.2, 8839.0], [58.3, 8839.0], [58.4, 8839.0], [58.5, 8839.0], [58.6, 8839.0], [58.7, 8839.0], [58.8, 8839.0], [58.9, 8839.0], [59.0, 8845.0], [59.1, 8845.0], [59.2, 8845.0], [59.3, 8845.0], [59.4, 8845.0], [59.5, 8845.0], [59.6, 8845.0], [59.7, 8845.0], [59.8, 8845.0], [59.9, 8845.0], [60.0, 8858.0], [60.1, 8858.0], [60.2, 8858.0], [60.3, 8858.0], [60.4, 8858.0], [60.5, 8858.0], [60.6, 8858.0], [60.7, 8858.0], [60.8, 8858.0], [60.9, 8858.0], [61.0, 8861.0], [61.1, 8861.0], [61.2, 8861.0], [61.3, 8861.0], [61.4, 8861.0], [61.5, 8861.0], [61.6, 8861.0], [61.7, 8861.0], [61.8, 8861.0], [61.9, 8861.0], [62.0, 8862.0], [62.1, 8862.0], [62.2, 8862.0], [62.3, 8862.0], [62.4, 8862.0], [62.5, 8862.0], [62.6, 8862.0], [62.7, 8862.0], [62.8, 8862.0], [62.9, 8862.0], [63.0, 8863.0], [63.1, 8863.0], [63.2, 8863.0], [63.3, 8863.0], [63.4, 8863.0], [63.5, 8863.0], [63.6, 8863.0], [63.7, 8863.0], [63.8, 8863.0], [63.9, 8863.0], [64.0, 8871.0], [64.1, 8871.0], [64.2, 8871.0], [64.3, 8871.0], [64.4, 8871.0], [64.5, 8871.0], [64.6, 8871.0], [64.7, 8871.0], [64.8, 8871.0], [64.9, 8871.0], [65.0, 8872.0], [65.1, 8872.0], [65.2, 8872.0], [65.3, 8872.0], [65.4, 8872.0], [65.5, 8872.0], [65.6, 8872.0], [65.7, 8872.0], [65.8, 8872.0], [65.9, 8872.0], [66.0, 8878.0], [66.1, 8878.0], [66.2, 8878.0], [66.3, 8878.0], [66.4, 8878.0], [66.5, 8878.0], [66.6, 8878.0], [66.7, 8878.0], [66.8, 8878.0], [66.9, 8878.0], [67.0, 8879.0], [67.1, 8879.0], [67.2, 8879.0], [67.3, 8879.0], [67.4, 8879.0], [67.5, 8879.0], [67.6, 8879.0], [67.7, 8879.0], [67.8, 8879.0], [67.9, 8879.0], [68.0, 8885.0], [68.1, 8885.0], [68.2, 8885.0], [68.3, 8885.0], [68.4, 8885.0], [68.5, 8885.0], [68.6, 8885.0], [68.7, 8885.0], [68.8, 8885.0], [68.9, 8885.0], [69.0, 8887.0], [69.1, 8887.0], [69.2, 8887.0], [69.3, 8887.0], [69.4, 8887.0], [69.5, 8887.0], [69.6, 8887.0], [69.7, 8887.0], [69.8, 8887.0], [69.9, 8887.0], [70.0, 8889.0], [70.1, 8889.0], [70.2, 8889.0], [70.3, 8889.0], [70.4, 8889.0], [70.5, 8889.0], [70.6, 8889.0], [70.7, 8889.0], [70.8, 8889.0], [70.9, 8889.0], [71.0, 8890.0], [71.1, 8890.0], [71.2, 8890.0], [71.3, 8890.0], [71.4, 8890.0], [71.5, 8890.0], [71.6, 8890.0], [71.7, 8890.0], [71.8, 8890.0], [71.9, 8890.0], [72.0, 8897.0], [72.1, 8897.0], [72.2, 8897.0], [72.3, 8897.0], [72.4, 8897.0], [72.5, 8897.0], [72.6, 8897.0], [72.7, 8897.0], [72.8, 8897.0], [72.9, 8897.0], [73.0, 8913.0], [73.1, 8913.0], [73.2, 8913.0], [73.3, 8913.0], [73.4, 8913.0], [73.5, 8913.0], [73.6, 8913.0], [73.7, 8913.0], [73.8, 8913.0], [73.9, 8913.0], [74.0, 8931.0], [74.1, 8931.0], [74.2, 8931.0], [74.3, 8931.0], [74.4, 8931.0], [74.5, 8931.0], [74.6, 8931.0], [74.7, 8931.0], [74.8, 8931.0], [74.9, 8931.0], [75.0, 8939.0], [75.1, 8939.0], [75.2, 8939.0], [75.3, 8939.0], [75.4, 8939.0], [75.5, 8939.0], [75.6, 8939.0], [75.7, 8939.0], [75.8, 8939.0], [75.9, 8939.0], [76.0, 8942.0], [76.1, 8942.0], [76.2, 8942.0], [76.3, 8942.0], [76.4, 8942.0], [76.5, 8942.0], [76.6, 8942.0], [76.7, 8942.0], [76.8, 8942.0], [76.9, 8942.0], [77.0, 8949.0], [77.1, 8949.0], [77.2, 8949.0], [77.3, 8949.0], [77.4, 8949.0], [77.5, 8949.0], [77.6, 8949.0], [77.7, 8949.0], [77.8, 8949.0], [77.9, 8949.0], [78.0, 8962.0], [78.1, 8962.0], [78.2, 8962.0], [78.3, 8962.0], [78.4, 8962.0], [78.5, 8962.0], [78.6, 8962.0], [78.7, 8962.0], [78.8, 8962.0], [78.9, 8962.0], [79.0, 8964.0], [79.1, 8964.0], [79.2, 8964.0], [79.3, 8964.0], [79.4, 8964.0], [79.5, 8964.0], [79.6, 8964.0], [79.7, 8964.0], [79.8, 8964.0], [79.9, 8964.0], [80.0, 8970.0], [80.1, 8970.0], [80.2, 8970.0], [80.3, 8970.0], [80.4, 8970.0], [80.5, 8970.0], [80.6, 8970.0], [80.7, 8970.0], [80.8, 8970.0], [80.9, 8970.0], [81.0, 8970.0], [81.1, 8970.0], [81.2, 8970.0], [81.3, 8970.0], [81.4, 8970.0], [81.5, 8970.0], [81.6, 8970.0], [81.7, 8970.0], [81.8, 8970.0], [81.9, 8970.0], [82.0, 8976.0], [82.1, 8976.0], [82.2, 8976.0], [82.3, 8976.0], [82.4, 8976.0], [82.5, 8976.0], [82.6, 8976.0], [82.7, 8976.0], [82.8, 8976.0], [82.9, 8976.0], [83.0, 8982.0], [83.1, 8982.0], [83.2, 8982.0], [83.3, 8982.0], [83.4, 8982.0], [83.5, 8982.0], [83.6, 8982.0], [83.7, 8982.0], [83.8, 8982.0], [83.9, 8982.0], [84.0, 8999.0], [84.1, 8999.0], [84.2, 8999.0], [84.3, 8999.0], [84.4, 8999.0], [84.5, 8999.0], [84.6, 8999.0], [84.7, 8999.0], [84.8, 8999.0], [84.9, 8999.0], [85.0, 9005.0], [85.1, 9005.0], [85.2, 9005.0], [85.3, 9005.0], [85.4, 9005.0], [85.5, 9005.0], [85.6, 9005.0], [85.7, 9005.0], [85.8, 9005.0], [85.9, 9005.0], [86.0, 9008.0], [86.1, 9008.0], [86.2, 9008.0], [86.3, 9008.0], [86.4, 9008.0], [86.5, 9008.0], [86.6, 9008.0], [86.7, 9008.0], [86.8, 9008.0], [86.9, 9008.0], [87.0, 9022.0], [87.1, 9022.0], [87.2, 9022.0], [87.3, 9022.0], [87.4, 9022.0], [87.5, 9022.0], [87.6, 9022.0], [87.7, 9022.0], [87.8, 9022.0], [87.9, 9022.0], [88.0, 9038.0], [88.1, 9038.0], [88.2, 9038.0], [88.3, 9038.0], [88.4, 9038.0], [88.5, 9038.0], [88.6, 9038.0], [88.7, 9038.0], [88.8, 9038.0], [88.9, 9038.0], [89.0, 9045.0], [89.1, 9045.0], [89.2, 9045.0], [89.3, 9045.0], [89.4, 9045.0], [89.5, 9045.0], [89.6, 9045.0], [89.7, 9045.0], [89.8, 9045.0], [89.9, 9045.0], [90.0, 9070.0], [90.1, 9070.0], [90.2, 9070.0], [90.3, 9070.0], [90.4, 9070.0], [90.5, 9070.0], [90.6, 9070.0], [90.7, 9070.0], [90.8, 9070.0], [90.9, 9070.0], [91.0, 9079.0], [91.1, 9079.0], [91.2, 9079.0], [91.3, 9079.0], [91.4, 9079.0], [91.5, 9079.0], [91.6, 9079.0], [91.7, 9079.0], [91.8, 9079.0], [91.9, 9079.0], [92.0, 9112.0], [92.1, 9112.0], [92.2, 9112.0], [92.3, 9112.0], [92.4, 9112.0], [92.5, 9112.0], [92.6, 9112.0], [92.7, 9112.0], [92.8, 9112.0], [92.9, 9112.0], [93.0, 9138.0], [93.1, 9138.0], [93.2, 9138.0], [93.3, 9138.0], [93.4, 9138.0], [93.5, 9138.0], [93.6, 9138.0], [93.7, 9138.0], [93.8, 9138.0], [93.9, 9138.0], [94.0, 9173.0], [94.1, 9173.0], [94.2, 9173.0], [94.3, 9173.0], [94.4, 9173.0], [94.5, 9173.0], [94.6, 9173.0], [94.7, 9173.0], [94.8, 9173.0], [94.9, 9173.0], [95.0, 9197.0], [95.1, 9197.0], [95.2, 9197.0], [95.3, 9197.0], [95.4, 9197.0], [95.5, 9197.0], [95.6, 9197.0], [95.7, 9197.0], [95.8, 9197.0], [95.9, 9197.0], [96.0, 9225.0], [96.1, 9225.0], [96.2, 9225.0], [96.3, 9225.0], [96.4, 9225.0], [96.5, 9225.0], [96.6, 9225.0], [96.7, 9225.0], [96.8, 9225.0], [96.9, 9225.0], [97.0, 9234.0], [97.1, 9234.0], [97.2, 9234.0], [97.3, 9234.0], [97.4, 9234.0], [97.5, 9234.0], [97.6, 9234.0], [97.7, 9234.0], [97.8, 9234.0], [97.9, 9234.0], [98.0, 9581.0], [98.1, 9581.0], [98.2, 9581.0], [98.3, 9581.0], [98.4, 9581.0], [98.5, 9581.0], [98.6, 9581.0], [98.7, 9581.0], [98.8, 9581.0], [98.9, 9581.0], [99.0, 9608.0], [99.1, 9608.0], [99.2, 9608.0], [99.3, 9608.0], [99.4, 9608.0], [99.5, 9608.0], [99.6, 9608.0], [99.7, 9608.0], [99.8, 9608.0], [99.9, 9608.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[0.0, 387.0], [0.1, 387.0], [0.2, 387.0], [0.3, 387.0], [0.4, 387.0], [0.5, 387.0], [0.6, 387.0], [0.7, 387.0], [0.8, 387.0], [0.9, 387.0], [1.0, 391.0], [1.1, 391.0], [1.2, 391.0], [1.3, 391.0], [1.4, 391.0], [1.5, 391.0], [1.6, 391.0], [1.7, 391.0], [1.8, 391.0], [1.9, 391.0], [2.0, 391.0], [2.1, 391.0], [2.2, 391.0], [2.3, 391.0], [2.4, 391.0], [2.5, 391.0], [2.6, 391.0], [2.7, 391.0], [2.8, 391.0], [2.9, 391.0], [3.0, 398.0], [3.1, 398.0], [3.2, 398.0], [3.3, 398.0], [3.4, 398.0], [3.5, 398.0], [3.6, 398.0], [3.7, 398.0], [3.8, 398.0], [3.9, 398.0], [4.0, 401.0], [4.1, 401.0], [4.2, 401.0], [4.3, 401.0], [4.4, 401.0], [4.5, 401.0], [4.6, 401.0], [4.7, 401.0], [4.8, 401.0], [4.9, 401.0], [5.0, 408.0], [5.1, 408.0], [5.2, 408.0], [5.3, 408.0], [5.4, 408.0], [5.5, 408.0], [5.6, 408.0], [5.7, 408.0], [5.8, 408.0], [5.9, 408.0], [6.0, 419.0], [6.1, 419.0], [6.2, 419.0], [6.3, 419.0], [6.4, 419.0], [6.5, 419.0], [6.6, 419.0], [6.7, 419.0], [6.8, 419.0], [6.9, 419.0], [7.0, 422.0], [7.1, 422.0], [7.2, 422.0], [7.3, 422.0], [7.4, 422.0], [7.5, 422.0], [7.6, 422.0], [7.7, 422.0], [7.8, 422.0], [7.9, 422.0], [8.0, 424.0], [8.1, 424.0], [8.2, 424.0], [8.3, 424.0], [8.4, 424.0], [8.5, 424.0], [8.6, 424.0], [8.7, 424.0], [8.8, 424.0], [8.9, 424.0], [9.0, 431.0], [9.1, 431.0], [9.2, 431.0], [9.3, 431.0], [9.4, 431.0], [9.5, 431.0], [9.6, 431.0], [9.7, 431.0], [9.8, 431.0], [9.9, 431.0], [10.0, 432.0], [10.1, 432.0], [10.2, 432.0], [10.3, 432.0], [10.4, 432.0], [10.5, 432.0], [10.6, 432.0], [10.7, 432.0], [10.8, 432.0], [10.9, 432.0], [11.0, 432.0], [11.1, 432.0], [11.2, 432.0], [11.3, 432.0], [11.4, 432.0], [11.5, 432.0], [11.6, 432.0], [11.7, 432.0], [11.8, 432.0], [11.9, 432.0], [12.0, 432.0], [12.1, 432.0], [12.2, 432.0], [12.3, 432.0], [12.4, 432.0], [12.5, 432.0], [12.6, 432.0], [12.7, 432.0], [12.8, 432.0], [12.9, 432.0], [13.0, 433.0], [13.1, 433.0], [13.2, 433.0], [13.3, 433.0], [13.4, 433.0], [13.5, 433.0], [13.6, 433.0], [13.7, 433.0], [13.8, 433.0], [13.9, 433.0], [14.0, 435.0], [14.1, 435.0], [14.2, 435.0], [14.3, 435.0], [14.4, 435.0], [14.5, 435.0], [14.6, 435.0], [14.7, 435.0], [14.8, 435.0], [14.9, 435.0], [15.0, 436.0], [15.1, 436.0], [15.2, 436.0], [15.3, 436.0], [15.4, 436.0], [15.5, 436.0], [15.6, 436.0], [15.7, 436.0], [15.8, 436.0], [15.9, 436.0], [16.0, 436.0], [16.1, 436.0], [16.2, 436.0], [16.3, 436.0], [16.4, 436.0], [16.5, 436.0], [16.6, 436.0], [16.7, 436.0], [16.8, 436.0], [16.9, 436.0], [17.0, 436.0], [17.1, 436.0], [17.2, 436.0], [17.3, 436.0], [17.4, 436.0], [17.5, 436.0], [17.6, 436.0], [17.7, 436.0], [17.8, 436.0], [17.9, 436.0], [18.0, 436.0], [18.1, 436.0], [18.2, 436.0], [18.3, 436.0], [18.4, 436.0], [18.5, 436.0], [18.6, 436.0], [18.7, 436.0], [18.8, 436.0], [18.9, 436.0], [19.0, 436.0], [19.1, 436.0], [19.2, 436.0], [19.3, 436.0], [19.4, 436.0], [19.5, 436.0], [19.6, 436.0], [19.7, 436.0], [19.8, 436.0], [19.9, 436.0], [20.0, 437.0], [20.1, 437.0], [20.2, 437.0], [20.3, 437.0], [20.4, 437.0], [20.5, 437.0], [20.6, 437.0], [20.7, 437.0], [20.8, 437.0], [20.9, 437.0], [21.0, 439.0], [21.1, 439.0], [21.2, 439.0], [21.3, 439.0], [21.4, 439.0], [21.5, 439.0], [21.6, 439.0], [21.7, 439.0], [21.8, 439.0], [21.9, 439.0], [22.0, 440.0], [22.1, 440.0], [22.2, 440.0], [22.3, 440.0], [22.4, 440.0], [22.5, 440.0], [22.6, 440.0], [22.7, 440.0], [22.8, 440.0], [22.9, 440.0], [23.0, 440.0], [23.1, 440.0], [23.2, 440.0], [23.3, 440.0], [23.4, 440.0], [23.5, 440.0], [23.6, 440.0], [23.7, 440.0], [23.8, 440.0], [23.9, 440.0], [24.0, 440.0], [24.1, 440.0], [24.2, 440.0], [24.3, 440.0], [24.4, 440.0], [24.5, 440.0], [24.6, 440.0], [24.7, 440.0], [24.8, 440.0], [24.9, 440.0], [25.0, 440.0], [25.1, 440.0], [25.2, 440.0], [25.3, 440.0], [25.4, 440.0], [25.5, 440.0], [25.6, 440.0], [25.7, 440.0], [25.8, 440.0], [25.9, 440.0], [26.0, 440.0], [26.1, 440.0], [26.2, 440.0], [26.3, 440.0], [26.4, 440.0], [26.5, 440.0], [26.6, 440.0], [26.7, 440.0], [26.8, 440.0], [26.9, 440.0], [27.0, 440.0], [27.1, 440.0], [27.2, 440.0], [27.3, 440.0], [27.4, 440.0], [27.5, 440.0], [27.6, 440.0], [27.7, 440.0], [27.8, 440.0], [27.9, 440.0], [28.0, 440.0], [28.1, 440.0], [28.2, 440.0], [28.3, 440.0], [28.4, 440.0], [28.5, 440.0], [28.6, 440.0], [28.7, 440.0], [28.8, 440.0], [28.9, 440.0], [29.0, 441.0], [29.1, 441.0], [29.2, 441.0], [29.3, 441.0], [29.4, 441.0], [29.5, 441.0], [29.6, 441.0], [29.7, 441.0], [29.8, 441.0], [29.9, 441.0], [30.0, 441.0], [30.1, 441.0], [30.2, 441.0], [30.3, 441.0], [30.4, 441.0], [30.5, 441.0], [30.6, 441.0], [30.7, 441.0], [30.8, 441.0], [30.9, 441.0], [31.0, 443.0], [31.1, 443.0], [31.2, 443.0], [31.3, 443.0], [31.4, 443.0], [31.5, 443.0], [31.6, 443.0], [31.7, 443.0], [31.8, 443.0], [31.9, 443.0], [32.0, 444.0], [32.1, 444.0], [32.2, 444.0], [32.3, 444.0], [32.4, 444.0], [32.5, 444.0], [32.6, 444.0], [32.7, 444.0], [32.8, 444.0], [32.9, 444.0], [33.0, 444.0], [33.1, 444.0], [33.2, 444.0], [33.3, 444.0], [33.4, 444.0], [33.5, 444.0], [33.6, 444.0], [33.7, 444.0], [33.8, 444.0], [33.9, 444.0], [34.0, 444.0], [34.1, 444.0], [34.2, 444.0], [34.3, 444.0], [34.4, 444.0], [34.5, 444.0], [34.6, 444.0], [34.7, 444.0], [34.8, 444.0], [34.9, 444.0], [35.0, 447.0], [35.1, 447.0], [35.2, 447.0], [35.3, 447.0], [35.4, 447.0], [35.5, 447.0], [35.6, 447.0], [35.7, 447.0], [35.8, 447.0], [35.9, 447.0], [36.0, 449.0], [36.1, 449.0], [36.2, 449.0], [36.3, 449.0], [36.4, 449.0], [36.5, 449.0], [36.6, 449.0], [36.7, 449.0], [36.8, 449.0], [36.9, 449.0], [37.0, 451.0], [37.1, 451.0], [37.2, 451.0], [37.3, 451.0], [37.4, 451.0], [37.5, 451.0], [37.6, 451.0], [37.7, 451.0], [37.8, 451.0], [37.9, 451.0], [38.0, 451.0], [38.1, 451.0], [38.2, 451.0], [38.3, 451.0], [38.4, 451.0], [38.5, 451.0], [38.6, 451.0], [38.7, 451.0], [38.8, 451.0], [38.9, 451.0], [39.0, 452.0], [39.1, 452.0], [39.2, 452.0], [39.3, 452.0], [39.4, 452.0], [39.5, 452.0], [39.6, 452.0], [39.7, 452.0], [39.8, 452.0], [39.9, 452.0], [40.0, 455.0], [40.1, 455.0], [40.2, 455.0], [40.3, 455.0], [40.4, 455.0], [40.5, 455.0], [40.6, 455.0], [40.7, 455.0], [40.8, 455.0], [40.9, 455.0], [41.0, 456.0], [41.1, 456.0], [41.2, 456.0], [41.3, 456.0], [41.4, 456.0], [41.5, 456.0], [41.6, 456.0], [41.7, 456.0], [41.8, 456.0], [41.9, 456.0], [42.0, 457.0], [42.1, 457.0], [42.2, 457.0], [42.3, 457.0], [42.4, 457.0], [42.5, 457.0], [42.6, 457.0], [42.7, 457.0], [42.8, 457.0], [42.9, 457.0], [43.0, 458.0], [43.1, 458.0], [43.2, 458.0], [43.3, 458.0], [43.4, 458.0], [43.5, 458.0], [43.6, 458.0], [43.7, 458.0], [43.8, 458.0], [43.9, 458.0], [44.0, 459.0], [44.1, 459.0], [44.2, 459.0], [44.3, 459.0], [44.4, 459.0], [44.5, 459.0], [44.6, 459.0], [44.7, 459.0], [44.8, 459.0], [44.9, 459.0], [45.0, 460.0], [45.1, 460.0], [45.2, 460.0], [45.3, 460.0], [45.4, 460.0], [45.5, 460.0], [45.6, 460.0], [45.7, 460.0], [45.8, 460.0], [45.9, 460.0], [46.0, 464.0], [46.1, 464.0], [46.2, 464.0], [46.3, 464.0], [46.4, 464.0], [46.5, 464.0], [46.6, 464.0], [46.7, 464.0], [46.8, 464.0], [46.9, 464.0], [47.0, 464.0], [47.1, 464.0], [47.2, 464.0], [47.3, 464.0], [47.4, 464.0], [47.5, 464.0], [47.6, 464.0], [47.7, 464.0], [47.8, 464.0], [47.9, 464.0], [48.0, 464.0], [48.1, 464.0], [48.2, 464.0], [48.3, 464.0], [48.4, 464.0], [48.5, 464.0], [48.6, 464.0], [48.7, 464.0], [48.8, 464.0], [48.9, 464.0], [49.0, 464.0], [49.1, 464.0], [49.2, 464.0], [49.3, 464.0], [49.4, 464.0], [49.5, 464.0], [49.6, 464.0], [49.7, 464.0], [49.8, 464.0], [49.9, 464.0], [50.0, 465.0], [50.1, 465.0], [50.2, 465.0], [50.3, 465.0], [50.4, 465.0], [50.5, 465.0], [50.6, 465.0], [50.7, 465.0], [50.8, 465.0], [50.9, 465.0], [51.0, 467.0], [51.1, 467.0], [51.2, 467.0], [51.3, 467.0], [51.4, 467.0], [51.5, 467.0], [51.6, 467.0], [51.7, 467.0], [51.8, 467.0], [51.9, 467.0], [52.0, 468.0], [52.1, 468.0], [52.2, 468.0], [52.3, 468.0], [52.4, 468.0], [52.5, 468.0], [52.6, 468.0], [52.7, 468.0], [52.8, 468.0], [52.9, 468.0], [53.0, 468.0], [53.1, 468.0], [53.2, 468.0], [53.3, 468.0], [53.4, 468.0], [53.5, 468.0], [53.6, 468.0], [53.7, 468.0], [53.8, 468.0], [53.9, 468.0], [54.0, 469.0], [54.1, 469.0], [54.2, 469.0], [54.3, 469.0], [54.4, 469.0], [54.5, 469.0], [54.6, 469.0], [54.7, 469.0], [54.8, 469.0], [54.9, 469.0], [55.0, 469.0], [55.1, 469.0], [55.2, 469.0], [55.3, 469.0], [55.4, 469.0], [55.5, 469.0], [55.6, 469.0], [55.7, 469.0], [55.8, 469.0], [55.9, 469.0], [56.0, 469.0], [56.1, 469.0], [56.2, 469.0], [56.3, 469.0], [56.4, 469.0], [56.5, 469.0], [56.6, 469.0], [56.7, 469.0], [56.8, 469.0], [56.9, 469.0], [57.0, 471.0], [57.1, 471.0], [57.2, 471.0], [57.3, 471.0], [57.4, 471.0], [57.5, 471.0], [57.6, 471.0], [57.7, 471.0], [57.8, 471.0], [57.9, 471.0], [58.0, 472.0], [58.1, 472.0], [58.2, 472.0], [58.3, 472.0], [58.4, 472.0], [58.5, 472.0], [58.6, 472.0], [58.7, 472.0], [58.8, 472.0], [58.9, 472.0], [59.0, 472.0], [59.1, 472.0], [59.2, 472.0], [59.3, 472.0], [59.4, 472.0], [59.5, 472.0], [59.6, 472.0], [59.7, 472.0], [59.8, 472.0], [59.9, 472.0], [60.0, 472.0], [60.1, 472.0], [60.2, 472.0], [60.3, 472.0], [60.4, 472.0], [60.5, 472.0], [60.6, 472.0], [60.7, 472.0], [60.8, 472.0], [60.9, 472.0], [61.0, 474.0], [61.1, 474.0], [61.2, 474.0], [61.3, 474.0], [61.4, 474.0], [61.5, 474.0], [61.6, 474.0], [61.7, 474.0], [61.8, 474.0], [61.9, 474.0], [62.0, 474.0], [62.1, 474.0], [62.2, 474.0], [62.3, 474.0], [62.4, 474.0], [62.5, 474.0], [62.6, 474.0], [62.7, 474.0], [62.8, 474.0], [62.9, 474.0], [63.0, 475.0], [63.1, 475.0], [63.2, 475.0], [63.3, 475.0], [63.4, 475.0], [63.5, 475.0], [63.6, 475.0], [63.7, 475.0], [63.8, 475.0], [63.9, 475.0], [64.0, 475.0], [64.1, 475.0], [64.2, 475.0], [64.3, 475.0], [64.4, 475.0], [64.5, 475.0], [64.6, 475.0], [64.7, 475.0], [64.8, 475.0], [64.9, 475.0], [65.0, 476.0], [65.1, 476.0], [65.2, 476.0], [65.3, 476.0], [65.4, 476.0], [65.5, 476.0], [65.6, 476.0], [65.7, 476.0], [65.8, 476.0], [65.9, 476.0], [66.0, 476.0], [66.1, 476.0], [66.2, 476.0], [66.3, 476.0], [66.4, 476.0], [66.5, 476.0], [66.6, 476.0], [66.7, 476.0], [66.8, 476.0], [66.9, 476.0], [67.0, 477.0], [67.1, 477.0], [67.2, 477.0], [67.3, 477.0], [67.4, 477.0], [67.5, 477.0], [67.6, 477.0], [67.7, 477.0], [67.8, 477.0], [67.9, 477.0], [68.0, 480.0], [68.1, 480.0], [68.2, 480.0], [68.3, 480.0], [68.4, 480.0], [68.5, 480.0], [68.6, 480.0], [68.7, 480.0], [68.8, 480.0], [68.9, 480.0], [69.0, 480.0], [69.1, 480.0], [69.2, 480.0], [69.3, 480.0], [69.4, 480.0], [69.5, 480.0], [69.6, 480.0], [69.7, 480.0], [69.8, 480.0], [69.9, 480.0], [70.0, 482.0], [70.1, 482.0], [70.2, 482.0], [70.3, 482.0], [70.4, 482.0], [70.5, 482.0], [70.6, 482.0], [70.7, 482.0], [70.8, 482.0], [70.9, 482.0], [71.0, 482.0], [71.1, 482.0], [71.2, 482.0], [71.3, 482.0], [71.4, 482.0], [71.5, 482.0], [71.6, 482.0], [71.7, 482.0], [71.8, 482.0], [71.9, 482.0], [72.0, 483.0], [72.1, 483.0], [72.2, 483.0], [72.3, 483.0], [72.4, 483.0], [72.5, 483.0], [72.6, 483.0], [72.7, 483.0], [72.8, 483.0], [72.9, 483.0], [73.0, 483.0], [73.1, 483.0], [73.2, 483.0], [73.3, 483.0], [73.4, 483.0], [73.5, 483.0], [73.6, 483.0], [73.7, 483.0], [73.8, 483.0], [73.9, 483.0], [74.0, 485.0], [74.1, 485.0], [74.2, 485.0], [74.3, 485.0], [74.4, 485.0], [74.5, 485.0], [74.6, 485.0], [74.7, 485.0], [74.8, 485.0], [74.9, 485.0], [75.0, 488.0], [75.1, 488.0], [75.2, 488.0], [75.3, 488.0], [75.4, 488.0], [75.5, 488.0], [75.6, 488.0], [75.7, 488.0], [75.8, 488.0], [75.9, 488.0], [76.0, 488.0], [76.1, 488.0], [76.2, 488.0], [76.3, 488.0], [76.4, 488.0], [76.5, 488.0], [76.6, 488.0], [76.7, 488.0], [76.8, 488.0], [76.9, 488.0], [77.0, 488.0], [77.1, 488.0], [77.2, 488.0], [77.3, 488.0], [77.4, 488.0], [77.5, 488.0], [77.6, 488.0], [77.7, 488.0], [77.8, 488.0], [77.9, 488.0], [78.0, 488.0], [78.1, 488.0], [78.2, 488.0], [78.3, 488.0], [78.4, 488.0], [78.5, 488.0], [78.6, 488.0], [78.7, 488.0], [78.8, 488.0], [78.9, 488.0], [79.0, 488.0], [79.1, 488.0], [79.2, 488.0], [79.3, 488.0], [79.4, 488.0], [79.5, 488.0], [79.6, 488.0], [79.7, 488.0], [79.8, 488.0], [79.9, 488.0], [80.0, 490.0], [80.1, 490.0], [80.2, 490.0], [80.3, 490.0], [80.4, 490.0], [80.5, 490.0], [80.6, 490.0], [80.7, 490.0], [80.8, 490.0], [80.9, 490.0], [81.0, 491.0], [81.1, 491.0], [81.2, 491.0], [81.3, 491.0], [81.4, 491.0], [81.5, 491.0], [81.6, 491.0], [81.7, 491.0], [81.8, 491.0], [81.9, 491.0], [82.0, 494.0], [82.1, 494.0], [82.2, 494.0], [82.3, 494.0], [82.4, 494.0], [82.5, 494.0], [82.6, 494.0], [82.7, 494.0], [82.8, 494.0], [82.9, 494.0], [83.0, 495.0], [83.1, 495.0], [83.2, 495.0], [83.3, 495.0], [83.4, 495.0], [83.5, 495.0], [83.6, 495.0], [83.7, 495.0], [83.8, 495.0], [83.9, 495.0], [84.0, 496.0], [84.1, 496.0], [84.2, 496.0], [84.3, 496.0], [84.4, 496.0], [84.5, 496.0], [84.6, 496.0], [84.7, 496.0], [84.8, 496.0], [84.9, 496.0], [85.0, 500.0], [85.1, 500.0], [85.2, 500.0], [85.3, 500.0], [85.4, 500.0], [85.5, 500.0], [85.6, 500.0], [85.7, 500.0], [85.8, 500.0], [85.9, 500.0], [86.0, 503.0], [86.1, 503.0], [86.2, 503.0], [86.3, 503.0], [86.4, 503.0], [86.5, 503.0], [86.6, 503.0], [86.7, 503.0], [86.8, 503.0], [86.9, 503.0], [87.0, 508.0], [87.1, 508.0], [87.2, 508.0], [87.3, 508.0], [87.4, 508.0], [87.5, 508.0], [87.6, 508.0], [87.7, 508.0], [87.8, 508.0], [87.9, 508.0], [88.0, 508.0], [88.1, 508.0], [88.2, 508.0], [88.3, 508.0], [88.4, 508.0], [88.5, 508.0], [88.6, 508.0], [88.7, 508.0], [88.8, 508.0], [88.9, 508.0], [89.0, 508.0], [89.1, 508.0], [89.2, 508.0], [89.3, 508.0], [89.4, 508.0], [89.5, 508.0], [89.6, 508.0], [89.7, 508.0], [89.8, 508.0], [89.9, 508.0], [90.0, 515.0], [90.1, 515.0], [90.2, 515.0], [90.3, 515.0], [90.4, 515.0], [90.5, 515.0], [90.6, 515.0], [90.7, 515.0], [90.8, 515.0], [90.9, 515.0], [91.0, 520.0], [91.1, 520.0], [91.2, 520.0], [91.3, 520.0], [91.4, 520.0], [91.5, 520.0], [91.6, 520.0], [91.7, 520.0], [91.8, 520.0], [91.9, 520.0], [92.0, 521.0], [92.1, 521.0], [92.2, 521.0], [92.3, 521.0], [92.4, 521.0], [92.5, 521.0], [92.6, 521.0], [92.7, 521.0], [92.8, 521.0], [92.9, 521.0], [93.0, 524.0], [93.1, 524.0], [93.2, 524.0], [93.3, 524.0], [93.4, 524.0], [93.5, 524.0], [93.6, 524.0], [93.7, 524.0], [93.8, 524.0], [93.9, 524.0], [94.0, 528.0], [94.1, 528.0], [94.2, 528.0], [94.3, 528.0], [94.4, 528.0], [94.5, 528.0], [94.6, 528.0], [94.7, 528.0], [94.8, 528.0], [94.9, 528.0], [95.0, 530.0], [95.1, 530.0], [95.2, 530.0], [95.3, 530.0], [95.4, 530.0], [95.5, 530.0], [95.6, 530.0], [95.7, 530.0], [95.8, 530.0], [95.9, 530.0], [96.0, 531.0], [96.1, 531.0], [96.2, 531.0], [96.3, 531.0], [96.4, 531.0], [96.5, 531.0], [96.6, 531.0], [96.7, 531.0], [96.8, 531.0], [96.9, 531.0], [97.0, 548.0], [97.1, 548.0], [97.2, 548.0], [97.3, 548.0], [97.4, 548.0], [97.5, 548.0], [97.6, 548.0], [97.7, 548.0], [97.8, 548.0], [97.9, 548.0], [98.0, 559.0], [98.1, 559.0], [98.2, 559.0], [98.3, 559.0], [98.4, 559.0], [98.5, 559.0], [98.6, 559.0], [98.7, 559.0], [98.8, 559.0], [98.9, 559.0], [99.0, 560.0], [99.1, 560.0], [99.2, 560.0], [99.3, 560.0], [99.4, 560.0], [99.5, 560.0], [99.6, 560.0], [99.7, 560.0], [99.8, 560.0], [99.9, 560.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[0.0, 2822.0], [0.1, 2822.0], [0.2, 2822.0], [0.3, 2822.0], [0.4, 2822.0], [0.5, 2822.0], [0.6, 2822.0], [0.7, 2822.0], [0.8, 2822.0], [0.9, 2822.0], [1.0, 2878.0], [1.1, 2878.0], [1.2, 2878.0], [1.3, 2878.0], [1.4, 2878.0], [1.5, 2878.0], [1.6, 2878.0], [1.7, 2878.0], [1.8, 2878.0], [1.9, 2878.0], [2.0, 2967.0], [2.1, 2967.0], [2.2, 2967.0], [2.3, 2967.0], [2.4, 2967.0], [2.5, 2967.0], [2.6, 2967.0], [2.7, 2967.0], [2.8, 2967.0], [2.9, 2967.0], [3.0, 2986.0], [3.1, 2986.0], [3.2, 2986.0], [3.3, 2986.0], [3.4, 2986.0], [3.5, 2986.0], [3.6, 2986.0], [3.7, 2986.0], [3.8, 2986.0], [3.9, 2986.0], [4.0, 2987.0], [4.1, 2987.0], [4.2, 2987.0], [4.3, 2987.0], [4.4, 2987.0], [4.5, 2987.0], [4.6, 2987.0], [4.7, 2987.0], [4.8, 2987.0], [4.9, 2987.0], [5.0, 3003.0], [5.1, 3003.0], [5.2, 3003.0], [5.3, 3003.0], [5.4, 3003.0], [5.5, 3003.0], [5.6, 3003.0], [5.7, 3003.0], [5.8, 3003.0], [5.9, 3003.0], [6.0, 3007.0], [6.1, 3007.0], [6.2, 3007.0], [6.3, 3007.0], [6.4, 3007.0], [6.5, 3007.0], [6.6, 3007.0], [6.7, 3007.0], [6.8, 3007.0], [6.9, 3007.0], [7.0, 3024.0], [7.1, 3024.0], [7.2, 3024.0], [7.3, 3024.0], [7.4, 3024.0], [7.5, 3024.0], [7.6, 3024.0], [7.7, 3024.0], [7.8, 3024.0], [7.9, 3024.0], [8.0, 3024.0], [8.1, 3024.0], [8.2, 3024.0], [8.3, 3024.0], [8.4, 3024.0], [8.5, 3024.0], [8.6, 3024.0], [8.7, 3024.0], [8.8, 3024.0], [8.9, 3024.0], [9.0, 3033.0], [9.1, 3033.0], [9.2, 3033.0], [9.3, 3033.0], [9.4, 3033.0], [9.5, 3033.0], [9.6, 3033.0], [9.7, 3033.0], [9.8, 3033.0], [9.9, 3033.0], [10.0, 3035.0], [10.1, 3035.0], [10.2, 3035.0], [10.3, 3035.0], [10.4, 3035.0], [10.5, 3035.0], [10.6, 3035.0], [10.7, 3035.0], [10.8, 3035.0], [10.9, 3035.0], [11.0, 3037.0], [11.1, 3037.0], [11.2, 3037.0], [11.3, 3037.0], [11.4, 3037.0], [11.5, 3037.0], [11.6, 3037.0], [11.7, 3037.0], [11.8, 3037.0], [11.9, 3037.0], [12.0, 3044.0], [12.1, 3044.0], [12.2, 3044.0], [12.3, 3044.0], [12.4, 3044.0], [12.5, 3044.0], [12.6, 3044.0], [12.7, 3044.0], [12.8, 3044.0], [12.9, 3044.0], [13.0, 3045.0], [13.1, 3045.0], [13.2, 3045.0], [13.3, 3045.0], [13.4, 3045.0], [13.5, 3045.0], [13.6, 3045.0], [13.7, 3045.0], [13.8, 3045.0], [13.9, 3045.0], [14.0, 3061.0], [14.1, 3061.0], [14.2, 3061.0], [14.3, 3061.0], [14.4, 3061.0], [14.5, 3061.0], [14.6, 3061.0], [14.7, 3061.0], [14.8, 3061.0], [14.9, 3061.0], [15.0, 3066.0], [15.1, 3066.0], [15.2, 3066.0], [15.3, 3066.0], [15.4, 3066.0], [15.5, 3066.0], [15.6, 3066.0], [15.7, 3066.0], [15.8, 3066.0], [15.9, 3066.0], [16.0, 3066.0], [16.1, 3066.0], [16.2, 3066.0], [16.3, 3066.0], [16.4, 3066.0], [16.5, 3066.0], [16.6, 3066.0], [16.7, 3066.0], [16.8, 3066.0], [16.9, 3066.0], [17.0, 3068.0], [17.1, 3068.0], [17.2, 3068.0], [17.3, 3068.0], [17.4, 3068.0], [17.5, 3068.0], [17.6, 3068.0], [17.7, 3068.0], [17.8, 3068.0], [17.9, 3068.0], [18.0, 3071.0], [18.1, 3071.0], [18.2, 3071.0], [18.3, 3071.0], [18.4, 3071.0], [18.5, 3071.0], [18.6, 3071.0], [18.7, 3071.0], [18.8, 3071.0], [18.9, 3071.0], [19.0, 3074.0], [19.1, 3074.0], [19.2, 3074.0], [19.3, 3074.0], [19.4, 3074.0], [19.5, 3074.0], [19.6, 3074.0], [19.7, 3074.0], [19.8, 3074.0], [19.9, 3074.0], [20.0, 3075.0], [20.1, 3075.0], [20.2, 3075.0], [20.3, 3075.0], [20.4, 3075.0], [20.5, 3075.0], [20.6, 3075.0], [20.7, 3075.0], [20.8, 3075.0], [20.9, 3075.0], [21.0, 3077.0], [21.1, 3077.0], [21.2, 3077.0], [21.3, 3077.0], [21.4, 3077.0], [21.5, 3077.0], [21.6, 3077.0], [21.7, 3077.0], [21.8, 3077.0], [21.9, 3077.0], [22.0, 3082.0], [22.1, 3082.0], [22.2, 3082.0], [22.3, 3082.0], [22.4, 3082.0], [22.5, 3082.0], [22.6, 3082.0], [22.7, 3082.0], [22.8, 3082.0], [22.9, 3082.0], [23.0, 3086.0], [23.1, 3086.0], [23.2, 3086.0], [23.3, 3086.0], [23.4, 3086.0], [23.5, 3086.0], [23.6, 3086.0], [23.7, 3086.0], [23.8, 3086.0], [23.9, 3086.0], [24.0, 3090.0], [24.1, 3090.0], [24.2, 3090.0], [24.3, 3090.0], [24.4, 3090.0], [24.5, 3090.0], [24.6, 3090.0], [24.7, 3090.0], [24.8, 3090.0], [24.9, 3090.0], [25.0, 3095.0], [25.1, 3095.0], [25.2, 3095.0], [25.3, 3095.0], [25.4, 3095.0], [25.5, 3095.0], [25.6, 3095.0], [25.7, 3095.0], [25.8, 3095.0], [25.9, 3095.0], [26.0, 3096.0], [26.1, 3096.0], [26.2, 3096.0], [26.3, 3096.0], [26.4, 3096.0], [26.5, 3096.0], [26.6, 3096.0], [26.7, 3096.0], [26.8, 3096.0], [26.9, 3096.0], [27.0, 3101.0], [27.1, 3101.0], [27.2, 3101.0], [27.3, 3101.0], [27.4, 3101.0], [27.5, 3101.0], [27.6, 3101.0], [27.7, 3101.0], [27.8, 3101.0], [27.9, 3101.0], [28.0, 3101.0], [28.1, 3101.0], [28.2, 3101.0], [28.3, 3101.0], [28.4, 3101.0], [28.5, 3101.0], [28.6, 3101.0], [28.7, 3101.0], [28.8, 3101.0], [28.9, 3101.0], [29.0, 3103.0], [29.1, 3103.0], [29.2, 3103.0], [29.3, 3103.0], [29.4, 3103.0], [29.5, 3103.0], [29.6, 3103.0], [29.7, 3103.0], [29.8, 3103.0], [29.9, 3103.0], [30.0, 3107.0], [30.1, 3107.0], [30.2, 3107.0], [30.3, 3107.0], [30.4, 3107.0], [30.5, 3107.0], [30.6, 3107.0], [30.7, 3107.0], [30.8, 3107.0], [30.9, 3107.0], [31.0, 3116.0], [31.1, 3116.0], [31.2, 3116.0], [31.3, 3116.0], [31.4, 3116.0], [31.5, 3116.0], [31.6, 3116.0], [31.7, 3116.0], [31.8, 3116.0], [31.9, 3116.0], [32.0, 3129.0], [32.1, 3129.0], [32.2, 3129.0], [32.3, 3129.0], [32.4, 3129.0], [32.5, 3129.0], [32.6, 3129.0], [32.7, 3129.0], [32.8, 3129.0], [32.9, 3129.0], [33.0, 3133.0], [33.1, 3133.0], [33.2, 3133.0], [33.3, 3133.0], [33.4, 3133.0], [33.5, 3133.0], [33.6, 3133.0], [33.7, 3133.0], [33.8, 3133.0], [33.9, 3133.0], [34.0, 3133.0], [34.1, 3133.0], [34.2, 3133.0], [34.3, 3133.0], [34.4, 3133.0], [34.5, 3133.0], [34.6, 3133.0], [34.7, 3133.0], [34.8, 3133.0], [34.9, 3133.0], [35.0, 3134.0], [35.1, 3134.0], [35.2, 3134.0], [35.3, 3134.0], [35.4, 3134.0], [35.5, 3134.0], [35.6, 3134.0], [35.7, 3134.0], [35.8, 3134.0], [35.9, 3134.0], [36.0, 3135.0], [36.1, 3135.0], [36.2, 3135.0], [36.3, 3135.0], [36.4, 3135.0], [36.5, 3135.0], [36.6, 3135.0], [36.7, 3135.0], [36.8, 3135.0], [36.9, 3135.0], [37.0, 3137.0], [37.1, 3137.0], [37.2, 3137.0], [37.3, 3137.0], [37.4, 3137.0], [37.5, 3137.0], [37.6, 3137.0], [37.7, 3137.0], [37.8, 3137.0], [37.9, 3137.0], [38.0, 3137.0], [38.1, 3137.0], [38.2, 3137.0], [38.3, 3137.0], [38.4, 3137.0], [38.5, 3137.0], [38.6, 3137.0], [38.7, 3137.0], [38.8, 3137.0], [38.9, 3137.0], [39.0, 3143.0], [39.1, 3143.0], [39.2, 3143.0], [39.3, 3143.0], [39.4, 3143.0], [39.5, 3143.0], [39.6, 3143.0], [39.7, 3143.0], [39.8, 3143.0], [39.9, 3143.0], [40.0, 3144.0], [40.1, 3144.0], [40.2, 3144.0], [40.3, 3144.0], [40.4, 3144.0], [40.5, 3144.0], [40.6, 3144.0], [40.7, 3144.0], [40.8, 3144.0], [40.9, 3144.0], [41.0, 3145.0], [41.1, 3145.0], [41.2, 3145.0], [41.3, 3145.0], [41.4, 3145.0], [41.5, 3145.0], [41.6, 3145.0], [41.7, 3145.0], [41.8, 3145.0], [41.9, 3145.0], [42.0, 3146.0], [42.1, 3146.0], [42.2, 3146.0], [42.3, 3146.0], [42.4, 3146.0], [42.5, 3146.0], [42.6, 3146.0], [42.7, 3146.0], [42.8, 3146.0], [42.9, 3146.0], [43.0, 3151.0], [43.1, 3151.0], [43.2, 3151.0], [43.3, 3151.0], [43.4, 3151.0], [43.5, 3151.0], [43.6, 3151.0], [43.7, 3151.0], [43.8, 3151.0], [43.9, 3151.0], [44.0, 3155.0], [44.1, 3155.0], [44.2, 3155.0], [44.3, 3155.0], [44.4, 3155.0], [44.5, 3155.0], [44.6, 3155.0], [44.7, 3155.0], [44.8, 3155.0], [44.9, 3155.0], [45.0, 3155.0], [45.1, 3155.0], [45.2, 3155.0], [45.3, 3155.0], [45.4, 3155.0], [45.5, 3155.0], [45.6, 3155.0], [45.7, 3155.0], [45.8, 3155.0], [45.9, 3155.0], [46.0, 3155.0], [46.1, 3155.0], [46.2, 3155.0], [46.3, 3155.0], [46.4, 3155.0], [46.5, 3155.0], [46.6, 3155.0], [46.7, 3155.0], [46.8, 3155.0], [46.9, 3155.0], [47.0, 3158.0], [47.1, 3158.0], [47.2, 3158.0], [47.3, 3158.0], [47.4, 3158.0], [47.5, 3158.0], [47.6, 3158.0], [47.7, 3158.0], [47.8, 3158.0], [47.9, 3158.0], [48.0, 3160.0], [48.1, 3160.0], [48.2, 3160.0], [48.3, 3160.0], [48.4, 3160.0], [48.5, 3160.0], [48.6, 3160.0], [48.7, 3160.0], [48.8, 3160.0], [48.9, 3160.0], [49.0, 3162.0], [49.1, 3162.0], [49.2, 3162.0], [49.3, 3162.0], [49.4, 3162.0], [49.5, 3162.0], [49.6, 3162.0], [49.7, 3162.0], [49.8, 3162.0], [49.9, 3162.0], [50.0, 3173.0], [50.1, 3173.0], [50.2, 3173.0], [50.3, 3173.0], [50.4, 3173.0], [50.5, 3173.0], [50.6, 3173.0], [50.7, 3173.0], [50.8, 3173.0], [50.9, 3173.0], [51.0, 3176.0], [51.1, 3176.0], [51.2, 3176.0], [51.3, 3176.0], [51.4, 3176.0], [51.5, 3176.0], [51.6, 3176.0], [51.7, 3176.0], [51.8, 3176.0], [51.9, 3176.0], [52.0, 3179.0], [52.1, 3179.0], [52.2, 3179.0], [52.3, 3179.0], [52.4, 3179.0], [52.5, 3179.0], [52.6, 3179.0], [52.7, 3179.0], [52.8, 3179.0], [52.9, 3179.0], [53.0, 3183.0], [53.1, 3183.0], [53.2, 3183.0], [53.3, 3183.0], [53.4, 3183.0], [53.5, 3183.0], [53.6, 3183.0], [53.7, 3183.0], [53.8, 3183.0], [53.9, 3183.0], [54.0, 3192.0], [54.1, 3192.0], [54.2, 3192.0], [54.3, 3192.0], [54.4, 3192.0], [54.5, 3192.0], [54.6, 3192.0], [54.7, 3192.0], [54.8, 3192.0], [54.9, 3192.0], [55.0, 3200.0], [55.1, 3200.0], [55.2, 3200.0], [55.3, 3200.0], [55.4, 3200.0], [55.5, 3200.0], [55.6, 3200.0], [55.7, 3200.0], [55.8, 3200.0], [55.9, 3200.0], [56.0, 3200.0], [56.1, 3200.0], [56.2, 3200.0], [56.3, 3200.0], [56.4, 3200.0], [56.5, 3200.0], [56.6, 3200.0], [56.7, 3200.0], [56.8, 3200.0], [56.9, 3200.0], [57.0, 3204.0], [57.1, 3204.0], [57.2, 3204.0], [57.3, 3204.0], [57.4, 3204.0], [57.5, 3204.0], [57.6, 3204.0], [57.7, 3204.0], [57.8, 3204.0], [57.9, 3204.0], [58.0, 3209.0], [58.1, 3209.0], [58.2, 3209.0], [58.3, 3209.0], [58.4, 3209.0], [58.5, 3209.0], [58.6, 3209.0], [58.7, 3209.0], [58.8, 3209.0], [58.9, 3209.0], [59.0, 3209.0], [59.1, 3209.0], [59.2, 3209.0], [59.3, 3209.0], [59.4, 3209.0], [59.5, 3209.0], [59.6, 3209.0], [59.7, 3209.0], [59.8, 3209.0], [59.9, 3209.0], [60.0, 3210.0], [60.1, 3210.0], [60.2, 3210.0], [60.3, 3210.0], [60.4, 3210.0], [60.5, 3210.0], [60.6, 3210.0], [60.7, 3210.0], [60.8, 3210.0], [60.9, 3210.0], [61.0, 3221.0], [61.1, 3221.0], [61.2, 3221.0], [61.3, 3221.0], [61.4, 3221.0], [61.5, 3221.0], [61.6, 3221.0], [61.7, 3221.0], [61.8, 3221.0], [61.9, 3221.0], [62.0, 3222.0], [62.1, 3222.0], [62.2, 3222.0], [62.3, 3222.0], [62.4, 3222.0], [62.5, 3222.0], [62.6, 3222.0], [62.7, 3222.0], [62.8, 3222.0], [62.9, 3222.0], [63.0, 3224.0], [63.1, 3224.0], [63.2, 3224.0], [63.3, 3224.0], [63.4, 3224.0], [63.5, 3224.0], [63.6, 3224.0], [63.7, 3224.0], [63.8, 3224.0], [63.9, 3224.0], [64.0, 3240.0], [64.1, 3240.0], [64.2, 3240.0], [64.3, 3240.0], [64.4, 3240.0], [64.5, 3240.0], [64.6, 3240.0], [64.7, 3240.0], [64.8, 3240.0], [64.9, 3240.0], [65.0, 3242.0], [65.1, 3242.0], [65.2, 3242.0], [65.3, 3242.0], [65.4, 3242.0], [65.5, 3242.0], [65.6, 3242.0], [65.7, 3242.0], [65.8, 3242.0], [65.9, 3242.0], [66.0, 3252.0], [66.1, 3252.0], [66.2, 3252.0], [66.3, 3252.0], [66.4, 3252.0], [66.5, 3252.0], [66.6, 3252.0], [66.7, 3252.0], [66.8, 3252.0], [66.9, 3252.0], [67.0, 3252.0], [67.1, 3252.0], [67.2, 3252.0], [67.3, 3252.0], [67.4, 3252.0], [67.5, 3252.0], [67.6, 3252.0], [67.7, 3252.0], [67.8, 3252.0], [67.9, 3252.0], [68.0, 3253.0], [68.1, 3253.0], [68.2, 3253.0], [68.3, 3253.0], [68.4, 3253.0], [68.5, 3253.0], [68.6, 3253.0], [68.7, 3253.0], [68.8, 3253.0], [68.9, 3253.0], [69.0, 3254.0], [69.1, 3254.0], [69.2, 3254.0], [69.3, 3254.0], [69.4, 3254.0], [69.5, 3254.0], [69.6, 3254.0], [69.7, 3254.0], [69.8, 3254.0], [69.9, 3254.0], [70.0, 3255.0], [70.1, 3255.0], [70.2, 3255.0], [70.3, 3255.0], [70.4, 3255.0], [70.5, 3255.0], [70.6, 3255.0], [70.7, 3255.0], [70.8, 3255.0], [70.9, 3255.0], [71.0, 3256.0], [71.1, 3256.0], [71.2, 3256.0], [71.3, 3256.0], [71.4, 3256.0], [71.5, 3256.0], [71.6, 3256.0], [71.7, 3256.0], [71.8, 3256.0], [71.9, 3256.0], [72.0, 3258.0], [72.1, 3258.0], [72.2, 3258.0], [72.3, 3258.0], [72.4, 3258.0], [72.5, 3258.0], [72.6, 3258.0], [72.7, 3258.0], [72.8, 3258.0], [72.9, 3258.0], [73.0, 3264.0], [73.1, 3264.0], [73.2, 3264.0], [73.3, 3264.0], [73.4, 3264.0], [73.5, 3264.0], [73.6, 3264.0], [73.7, 3264.0], [73.8, 3264.0], [73.9, 3264.0], [74.0, 3265.0], [74.1, 3265.0], [74.2, 3265.0], [74.3, 3265.0], [74.4, 3265.0], [74.5, 3265.0], [74.6, 3265.0], [74.7, 3265.0], [74.8, 3265.0], [74.9, 3265.0], [75.0, 3267.0], [75.1, 3267.0], [75.2, 3267.0], [75.3, 3267.0], [75.4, 3267.0], [75.5, 3267.0], [75.6, 3267.0], [75.7, 3267.0], [75.8, 3267.0], [75.9, 3267.0], [76.0, 3274.0], [76.1, 3274.0], [76.2, 3274.0], [76.3, 3274.0], [76.4, 3274.0], [76.5, 3274.0], [76.6, 3274.0], [76.7, 3274.0], [76.8, 3274.0], [76.9, 3274.0], [77.0, 3277.0], [77.1, 3277.0], [77.2, 3277.0], [77.3, 3277.0], [77.4, 3277.0], [77.5, 3277.0], [77.6, 3277.0], [77.7, 3277.0], [77.8, 3277.0], [77.9, 3277.0], [78.0, 3282.0], [78.1, 3282.0], [78.2, 3282.0], [78.3, 3282.0], [78.4, 3282.0], [78.5, 3282.0], [78.6, 3282.0], [78.7, 3282.0], [78.8, 3282.0], [78.9, 3282.0], [79.0, 3285.0], [79.1, 3285.0], [79.2, 3285.0], [79.3, 3285.0], [79.4, 3285.0], [79.5, 3285.0], [79.6, 3285.0], [79.7, 3285.0], [79.8, 3285.0], [79.9, 3285.0], [80.0, 3286.0], [80.1, 3286.0], [80.2, 3286.0], [80.3, 3286.0], [80.4, 3286.0], [80.5, 3286.0], [80.6, 3286.0], [80.7, 3286.0], [80.8, 3286.0], [80.9, 3286.0], [81.0, 3287.0], [81.1, 3287.0], [81.2, 3287.0], [81.3, 3287.0], [81.4, 3287.0], [81.5, 3287.0], [81.6, 3287.0], [81.7, 3287.0], [81.8, 3287.0], [81.9, 3287.0], [82.0, 3292.0], [82.1, 3292.0], [82.2, 3292.0], [82.3, 3292.0], [82.4, 3292.0], [82.5, 3292.0], [82.6, 3292.0], [82.7, 3292.0], [82.8, 3292.0], [82.9, 3292.0], [83.0, 3301.0], [83.1, 3301.0], [83.2, 3301.0], [83.3, 3301.0], [83.4, 3301.0], [83.5, 3301.0], [83.6, 3301.0], [83.7, 3301.0], [83.8, 3301.0], [83.9, 3301.0], [84.0, 3327.0], [84.1, 3327.0], [84.2, 3327.0], [84.3, 3327.0], [84.4, 3327.0], [84.5, 3327.0], [84.6, 3327.0], [84.7, 3327.0], [84.8, 3327.0], [84.9, 3327.0], [85.0, 3332.0], [85.1, 3332.0], [85.2, 3332.0], [85.3, 3332.0], [85.4, 3332.0], [85.5, 3332.0], [85.6, 3332.0], [85.7, 3332.0], [85.8, 3332.0], [85.9, 3332.0], [86.0, 3332.0], [86.1, 3332.0], [86.2, 3332.0], [86.3, 3332.0], [86.4, 3332.0], [86.5, 3332.0], [86.6, 3332.0], [86.7, 3332.0], [86.8, 3332.0], [86.9, 3332.0], [87.0, 3344.0], [87.1, 3344.0], [87.2, 3344.0], [87.3, 3344.0], [87.4, 3344.0], [87.5, 3344.0], [87.6, 3344.0], [87.7, 3344.0], [87.8, 3344.0], [87.9, 3344.0], [88.0, 3351.0], [88.1, 3351.0], [88.2, 3351.0], [88.3, 3351.0], [88.4, 3351.0], [88.5, 3351.0], [88.6, 3351.0], [88.7, 3351.0], [88.8, 3351.0], [88.9, 3351.0], [89.0, 3367.0], [89.1, 3367.0], [89.2, 3367.0], [89.3, 3367.0], [89.4, 3367.0], [89.5, 3367.0], [89.6, 3367.0], [89.7, 3367.0], [89.8, 3367.0], [89.9, 3367.0], [90.0, 3378.0], [90.1, 3378.0], [90.2, 3378.0], [90.3, 3378.0], [90.4, 3378.0], [90.5, 3378.0], [90.6, 3378.0], [90.7, 3378.0], [90.8, 3378.0], [90.9, 3378.0], [91.0, 3381.0], [91.1, 3381.0], [91.2, 3381.0], [91.3, 3381.0], [91.4, 3381.0], [91.5, 3381.0], [91.6, 3381.0], [91.7, 3381.0], [91.8, 3381.0], [91.9, 3381.0], [92.0, 3413.0], [92.1, 3413.0], [92.2, 3413.0], [92.3, 3413.0], [92.4, 3413.0], [92.5, 3413.0], [92.6, 3413.0], [92.7, 3413.0], [92.8, 3413.0], [92.9, 3413.0], [93.0, 3430.0], [93.1, 3430.0], [93.2, 3430.0], [93.3, 3430.0], [93.4, 3430.0], [93.5, 3430.0], [93.6, 3430.0], [93.7, 3430.0], [93.8, 3430.0], [93.9, 3430.0], [94.0, 3432.0], [94.1, 3432.0], [94.2, 3432.0], [94.3, 3432.0], [94.4, 3432.0], [94.5, 3432.0], [94.6, 3432.0], [94.7, 3432.0], [94.8, 3432.0], [94.9, 3432.0], [95.0, 3436.0], [95.1, 3436.0], [95.2, 3436.0], [95.3, 3436.0], [95.4, 3436.0], [95.5, 3436.0], [95.6, 3436.0], [95.7, 3436.0], [95.8, 3436.0], [95.9, 3436.0], [96.0, 3441.0], [96.1, 3441.0], [96.2, 3441.0], [96.3, 3441.0], [96.4, 3441.0], [96.5, 3441.0], [96.6, 3441.0], [96.7, 3441.0], [96.8, 3441.0], [96.9, 3441.0], [97.0, 3450.0], [97.1, 3450.0], [97.2, 3450.0], [97.3, 3450.0], [97.4, 3450.0], [97.5, 3450.0], [97.6, 3450.0], [97.7, 3450.0], [97.8, 3450.0], [97.9, 3450.0], [98.0, 3457.0], [98.1, 3457.0], [98.2, 3457.0], [98.3, 3457.0], [98.4, 3457.0], [98.5, 3457.0], [98.6, 3457.0], [98.7, 3457.0], [98.8, 3457.0], [98.9, 3457.0], [99.0, 3467.0], [99.1, 3467.0], [99.2, 3467.0], [99.3, 3467.0], [99.4, 3467.0], [99.5, 3467.0], [99.6, 3467.0], [99.7, 3467.0], [99.8, 3467.0], [99.9, 3467.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 81.0, "series": [{"data": [[2400.0, 3.0], [2500.0, 4.0], [2600.0, 4.0], [2800.0, 27.0], [2700.0, 13.0], [2900.0, 18.0], [3000.0, 12.0], [3100.0, 15.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[4100.0, 20.0], [4300.0, 8.0], [4200.0, 17.0], [4400.0, 9.0], [4600.0, 2.0], [4500.0, 1.0], [5400.0, 1.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 6.0], [3900.0, 15.0], [4000.0, 17.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[8600.0, 10.0], [8700.0, 13.0], [8500.0, 10.0], [8300.0, 9.0], [8400.0, 7.0], [8200.0, 3.0], [8800.0, 20.0], [8900.0, 12.0], [9100.0, 4.0], [9000.0, 7.0], [9200.0, 2.0], [9500.0, 1.0], [9600.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[300.0, 4.0], [400.0, 81.0], [500.0, 15.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[2800.0, 2.0], [2900.0, 3.0], [3000.0, 22.0], [3100.0, 28.0], [3200.0, 28.0], [3300.0, 9.0], [3400.0, 8.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 9600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [[0.0, 86.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71230142E12, "maxY": 1.0, "series": [{"data": [[1.71230154E12, 1.0], [1.71230184E12, 1.0], [1.71230286E12, 1.0], [1.71230316E12, 1.0], [1.71230274E12, 1.0], [1.71230304E12, 1.0], [1.71230214E12, 1.0], [1.71230244E12, 1.0], [1.71230298E12, 1.0], [1.71230328E12, 1.0], [1.71230238E12, 1.0], [1.71230268E12, 1.0], [1.71230226E12, 1.0], [1.71230256E12, 1.0], [1.71230166E12, 1.0], [1.71230196E12, 1.0], [1.7123025E12, 1.0], [1.7123028E12, 1.0], [1.7123019E12, 1.0], [1.7123022E12, 1.0], [1.71230178E12, 1.0], [1.71230208E12, 1.0], [1.71230148E12, 1.0], [1.7123031E12, 1.0], [1.7123034E12, 1.0], [1.71230202E12, 1.0], [1.71230232E12, 1.0], [1.71230334E12, 1.0], [1.71230172E12, 1.0], [1.71230142E12, 1.0], [1.71230322E12, 1.0], [1.7123016E12, 1.0], [1.71230262E12, 1.0], [1.71230292E12, 1.0]], "isOverall": false, "label": "ldproxy_1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123034E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 465.1300000000001, "minX": 1.0, "maxY": 8754.760000000004, "series": [{"data": [[1.0, 2915.1299999999997]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.0, 2915.1299999999997]], "isOverall": false, "label": "Test_5-Aggregated", "isController": false}, {"data": [[1.0, 4153.530000000003]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.0, 4153.530000000003]], "isOverall": false, "label": "Test_1-Aggregated", "isController": false}, {"data": [[1.0, 8754.760000000004]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.0, 8754.760000000004]], "isOverall": false, "label": "Test_2-Aggregated", "isController": false}, {"data": [[1.0, 465.1300000000001]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.0, 465.1300000000001]], "isOverall": false, "label": "Test_3-Aggregated", "isController": false}, {"data": [[1.0, 3185.21]], "isOverall": false, "label": "Test_4", "isController": false}, {"data": [[1.0, 3185.21]], "isOverall": false, "label": "Test_4-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3.283333333333333, "minX": 1.71230142E12, "maxY": 27242.566666666666, "series": [{"data": [[1.71230154E12, 17334.75], [1.71230184E12, 15279.766666666666], [1.71230286E12, 21793.0], [1.71230316E12, 2392.25], [1.71230274E12, 27242.566666666666], [1.71230304E12, 21793.0], [1.71230214E12, 9883.766666666666], [1.71230244E12, 8471.8], [1.71230298E12, 21793.0], [1.71230328E12, 2278.3333333333335], [1.71230238E12, 9883.766666666666], [1.71230268E12, 9883.766666666666], [1.71230226E12, 9883.766666666666], [1.71230256E12, 9883.766666666666], [1.71230166E12, 16179.1], [1.71230196E12, 9883.766666666666], [1.7123025E12, 9883.766666666666], [1.7123028E12, 22956.666666666668], [1.7123019E12, 9883.766666666666], [1.7123022E12, 9883.766666666666], [1.71230178E12, 17334.75], [1.71230208E12, 8471.8], [1.71230148E12, 16179.1], [1.7123031E12, 11462.166666666666], [1.7123034E12, 797.4166666666666], [1.71230202E12, 9883.766666666666], [1.71230232E12, 9883.766666666666], [1.71230334E12, 2392.25], [1.71230172E12, 16179.1], [1.71230142E12, 1155.65], [1.71230322E12, 2392.25], [1.7123016E12, 17334.75], [1.71230262E12, 9883.766666666666], [1.71230292E12, 21793.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71230154E12, 49.25], [1.71230184E12, 52.666666666666664], [1.71230286E12, 62.7], [1.71230316E12, 70.35], [1.71230274E12, 303.8], [1.71230304E12, 62.7], [1.71230214E12, 92.86666666666666], [1.71230244E12, 79.6], [1.71230298E12, 62.7], [1.71230328E12, 67.0], [1.71230238E12, 92.86666666666666], [1.71230268E12, 92.86666666666666], [1.71230226E12, 92.86666666666666], [1.71230256E12, 92.86666666666666], [1.71230166E12, 45.96666666666667], [1.71230196E12, 92.86666666666666], [1.7123025E12, 92.86666666666666], [1.7123028E12, 115.5], [1.7123019E12, 92.86666666666666], [1.7123022E12, 92.86666666666666], [1.71230178E12, 49.25], [1.71230208E12, 79.6], [1.71230148E12, 45.96666666666667], [1.7123031E12, 63.2], [1.7123034E12, 23.45], [1.71230202E12, 92.86666666666666], [1.71230232E12, 92.86666666666666], [1.71230334E12, 70.35], [1.71230172E12, 45.96666666666667], [1.71230142E12, 3.283333333333333], [1.71230322E12, 70.35], [1.7123016E12, 49.25], [1.71230262E12, 92.86666666666666], [1.71230292E12, 62.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123034E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 463.2500000000001, "minX": 1.71230142E12, "maxY": 8947.57142857143, "series": [{"data": [[1.71230328E12, 2866.95], [1.71230334E12, 2897.6190476190473], [1.71230316E12, 2963.333333333333], [1.71230322E12, 2864.52380952381], [1.7123031E12, 2945.5], [1.7123034E12, 3069.1428571428573]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230154E12, 4056.6000000000004], [1.71230184E12, 4109.0], [1.71230172E12, 4139.571428571429], [1.71230142E12, 5420.0], [1.71230178E12, 4074.0000000000005], [1.7123016E12, 4101.0666666666675], [1.71230166E12, 4187.285714285714], [1.71230148E12, 4326.714285714284]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.7123025E12, 8620.57142857143], [1.71230184E12, 8887.0], [1.7123019E12, 8947.57142857143], [1.7123022E12, 8760.57142857143], [1.71230274E12, 8649.0], [1.71230208E12, 8757.833333333332], [1.71230214E12, 8771.857142857143], [1.71230244E12, 8831.666666666666], [1.71230202E12, 8590.857142857143], [1.71230232E12, 8824.285714285716], [1.71230238E12, 8807.285714285714], [1.71230268E12, 8829.42857142857], [1.71230226E12, 8693.142857142857], [1.71230256E12, 8769.142857142857], [1.71230262E12, 8751.285714285714], [1.71230196E12, 8649.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123028E12, 472.65], [1.71230274E12, 463.2500000000001]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230298E12, 3184.684210526316], [1.7123028E12, 3208.6], [1.71230286E12, 3201.0], [1.71230304E12, 3168.6842105263163], [1.7123031E12, 3185.6666666666665], [1.71230292E12, 3167.789473684211]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123034E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71230142E12, "maxY": 5415.0, "series": [{"data": [[1.71230328E12, 2866.8999999999996], [1.71230334E12, 2897.428571428572], [1.71230316E12, 2963.190476190476], [1.71230322E12, 2864.428571428571], [1.7123031E12, 2945.2], [1.7123034E12, 3069.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230154E12, 4048.266666666667], [1.71230184E12, 4103.25], [1.71230172E12, 4132.9285714285725], [1.71230142E12, 5415.0], [1.71230178E12, 4065.8666666666663], [1.7123016E12, 4094.733333333334], [1.71230166E12, 4180.428571428572], [1.71230148E12, 4318.714285714284]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.7123025E12, 0.0], [1.71230184E12, 0.0], [1.7123019E12, 0.0], [1.7123022E12, 0.0], [1.71230274E12, 0.0], [1.71230208E12, 0.0], [1.71230214E12, 0.0], [1.71230244E12, 0.0], [1.71230202E12, 0.0], [1.71230232E12, 0.0], [1.71230238E12, 0.0], [1.71230268E12, 0.0], [1.71230226E12, 0.0], [1.71230256E12, 0.0], [1.71230262E12, 0.0], [1.71230196E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123028E12, 440.25], [1.71230274E12, 429.4749999999999]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230298E12, 3178.0526315789475], [1.7123028E12, 3196.333333333333], [1.71230286E12, 3185.7368421052633], [1.71230304E12, 3161.2631578947367], [1.7123031E12, 3178.222222222222], [1.71230292E12, 3159.7368421052633]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123034E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71230142E12, "maxY": 22.0, "series": [{"data": [[1.71230328E12, 0.55], [1.71230334E12, 0.6190476190476191], [1.71230316E12, 0.2857142857142857], [1.71230322E12, 0.6666666666666667], [1.7123031E12, 0.7], [1.7123034E12, 0.7142857142857143]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230154E12, 0.7999999999999998], [1.71230184E12, 0.8333333333333334], [1.71230172E12, 0.9285714285714285], [1.71230142E12, 22.0], [1.71230178E12, 0.7333333333333333], [1.7123016E12, 0.8666666666666666], [1.71230166E12, 0.9285714285714286], [1.71230148E12, 0.9285714285714285]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.7123025E12, 0.0], [1.71230184E12, 0.0], [1.7123019E12, 0.0], [1.7123022E12, 0.0], [1.71230274E12, 0.0], [1.71230208E12, 0.0], [1.71230214E12, 0.0], [1.71230244E12, 0.0], [1.71230202E12, 0.0], [1.71230232E12, 0.0], [1.71230238E12, 0.0], [1.71230268E12, 0.0], [1.71230226E12, 0.0], [1.71230256E12, 0.0], [1.71230262E12, 0.0], [1.71230196E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123028E12, 0.45], [1.71230274E12, 0.7250000000000002]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230298E12, 0.7894736842105261], [1.7123028E12, 0.6666666666666666], [1.71230286E12, 0.5263157894736842], [1.71230304E12, 0.5789473684210527], [1.7123031E12, 0.3333333333333333], [1.71230292E12, 0.36842105263157887]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123034E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 387.0, "minX": 1.71230142E12, "maxY": 9608.0, "series": [{"data": [[1.71230154E12, 4248.0], [1.71230184E12, 8887.0], [1.71230286E12, 3467.0], [1.71230316E12, 3382.0], [1.71230274E12, 8962.0], [1.71230304E12, 3432.0], [1.71230214E12, 9045.0], [1.71230244E12, 9225.0], [1.71230298E12, 3378.0], [1.71230328E12, 3347.0], [1.71230238E12, 9070.0], [1.71230268E12, 8976.0], [1.71230226E12, 9112.0], [1.71230256E12, 8999.0], [1.71230166E12, 4498.0], [1.71230196E12, 8949.0], [1.7123025E12, 8784.0], [1.7123028E12, 3457.0], [1.7123019E12, 9581.0], [1.7123022E12, 9234.0], [1.71230178E12, 4320.0], [1.71230208E12, 9008.0], [1.71230148E12, 4632.0], [1.7123031E12, 3593.0], [1.7123034E12, 3163.0], [1.71230202E12, 8803.0], [1.71230232E12, 9608.0], [1.71230334E12, 3170.0], [1.71230172E12, 4540.0], [1.71230142E12, 5420.0], [1.71230322E12, 3261.0], [1.7123016E12, 4465.0], [1.71230262E12, 9173.0], [1.71230292E12, 3450.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71230154E12, 4240.2], [1.71230184E12, 7094.199999999999], [1.71230286E12, 3436.0], [1.71230316E12, 3112.2], [1.71230274E12, 525.2], [1.71230304E12, 3430.0], [1.71230214E12, 9045.0], [1.71230244E12, 9225.0], [1.71230298E12, 3367.0], [1.71230328E12, 3154.4], [1.71230238E12, 9070.0], [1.71230268E12, 8976.0], [1.71230226E12, 9112.0], [1.71230256E12, 8999.0], [1.71230166E12, 4464.5], [1.71230196E12, 8949.0], [1.7123025E12, 8784.0], [1.7123028E12, 3321.0], [1.7123019E12, 9581.0], [1.7123022E12, 9234.0], [1.71230178E12, 4314.6], [1.71230208E12, 9008.0], [1.71230148E12, 4624.0], [1.7123031E12, 3381.0], [1.7123034E12, 3163.0], [1.71230202E12, 8803.0], [1.71230232E12, 9608.0], [1.71230334E12, 3154.4], [1.71230172E12, 4497.5], [1.71230142E12, 5420.0], [1.71230322E12, 3178.6], [1.7123016E12, 4436.8], [1.71230262E12, 9173.0], [1.71230292E12, 3441.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71230154E12, 4248.0], [1.71230184E12, 8887.0], [1.71230286E12, 3467.0], [1.71230316E12, 3382.0], [1.71230274E12, 8962.0], [1.71230304E12, 3432.0], [1.71230214E12, 9045.0], [1.71230244E12, 9225.0], [1.71230298E12, 3378.0], [1.71230328E12, 3347.0], [1.71230238E12, 9070.0], [1.71230268E12, 8976.0], [1.71230226E12, 9112.0], [1.71230256E12, 8999.0], [1.71230166E12, 4498.0], [1.71230196E12, 8949.0], [1.7123025E12, 8784.0], [1.7123028E12, 3457.0], [1.7123019E12, 9581.0], [1.7123022E12, 9234.0], [1.71230178E12, 4320.0], [1.71230208E12, 9008.0], [1.71230148E12, 4632.0], [1.7123031E12, 3593.0], [1.7123034E12, 3163.0], [1.71230202E12, 8803.0], [1.71230232E12, 9608.0], [1.71230334E12, 3170.0], [1.71230172E12, 4540.0], [1.71230142E12, 5420.0], [1.71230322E12, 3261.0], [1.7123016E12, 4465.0], [1.71230262E12, 9173.0], [1.71230292E12, 3450.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71230154E12, 4248.0], [1.71230184E12, 8887.0], [1.71230286E12, 3467.0], [1.71230316E12, 3355.0999999999995], [1.71230274E12, 557.5999999999999], [1.71230304E12, 3432.0], [1.71230214E12, 9045.0], [1.71230244E12, 9225.0], [1.71230298E12, 3378.0], [1.71230328E12, 3338.0499999999997], [1.71230238E12, 9070.0], [1.71230268E12, 8976.0], [1.71230226E12, 9112.0], [1.71230256E12, 8999.0], [1.71230166E12, 4498.0], [1.71230196E12, 8949.0], [1.7123025E12, 8784.0], [1.7123028E12, 3421.7999999999997], [1.7123019E12, 9581.0], [1.7123022E12, 9234.0], [1.71230178E12, 4320.0], [1.71230208E12, 9008.0], [1.71230148E12, 4632.0], [1.7123031E12, 3593.0], [1.7123034E12, 3163.0], [1.71230202E12, 8803.0], [1.71230232E12, 9608.0], [1.71230334E12, 3168.9], [1.71230172E12, 4540.0], [1.71230142E12, 5420.0], [1.71230322E12, 3253.2], [1.7123016E12, 4465.0], [1.71230262E12, 9173.0], [1.71230292E12, 3450.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71230154E12, 3803.0], [1.71230184E12, 3790.0], [1.71230286E12, 2822.0], [1.71230316E12, 2775.0], [1.71230274E12, 387.0], [1.71230304E12, 2967.0], [1.71230214E12, 8461.0], [1.71230244E12, 8546.0], [1.71230298E12, 2878.0], [1.71230328E12, 2477.0], [1.71230238E12, 8436.0], [1.71230268E12, 8669.0], [1.71230226E12, 8171.0], [1.71230256E12, 8469.0], [1.71230166E12, 3918.0], [1.71230196E12, 8354.0], [1.7123025E12, 8376.0], [1.7123028E12, 408.0], [1.7123019E12, 8571.0], [1.7123022E12, 8264.0], [1.71230178E12, 3685.0], [1.71230208E12, 8327.0], [1.71230148E12, 4019.0], [1.7123031E12, 2484.0], [1.7123034E12, 2854.0], [1.71230202E12, 8384.0], [1.71230232E12, 8353.0], [1.71230334E12, 2597.0], [1.71230172E12, 3863.0], [1.71230142E12, 5420.0], [1.71230322E12, 2480.0], [1.7123016E12, 3767.0], [1.71230262E12, 8269.0], [1.71230292E12, 2987.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71230154E12, 4056.0], [1.71230184E12, 4116.0], [1.71230286E12, 3200.0], [1.71230316E12, 2941.0], [1.71230274E12, 464.0], [1.71230304E12, 3155.0], [1.71230214E12, 8820.0], [1.71230244E12, 8808.5], [1.71230298E12, 3209.0], [1.71230328E12, 2870.0], [1.71230238E12, 8861.0], [1.71230268E12, 8879.0], [1.71230226E12, 8745.0], [1.71230256E12, 8821.0], [1.71230166E12, 4160.0], [1.71230196E12, 8722.0], [1.7123025E12, 8708.0], [1.7123028E12, 496.0], [1.7123019E12, 8964.0], [1.7123022E12, 8625.0], [1.71230178E12, 4154.0], [1.71230208E12, 8819.5], [1.71230148E12, 4325.5], [1.7123031E12, 3037.0], [1.7123034E12, 3104.0], [1.71230202E12, 8554.0], [1.71230232E12, 8862.0], [1.71230334E12, 2879.0], [1.71230172E12, 4119.5], [1.71230142E12, 5420.0], [1.71230322E12, 2868.0], [1.7123016E12, 4066.0], [1.71230262E12, 8878.0], [1.71230292E12, 3155.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123034E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 440.0, "minX": 1.0, "maxY": 3593.0, "series": [{"data": [[1.0, 3593.0], [2.0, 469.0], [3.0, 440.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 406.0, "minX": 1.0, "maxY": 3073.0, "series": [{"data": [[1.0, 3073.0], [2.0, 432.5], [3.0, 406.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 3.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71230142E12, "maxY": 1.3833333333333333, "series": [{"data": [[1.71230154E12, 0.25], [1.71230184E12, 0.21666666666666667], [1.71230286E12, 0.31666666666666665], [1.71230316E12, 0.35], [1.71230274E12, 1.3833333333333333], [1.71230304E12, 0.31666666666666665], [1.71230214E12, 0.11666666666666667], [1.71230244E12, 0.1], [1.71230298E12, 0.31666666666666665], [1.71230328E12, 0.3333333333333333], [1.71230238E12, 0.11666666666666667], [1.71230268E12, 0.11666666666666667], [1.71230226E12, 0.11666666666666667], [1.71230256E12, 0.11666666666666667], [1.71230166E12, 0.23333333333333334], [1.71230196E12, 0.11666666666666667], [1.7123025E12, 0.11666666666666667], [1.7123028E12, 0.5833333333333334], [1.7123019E12, 0.11666666666666667], [1.7123022E12, 0.11666666666666667], [1.71230178E12, 0.25], [1.71230208E12, 0.1], [1.71230148E12, 0.23333333333333334], [1.7123031E12, 0.31666666666666665], [1.7123034E12, 0.1], [1.71230202E12, 0.11666666666666667], [1.71230232E12, 0.11666666666666667], [1.71230334E12, 0.35], [1.71230172E12, 0.23333333333333334], [1.71230142E12, 0.03333333333333333], [1.71230322E12, 0.35], [1.7123016E12, 0.25], [1.71230262E12, 0.11666666666666667], [1.71230292E12, 0.31666666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123034E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71230142E12, "maxY": 1.3833333333333333, "series": [{"data": [[1.71230154E12, 0.25], [1.71230184E12, 0.21666666666666667], [1.71230286E12, 0.31666666666666665], [1.71230316E12, 0.35], [1.71230274E12, 1.3833333333333333], [1.71230304E12, 0.31666666666666665], [1.71230214E12, 0.11666666666666667], [1.71230244E12, 0.1], [1.71230298E12, 0.31666666666666665], [1.71230328E12, 0.3333333333333333], [1.71230238E12, 0.11666666666666667], [1.71230268E12, 0.11666666666666667], [1.71230226E12, 0.11666666666666667], [1.71230256E12, 0.11666666666666667], [1.71230166E12, 0.23333333333333334], [1.71230196E12, 0.11666666666666667], [1.7123025E12, 0.11666666666666667], [1.7123028E12, 0.5833333333333334], [1.7123019E12, 0.11666666666666667], [1.7123022E12, 0.11666666666666667], [1.71230178E12, 0.25], [1.71230208E12, 0.1], [1.71230148E12, 0.23333333333333334], [1.7123031E12, 0.31666666666666665], [1.7123034E12, 0.11666666666666667], [1.71230202E12, 0.11666666666666667], [1.71230232E12, 0.11666666666666667], [1.71230334E12, 0.35], [1.71230172E12, 0.23333333333333334], [1.71230142E12, 0.016666666666666666], [1.71230322E12, 0.35], [1.7123016E12, 0.25], [1.71230262E12, 0.11666666666666667], [1.71230292E12, 0.31666666666666665]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123034E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71230142E12, "maxY": 1.3333333333333333, "series": [{"data": [[1.71230154E12, 0.25], [1.71230184E12, 0.2], [1.71230172E12, 0.23333333333333334], [1.71230142E12, 0.016666666666666666], [1.71230178E12, 0.25], [1.7123016E12, 0.25], [1.71230166E12, 0.23333333333333334], [1.71230148E12, 0.23333333333333334]], "isOverall": false, "label": "Test_1-success", "isController": false}, {"data": [[1.71230328E12, 0.3333333333333333], [1.71230334E12, 0.35], [1.71230316E12, 0.35], [1.71230322E12, 0.35], [1.7123031E12, 0.16666666666666666], [1.7123034E12, 0.11666666666666667]], "isOverall": false, "label": "Test_5-success", "isController": false}, {"data": [[1.7123025E12, 0.11666666666666667], [1.71230184E12, 0.016666666666666666], [1.7123019E12, 0.11666666666666667], [1.7123022E12, 0.11666666666666667], [1.71230274E12, 0.05], [1.71230208E12, 0.1], [1.71230214E12, 0.11666666666666667], [1.71230244E12, 0.1], [1.71230202E12, 0.11666666666666667], [1.71230232E12, 0.11666666666666667], [1.71230238E12, 0.11666666666666667], [1.71230268E12, 0.11666666666666667], [1.71230226E12, 0.11666666666666667], [1.71230256E12, 0.11666666666666667], [1.71230262E12, 0.11666666666666667], [1.71230196E12, 0.11666666666666667]], "isOverall": false, "label": "Test_2-success", "isController": false}, {"data": [[1.71230298E12, 0.31666666666666665], [1.7123028E12, 0.25], [1.71230286E12, 0.31666666666666665], [1.71230304E12, 0.31666666666666665], [1.7123031E12, 0.15], [1.71230292E12, 0.31666666666666665]], "isOverall": false, "label": "Test_4-success", "isController": false}, {"data": [[1.7123028E12, 0.3333333333333333], [1.71230274E12, 1.3333333333333333]], "isOverall": false, "label": "Test_3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123034E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.71230142E12, "maxY": 1.3833333333333333, "series": [{"data": [[1.71230154E12, 0.25], [1.71230184E12, 0.21666666666666667], [1.71230286E12, 0.31666666666666665], [1.71230316E12, 0.35], [1.71230274E12, 1.3833333333333333], [1.71230304E12, 0.31666666666666665], [1.71230214E12, 0.11666666666666667], [1.71230244E12, 0.1], [1.71230298E12, 0.31666666666666665], [1.71230328E12, 0.3333333333333333], [1.71230238E12, 0.11666666666666667], [1.71230268E12, 0.11666666666666667], [1.71230226E12, 0.11666666666666667], [1.71230256E12, 0.11666666666666667], [1.71230166E12, 0.23333333333333334], [1.71230196E12, 0.11666666666666667], [1.7123025E12, 0.11666666666666667], [1.7123028E12, 0.5833333333333334], [1.7123019E12, 0.11666666666666667], [1.7123022E12, 0.11666666666666667], [1.71230178E12, 0.25], [1.71230208E12, 0.1], [1.71230148E12, 0.23333333333333334], [1.7123031E12, 0.31666666666666665], [1.7123034E12, 0.11666666666666667], [1.71230202E12, 0.11666666666666667], [1.71230232E12, 0.11666666666666667], [1.71230334E12, 0.35], [1.71230172E12, 0.23333333333333334], [1.71230142E12, 0.016666666666666666], [1.71230322E12, 0.35], [1.7123016E12, 0.25], [1.71230262E12, 0.11666666666666667], [1.71230292E12, 0.31666666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123034E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

