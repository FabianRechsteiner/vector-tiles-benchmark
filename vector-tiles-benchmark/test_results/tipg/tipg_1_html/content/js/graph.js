/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 182.0, "minX": 0.0, "maxY": 4683.0, "series": [{"data": [[0.0, 182.0], [0.1, 182.0], [0.2, 182.0], [0.3, 182.0], [0.4, 182.0], [0.5, 182.0], [0.6, 182.0], [0.7, 182.0], [0.8, 182.0], [0.9, 182.0], [1.0, 200.0], [1.1, 200.0], [1.2, 200.0], [1.3, 200.0], [1.4, 200.0], [1.5, 200.0], [1.6, 200.0], [1.7, 200.0], [1.8, 200.0], [1.9, 200.0], [2.0, 206.0], [2.1, 206.0], [2.2, 206.0], [2.3, 206.0], [2.4, 206.0], [2.5, 206.0], [2.6, 206.0], [2.7, 206.0], [2.8, 206.0], [2.9, 206.0], [3.0, 213.0], [3.1, 213.0], [3.2, 213.0], [3.3, 213.0], [3.4, 213.0], [3.5, 213.0], [3.6, 213.0], [3.7, 213.0], [3.8, 213.0], [3.9, 213.0], [4.0, 214.0], [4.1, 214.0], [4.2, 214.0], [4.3, 214.0], [4.4, 214.0], [4.5, 214.0], [4.6, 214.0], [4.7, 214.0], [4.8, 214.0], [4.9, 214.0], [5.0, 233.0], [5.1, 233.0], [5.2, 233.0], [5.3, 233.0], [5.4, 233.0], [5.5, 233.0], [5.6, 233.0], [5.7, 233.0], [5.8, 233.0], [5.9, 233.0], [6.0, 234.0], [6.1, 234.0], [6.2, 234.0], [6.3, 234.0], [6.4, 234.0], [6.5, 234.0], [6.6, 234.0], [6.7, 234.0], [6.8, 234.0], [6.9, 234.0], [7.0, 236.0], [7.1, 236.0], [7.2, 236.0], [7.3, 236.0], [7.4, 236.0], [7.5, 236.0], [7.6, 236.0], [7.7, 236.0], [7.8, 236.0], [7.9, 236.0], [8.0, 238.0], [8.1, 238.0], [8.2, 238.0], [8.3, 238.0], [8.4, 238.0], [8.5, 238.0], [8.6, 238.0], [8.7, 238.0], [8.8, 238.0], [8.9, 238.0], [9.0, 240.0], [9.1, 240.0], [9.2, 240.0], [9.3, 240.0], [9.4, 240.0], [9.5, 240.0], [9.6, 240.0], [9.7, 240.0], [9.8, 240.0], [9.9, 240.0], [10.0, 241.0], [10.1, 241.0], [10.2, 241.0], [10.3, 241.0], [10.4, 241.0], [10.5, 241.0], [10.6, 241.0], [10.7, 241.0], [10.8, 241.0], [10.9, 241.0], [11.0, 241.0], [11.1, 241.0], [11.2, 241.0], [11.3, 241.0], [11.4, 241.0], [11.5, 241.0], [11.6, 241.0], [11.7, 241.0], [11.8, 241.0], [11.9, 241.0], [12.0, 243.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 243.0], [12.5, 243.0], [12.6, 243.0], [12.7, 243.0], [12.8, 243.0], [12.9, 243.0], [13.0, 251.0], [13.1, 251.0], [13.2, 251.0], [13.3, 251.0], [13.4, 251.0], [13.5, 251.0], [13.6, 251.0], [13.7, 251.0], [13.8, 251.0], [13.9, 251.0], [14.0, 253.0], [14.1, 253.0], [14.2, 253.0], [14.3, 253.0], [14.4, 253.0], [14.5, 253.0], [14.6, 253.0], [14.7, 253.0], [14.8, 253.0], [14.9, 253.0], [15.0, 261.0], [15.1, 261.0], [15.2, 261.0], [15.3, 261.0], [15.4, 261.0], [15.5, 261.0], [15.6, 261.0], [15.7, 261.0], [15.8, 261.0], [15.9, 261.0], [16.0, 265.0], [16.1, 265.0], [16.2, 265.0], [16.3, 265.0], [16.4, 265.0], [16.5, 265.0], [16.6, 265.0], [16.7, 265.0], [16.8, 265.0], [16.9, 265.0], [17.0, 274.0], [17.1, 274.0], [17.2, 274.0], [17.3, 274.0], [17.4, 274.0], [17.5, 274.0], [17.6, 274.0], [17.7, 274.0], [17.8, 274.0], [17.9, 274.0], [18.0, 275.0], [18.1, 275.0], [18.2, 275.0], [18.3, 275.0], [18.4, 275.0], [18.5, 275.0], [18.6, 275.0], [18.7, 275.0], [18.8, 275.0], [18.9, 275.0], [19.0, 301.0], [19.1, 301.0], [19.2, 301.0], [19.3, 301.0], [19.4, 301.0], [19.5, 301.0], [19.6, 301.0], [19.7, 301.0], [19.8, 301.0], [19.9, 301.0], [20.0, 614.0], [20.1, 614.0], [20.2, 614.0], [20.3, 614.0], [20.4, 614.0], [20.5, 614.0], [20.6, 614.0], [20.7, 614.0], [20.8, 614.0], [20.9, 614.0], [21.0, 623.0], [21.1, 623.0], [21.2, 623.0], [21.3, 623.0], [21.4, 623.0], [21.5, 623.0], [21.6, 623.0], [21.7, 623.0], [21.8, 623.0], [21.9, 623.0], [22.0, 625.0], [22.1, 625.0], [22.2, 625.0], [22.3, 625.0], [22.4, 625.0], [22.5, 625.0], [22.6, 625.0], [22.7, 625.0], [22.8, 625.0], [22.9, 625.0], [23.0, 626.0], [23.1, 626.0], [23.2, 626.0], [23.3, 626.0], [23.4, 626.0], [23.5, 626.0], [23.6, 626.0], [23.7, 626.0], [23.8, 626.0], [23.9, 626.0], [24.0, 630.0], [24.1, 630.0], [24.2, 630.0], [24.3, 630.0], [24.4, 630.0], [24.5, 630.0], [24.6, 630.0], [24.7, 630.0], [24.8, 630.0], [24.9, 630.0], [25.0, 631.0], [25.1, 631.0], [25.2, 631.0], [25.3, 631.0], [25.4, 631.0], [25.5, 631.0], [25.6, 631.0], [25.7, 631.0], [25.8, 631.0], [25.9, 631.0], [26.0, 635.0], [26.1, 635.0], [26.2, 635.0], [26.3, 635.0], [26.4, 635.0], [26.5, 635.0], [26.6, 635.0], [26.7, 635.0], [26.8, 635.0], [26.9, 635.0], [27.0, 635.0], [27.1, 635.0], [27.2, 635.0], [27.3, 635.0], [27.4, 635.0], [27.5, 635.0], [27.6, 635.0], [27.7, 635.0], [27.8, 635.0], [27.9, 635.0], [28.0, 636.0], [28.1, 636.0], [28.2, 636.0], [28.3, 636.0], [28.4, 636.0], [28.5, 636.0], [28.6, 636.0], [28.7, 636.0], [28.8, 636.0], [28.9, 636.0], [29.0, 637.0], [29.1, 637.0], [29.2, 637.0], [29.3, 637.0], [29.4, 637.0], [29.5, 637.0], [29.6, 637.0], [29.7, 637.0], [29.8, 637.0], [29.9, 637.0], [30.0, 640.0], [30.1, 640.0], [30.2, 640.0], [30.3, 640.0], [30.4, 640.0], [30.5, 640.0], [30.6, 640.0], [30.7, 640.0], [30.8, 640.0], [30.9, 640.0], [31.0, 645.0], [31.1, 645.0], [31.2, 645.0], [31.3, 645.0], [31.4, 645.0], [31.5, 645.0], [31.6, 645.0], [31.7, 645.0], [31.8, 645.0], [31.9, 645.0], [32.0, 651.0], [32.1, 651.0], [32.2, 651.0], [32.3, 651.0], [32.4, 651.0], [32.5, 651.0], [32.6, 651.0], [32.7, 651.0], [32.8, 651.0], [32.9, 651.0], [33.0, 654.0], [33.1, 654.0], [33.2, 654.0], [33.3, 654.0], [33.4, 654.0], [33.5, 654.0], [33.6, 654.0], [33.7, 654.0], [33.8, 654.0], [33.9, 654.0], [34.0, 656.0], [34.1, 656.0], [34.2, 656.0], [34.3, 656.0], [34.4, 656.0], [34.5, 656.0], [34.6, 656.0], [34.7, 656.0], [34.8, 656.0], [34.9, 656.0], [35.0, 657.0], [35.1, 657.0], [35.2, 657.0], [35.3, 657.0], [35.4, 657.0], [35.5, 657.0], [35.6, 657.0], [35.7, 657.0], [35.8, 657.0], [35.9, 657.0], [36.0, 657.0], [36.1, 657.0], [36.2, 657.0], [36.3, 657.0], [36.4, 657.0], [36.5, 657.0], [36.6, 657.0], [36.7, 657.0], [36.8, 657.0], [36.9, 657.0], [37.0, 659.0], [37.1, 659.0], [37.2, 659.0], [37.3, 659.0], [37.4, 659.0], [37.5, 659.0], [37.6, 659.0], [37.7, 659.0], [37.8, 659.0], [37.9, 659.0], [38.0, 659.0], [38.1, 659.0], [38.2, 659.0], [38.3, 659.0], [38.4, 659.0], [38.5, 659.0], [38.6, 659.0], [38.7, 659.0], [38.8, 659.0], [38.9, 659.0], [39.0, 662.0], [39.1, 662.0], [39.2, 662.0], [39.3, 662.0], [39.4, 662.0], [39.5, 662.0], [39.6, 662.0], [39.7, 662.0], [39.8, 662.0], [39.9, 662.0], [40.0, 662.0], [40.1, 662.0], [40.2, 662.0], [40.3, 662.0], [40.4, 662.0], [40.5, 662.0], [40.6, 662.0], [40.7, 662.0], [40.8, 662.0], [40.9, 662.0], [41.0, 663.0], [41.1, 663.0], [41.2, 663.0], [41.3, 663.0], [41.4, 663.0], [41.5, 663.0], [41.6, 663.0], [41.7, 663.0], [41.8, 663.0], [41.9, 663.0], [42.0, 663.0], [42.1, 663.0], [42.2, 663.0], [42.3, 663.0], [42.4, 663.0], [42.5, 663.0], [42.6, 663.0], [42.7, 663.0], [42.8, 663.0], [42.9, 663.0], [43.0, 664.0], [43.1, 664.0], [43.2, 664.0], [43.3, 664.0], [43.4, 664.0], [43.5, 664.0], [43.6, 664.0], [43.7, 664.0], [43.8, 664.0], [43.9, 664.0], [44.0, 665.0], [44.1, 665.0], [44.2, 665.0], [44.3, 665.0], [44.4, 665.0], [44.5, 665.0], [44.6, 665.0], [44.7, 665.0], [44.8, 665.0], [44.9, 665.0], [45.0, 665.0], [45.1, 665.0], [45.2, 665.0], [45.3, 665.0], [45.4, 665.0], [45.5, 665.0], [45.6, 665.0], [45.7, 665.0], [45.8, 665.0], [45.9, 665.0], [46.0, 667.0], [46.1, 667.0], [46.2, 667.0], [46.3, 667.0], [46.4, 667.0], [46.5, 667.0], [46.6, 667.0], [46.7, 667.0], [46.8, 667.0], [46.9, 667.0], [47.0, 668.0], [47.1, 668.0], [47.2, 668.0], [47.3, 668.0], [47.4, 668.0], [47.5, 668.0], [47.6, 668.0], [47.7, 668.0], [47.8, 668.0], [47.9, 668.0], [48.0, 668.0], [48.1, 668.0], [48.2, 668.0], [48.3, 668.0], [48.4, 668.0], [48.5, 668.0], [48.6, 668.0], [48.7, 668.0], [48.8, 668.0], [48.9, 668.0], [49.0, 669.0], [49.1, 669.0], [49.2, 669.0], [49.3, 669.0], [49.4, 669.0], [49.5, 669.0], [49.6, 669.0], [49.7, 669.0], [49.8, 669.0], [49.9, 669.0], [50.0, 669.0], [50.1, 669.0], [50.2, 669.0], [50.3, 669.0], [50.4, 669.0], [50.5, 669.0], [50.6, 669.0], [50.7, 669.0], [50.8, 669.0], [50.9, 669.0], [51.0, 670.0], [51.1, 670.0], [51.2, 670.0], [51.3, 670.0], [51.4, 670.0], [51.5, 670.0], [51.6, 670.0], [51.7, 670.0], [51.8, 670.0], [51.9, 670.0], [52.0, 670.0], [52.1, 670.0], [52.2, 670.0], [52.3, 670.0], [52.4, 670.0], [52.5, 670.0], [52.6, 670.0], [52.7, 670.0], [52.8, 670.0], [52.9, 670.0], [53.0, 671.0], [53.1, 671.0], [53.2, 671.0], [53.3, 671.0], [53.4, 671.0], [53.5, 671.0], [53.6, 671.0], [53.7, 671.0], [53.8, 671.0], [53.9, 671.0], [54.0, 672.0], [54.1, 672.0], [54.2, 672.0], [54.3, 672.0], [54.4, 672.0], [54.5, 672.0], [54.6, 672.0], [54.7, 672.0], [54.8, 672.0], [54.9, 672.0], [55.0, 672.0], [55.1, 672.0], [55.2, 672.0], [55.3, 672.0], [55.4, 672.0], [55.5, 672.0], [55.6, 672.0], [55.7, 672.0], [55.8, 672.0], [55.9, 672.0], [56.0, 672.0], [56.1, 672.0], [56.2, 672.0], [56.3, 672.0], [56.4, 672.0], [56.5, 672.0], [56.6, 672.0], [56.7, 672.0], [56.8, 672.0], [56.9, 672.0], [57.0, 674.0], [57.1, 674.0], [57.2, 674.0], [57.3, 674.0], [57.4, 674.0], [57.5, 674.0], [57.6, 674.0], [57.7, 674.0], [57.8, 674.0], [57.9, 674.0], [58.0, 675.0], [58.1, 675.0], [58.2, 675.0], [58.3, 675.0], [58.4, 675.0], [58.5, 675.0], [58.6, 675.0], [58.7, 675.0], [58.8, 675.0], [58.9, 675.0], [59.0, 676.0], [59.1, 676.0], [59.2, 676.0], [59.3, 676.0], [59.4, 676.0], [59.5, 676.0], [59.6, 676.0], [59.7, 676.0], [59.8, 676.0], [59.9, 676.0], [60.0, 676.0], [60.1, 676.0], [60.2, 676.0], [60.3, 676.0], [60.4, 676.0], [60.5, 676.0], [60.6, 676.0], [60.7, 676.0], [60.8, 676.0], [60.9, 676.0], [61.0, 676.0], [61.1, 676.0], [61.2, 676.0], [61.3, 676.0], [61.4, 676.0], [61.5, 676.0], [61.6, 676.0], [61.7, 676.0], [61.8, 676.0], [61.9, 676.0], [62.0, 679.0], [62.1, 679.0], [62.2, 679.0], [62.3, 679.0], [62.4, 679.0], [62.5, 679.0], [62.6, 679.0], [62.7, 679.0], [62.8, 679.0], [62.9, 679.0], [63.0, 679.0], [63.1, 679.0], [63.2, 679.0], [63.3, 679.0], [63.4, 679.0], [63.5, 679.0], [63.6, 679.0], [63.7, 679.0], [63.8, 679.0], [63.9, 679.0], [64.0, 681.0], [64.1, 681.0], [64.2, 681.0], [64.3, 681.0], [64.4, 681.0], [64.5, 681.0], [64.6, 681.0], [64.7, 681.0], [64.8, 681.0], [64.9, 681.0], [65.0, 682.0], [65.1, 682.0], [65.2, 682.0], [65.3, 682.0], [65.4, 682.0], [65.5, 682.0], [65.6, 682.0], [65.7, 682.0], [65.8, 682.0], [65.9, 682.0], [66.0, 685.0], [66.1, 685.0], [66.2, 685.0], [66.3, 685.0], [66.4, 685.0], [66.5, 685.0], [66.6, 685.0], [66.7, 685.0], [66.8, 685.0], [66.9, 685.0], [67.0, 686.0], [67.1, 686.0], [67.2, 686.0], [67.3, 686.0], [67.4, 686.0], [67.5, 686.0], [67.6, 686.0], [67.7, 686.0], [67.8, 686.0], [67.9, 686.0], [68.0, 686.0], [68.1, 686.0], [68.2, 686.0], [68.3, 686.0], [68.4, 686.0], [68.5, 686.0], [68.6, 686.0], [68.7, 686.0], [68.8, 686.0], [68.9, 686.0], [69.0, 687.0], [69.1, 687.0], [69.2, 687.0], [69.3, 687.0], [69.4, 687.0], [69.5, 687.0], [69.6, 687.0], [69.7, 687.0], [69.8, 687.0], [69.9, 687.0], [70.0, 693.0], [70.1, 693.0], [70.2, 693.0], [70.3, 693.0], [70.4, 693.0], [70.5, 693.0], [70.6, 693.0], [70.7, 693.0], [70.8, 693.0], [70.9, 693.0], [71.0, 694.0], [71.1, 694.0], [71.2, 694.0], [71.3, 694.0], [71.4, 694.0], [71.5, 694.0], [71.6, 694.0], [71.7, 694.0], [71.8, 694.0], [71.9, 694.0], [72.0, 698.0], [72.1, 698.0], [72.2, 698.0], [72.3, 698.0], [72.4, 698.0], [72.5, 698.0], [72.6, 698.0], [72.7, 698.0], [72.8, 698.0], [72.9, 698.0], [73.0, 700.0], [73.1, 700.0], [73.2, 700.0], [73.3, 700.0], [73.4, 700.0], [73.5, 700.0], [73.6, 700.0], [73.7, 700.0], [73.8, 700.0], [73.9, 700.0], [74.0, 703.0], [74.1, 703.0], [74.2, 703.0], [74.3, 703.0], [74.4, 703.0], [74.5, 703.0], [74.6, 703.0], [74.7, 703.0], [74.8, 703.0], [74.9, 703.0], [75.0, 711.0], [75.1, 711.0], [75.2, 711.0], [75.3, 711.0], [75.4, 711.0], [75.5, 711.0], [75.6, 711.0], [75.7, 711.0], [75.8, 711.0], [75.9, 711.0], [76.0, 712.0], [76.1, 712.0], [76.2, 712.0], [76.3, 712.0], [76.4, 712.0], [76.5, 712.0], [76.6, 712.0], [76.7, 712.0], [76.8, 712.0], [76.9, 712.0], [77.0, 765.0], [77.1, 765.0], [77.2, 765.0], [77.3, 765.0], [77.4, 765.0], [77.5, 765.0], [77.6, 765.0], [77.7, 765.0], [77.8, 765.0], [77.9, 765.0], [78.0, 767.0], [78.1, 767.0], [78.2, 767.0], [78.3, 767.0], [78.4, 767.0], [78.5, 767.0], [78.6, 767.0], [78.7, 767.0], [78.8, 767.0], [78.9, 767.0], [79.0, 771.0], [79.1, 771.0], [79.2, 771.0], [79.3, 771.0], [79.4, 771.0], [79.5, 771.0], [79.6, 771.0], [79.7, 771.0], [79.8, 771.0], [79.9, 771.0], [80.0, 793.0], [80.1, 793.0], [80.2, 793.0], [80.3, 793.0], [80.4, 793.0], [80.5, 793.0], [80.6, 793.0], [80.7, 793.0], [80.8, 793.0], [80.9, 793.0], [81.0, 799.0], [81.1, 799.0], [81.2, 799.0], [81.3, 799.0], [81.4, 799.0], [81.5, 799.0], [81.6, 799.0], [81.7, 799.0], [81.8, 799.0], [81.9, 799.0], [82.0, 801.0], [82.1, 801.0], [82.2, 801.0], [82.3, 801.0], [82.4, 801.0], [82.5, 801.0], [82.6, 801.0], [82.7, 801.0], [82.8, 801.0], [82.9, 801.0], [83.0, 803.0], [83.1, 803.0], [83.2, 803.0], [83.3, 803.0], [83.4, 803.0], [83.5, 803.0], [83.6, 803.0], [83.7, 803.0], [83.8, 803.0], [83.9, 803.0], [84.0, 804.0], [84.1, 804.0], [84.2, 804.0], [84.3, 804.0], [84.4, 804.0], [84.5, 804.0], [84.6, 804.0], [84.7, 804.0], [84.8, 804.0], [84.9, 804.0], [85.0, 806.0], [85.1, 806.0], [85.2, 806.0], [85.3, 806.0], [85.4, 806.0], [85.5, 806.0], [85.6, 806.0], [85.7, 806.0], [85.8, 806.0], [85.9, 806.0], [86.0, 808.0], [86.1, 808.0], [86.2, 808.0], [86.3, 808.0], [86.4, 808.0], [86.5, 808.0], [86.6, 808.0], [86.7, 808.0], [86.8, 808.0], [86.9, 808.0], [87.0, 809.0], [87.1, 809.0], [87.2, 809.0], [87.3, 809.0], [87.4, 809.0], [87.5, 809.0], [87.6, 809.0], [87.7, 809.0], [87.8, 809.0], [87.9, 809.0], [88.0, 809.0], [88.1, 809.0], [88.2, 809.0], [88.3, 809.0], [88.4, 809.0], [88.5, 809.0], [88.6, 809.0], [88.7, 809.0], [88.8, 809.0], [88.9, 809.0], [89.0, 809.0], [89.1, 809.0], [89.2, 809.0], [89.3, 809.0], [89.4, 809.0], [89.5, 809.0], [89.6, 809.0], [89.7, 809.0], [89.8, 809.0], [89.9, 809.0], [90.0, 810.0], [90.1, 810.0], [90.2, 810.0], [90.3, 810.0], [90.4, 810.0], [90.5, 810.0], [90.6, 810.0], [90.7, 810.0], [90.8, 810.0], [90.9, 810.0], [91.0, 812.0], [91.1, 812.0], [91.2, 812.0], [91.3, 812.0], [91.4, 812.0], [91.5, 812.0], [91.6, 812.0], [91.7, 812.0], [91.8, 812.0], [91.9, 812.0], [92.0, 814.0], [92.1, 814.0], [92.2, 814.0], [92.3, 814.0], [92.4, 814.0], [92.5, 814.0], [92.6, 814.0], [92.7, 814.0], [92.8, 814.0], [92.9, 814.0], [93.0, 814.0], [93.1, 814.0], [93.2, 814.0], [93.3, 814.0], [93.4, 814.0], [93.5, 814.0], [93.6, 814.0], [93.7, 814.0], [93.8, 814.0], [93.9, 814.0], [94.0, 815.0], [94.1, 815.0], [94.2, 815.0], [94.3, 815.0], [94.4, 815.0], [94.5, 815.0], [94.6, 815.0], [94.7, 815.0], [94.8, 815.0], [94.9, 815.0], [95.0, 815.0], [95.1, 815.0], [95.2, 815.0], [95.3, 815.0], [95.4, 815.0], [95.5, 815.0], [95.6, 815.0], [95.7, 815.0], [95.8, 815.0], [95.9, 815.0], [96.0, 822.0], [96.1, 822.0], [96.2, 822.0], [96.3, 822.0], [96.4, 822.0], [96.5, 822.0], [96.6, 822.0], [96.7, 822.0], [96.8, 822.0], [96.9, 822.0], [97.0, 822.0], [97.1, 822.0], [97.2, 822.0], [97.3, 822.0], [97.4, 822.0], [97.5, 822.0], [97.6, 822.0], [97.7, 822.0], [97.8, 822.0], [97.9, 822.0], [98.0, 828.0], [98.1, 828.0], [98.2, 828.0], [98.3, 828.0], [98.4, 828.0], [98.5, 828.0], [98.6, 828.0], [98.7, 828.0], [98.8, 828.0], [98.9, 828.0], [99.0, 872.0], [99.1, 872.0], [99.2, 872.0], [99.3, 872.0], [99.4, 872.0], [99.5, 872.0], [99.6, 872.0], [99.7, 872.0], [99.8, 872.0], [99.9, 872.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[0.0, 1011.0], [0.1, 1011.0], [0.2, 1011.0], [0.3, 1011.0], [0.4, 1011.0], [0.5, 1011.0], [0.6, 1011.0], [0.7, 1011.0], [0.8, 1011.0], [0.9, 1011.0], [1.0, 1026.0], [1.1, 1026.0], [1.2, 1026.0], [1.3, 1026.0], [1.4, 1026.0], [1.5, 1026.0], [1.6, 1026.0], [1.7, 1026.0], [1.8, 1026.0], [1.9, 1026.0], [2.0, 1038.0], [2.1, 1038.0], [2.2, 1038.0], [2.3, 1038.0], [2.4, 1038.0], [2.5, 1038.0], [2.6, 1038.0], [2.7, 1038.0], [2.8, 1038.0], [2.9, 1038.0], [3.0, 1039.0], [3.1, 1039.0], [3.2, 1039.0], [3.3, 1039.0], [3.4, 1039.0], [3.5, 1039.0], [3.6, 1039.0], [3.7, 1039.0], [3.8, 1039.0], [3.9, 1039.0], [4.0, 1043.0], [4.1, 1043.0], [4.2, 1043.0], [4.3, 1043.0], [4.4, 1043.0], [4.5, 1043.0], [4.6, 1043.0], [4.7, 1043.0], [4.8, 1043.0], [4.9, 1043.0], [5.0, 1053.0], [5.1, 1053.0], [5.2, 1053.0], [5.3, 1053.0], [5.4, 1053.0], [5.5, 1053.0], [5.6, 1053.0], [5.7, 1053.0], [5.8, 1053.0], [5.9, 1053.0], [6.0, 1054.0], [6.1, 1054.0], [6.2, 1054.0], [6.3, 1054.0], [6.4, 1054.0], [6.5, 1054.0], [6.6, 1054.0], [6.7, 1054.0], [6.8, 1054.0], [6.9, 1054.0], [7.0, 1059.0], [7.1, 1059.0], [7.2, 1059.0], [7.3, 1059.0], [7.4, 1059.0], [7.5, 1059.0], [7.6, 1059.0], [7.7, 1059.0], [7.8, 1059.0], [7.9, 1059.0], [8.0, 1069.0], [8.1, 1069.0], [8.2, 1069.0], [8.3, 1069.0], [8.4, 1069.0], [8.5, 1069.0], [8.6, 1069.0], [8.7, 1069.0], [8.8, 1069.0], [8.9, 1069.0], [9.0, 1070.0], [9.1, 1070.0], [9.2, 1070.0], [9.3, 1070.0], [9.4, 1070.0], [9.5, 1070.0], [9.6, 1070.0], [9.7, 1070.0], [9.8, 1070.0], [9.9, 1070.0], [10.0, 1076.0], [10.1, 1076.0], [10.2, 1076.0], [10.3, 1076.0], [10.4, 1076.0], [10.5, 1076.0], [10.6, 1076.0], [10.7, 1076.0], [10.8, 1076.0], [10.9, 1076.0], [11.0, 1119.0], [11.1, 1119.0], [11.2, 1119.0], [11.3, 1119.0], [11.4, 1119.0], [11.5, 1119.0], [11.6, 1119.0], [11.7, 1119.0], [11.8, 1119.0], [11.9, 1119.0], [12.0, 1176.0], [12.1, 1176.0], [12.2, 1176.0], [12.3, 1176.0], [12.4, 1176.0], [12.5, 1176.0], [12.6, 1176.0], [12.7, 1176.0], [12.8, 1176.0], [12.9, 1176.0], [13.0, 1187.0], [13.1, 1187.0], [13.2, 1187.0], [13.3, 1187.0], [13.4, 1187.0], [13.5, 1187.0], [13.6, 1187.0], [13.7, 1187.0], [13.8, 1187.0], [13.9, 1187.0], [14.0, 1240.0], [14.1, 1240.0], [14.2, 1240.0], [14.3, 1240.0], [14.4, 1240.0], [14.5, 1240.0], [14.6, 1240.0], [14.7, 1240.0], [14.8, 1240.0], [14.9, 1240.0], [15.0, 1253.0], [15.1, 1253.0], [15.2, 1253.0], [15.3, 1253.0], [15.4, 1253.0], [15.5, 1253.0], [15.6, 1253.0], [15.7, 1253.0], [15.8, 1253.0], [15.9, 1253.0], [16.0, 1253.0], [16.1, 1253.0], [16.2, 1253.0], [16.3, 1253.0], [16.4, 1253.0], [16.5, 1253.0], [16.6, 1253.0], [16.7, 1253.0], [16.8, 1253.0], [16.9, 1253.0], [17.0, 1296.0], [17.1, 1296.0], [17.2, 1296.0], [17.3, 1296.0], [17.4, 1296.0], [17.5, 1296.0], [17.6, 1296.0], [17.7, 1296.0], [17.8, 1296.0], [17.9, 1296.0], [18.0, 1385.0], [18.1, 1385.0], [18.2, 1385.0], [18.3, 1385.0], [18.4, 1385.0], [18.5, 1385.0], [18.6, 1385.0], [18.7, 1385.0], [18.8, 1385.0], [18.9, 1385.0], [19.0, 1439.0], [19.1, 1439.0], [19.2, 1439.0], [19.3, 1439.0], [19.4, 1439.0], [19.5, 1439.0], [19.6, 1439.0], [19.7, 1439.0], [19.8, 1439.0], [19.9, 1439.0], [20.0, 1722.0], [20.1, 1722.0], [20.2, 1722.0], [20.3, 1722.0], [20.4, 1722.0], [20.5, 1722.0], [20.6, 1722.0], [20.7, 1722.0], [20.8, 1722.0], [20.9, 1722.0], [21.0, 1723.0], [21.1, 1723.0], [21.2, 1723.0], [21.3, 1723.0], [21.4, 1723.0], [21.5, 1723.0], [21.6, 1723.0], [21.7, 1723.0], [21.8, 1723.0], [21.9, 1723.0], [22.0, 1733.0], [22.1, 1733.0], [22.2, 1733.0], [22.3, 1733.0], [22.4, 1733.0], [22.5, 1733.0], [22.6, 1733.0], [22.7, 1733.0], [22.8, 1733.0], [22.9, 1733.0], [23.0, 1762.0], [23.1, 1762.0], [23.2, 1762.0], [23.3, 1762.0], [23.4, 1762.0], [23.5, 1762.0], [23.6, 1762.0], [23.7, 1762.0], [23.8, 1762.0], [23.9, 1762.0], [24.0, 1765.0], [24.1, 1765.0], [24.2, 1765.0], [24.3, 1765.0], [24.4, 1765.0], [24.5, 1765.0], [24.6, 1765.0], [24.7, 1765.0], [24.8, 1765.0], [24.9, 1765.0], [25.0, 1777.0], [25.1, 1777.0], [25.2, 1777.0], [25.3, 1777.0], [25.4, 1777.0], [25.5, 1777.0], [25.6, 1777.0], [25.7, 1777.0], [25.8, 1777.0], [25.9, 1777.0], [26.0, 1815.0], [26.1, 1815.0], [26.2, 1815.0], [26.3, 1815.0], [26.4, 1815.0], [26.5, 1815.0], [26.6, 1815.0], [26.7, 1815.0], [26.8, 1815.0], [26.9, 1815.0], [27.0, 1832.0], [27.1, 1832.0], [27.2, 1832.0], [27.3, 1832.0], [27.4, 1832.0], [27.5, 1832.0], [27.6, 1832.0], [27.7, 1832.0], [27.8, 1832.0], [27.9, 1832.0], [28.0, 1969.0], [28.1, 1969.0], [28.2, 1969.0], [28.3, 1969.0], [28.4, 1969.0], [28.5, 1969.0], [28.6, 1969.0], [28.7, 1969.0], [28.8, 1969.0], [28.9, 1969.0], [29.0, 2090.0], [29.1, 2090.0], [29.2, 2090.0], [29.3, 2090.0], [29.4, 2090.0], [29.5, 2090.0], [29.6, 2090.0], [29.7, 2090.0], [29.8, 2090.0], [29.9, 2090.0], [30.0, 2163.0], [30.1, 2163.0], [30.2, 2163.0], [30.3, 2163.0], [30.4, 2163.0], [30.5, 2163.0], [30.6, 2163.0], [30.7, 2163.0], [30.8, 2163.0], [30.9, 2163.0], [31.0, 2166.0], [31.1, 2166.0], [31.2, 2166.0], [31.3, 2166.0], [31.4, 2166.0], [31.5, 2166.0], [31.6, 2166.0], [31.7, 2166.0], [31.8, 2166.0], [31.9, 2166.0], [32.0, 2167.0], [32.1, 2167.0], [32.2, 2167.0], [32.3, 2167.0], [32.4, 2167.0], [32.5, 2167.0], [32.6, 2167.0], [32.7, 2167.0], [32.8, 2167.0], [32.9, 2167.0], [33.0, 2168.0], [33.1, 2168.0], [33.2, 2168.0], [33.3, 2168.0], [33.4, 2168.0], [33.5, 2168.0], [33.6, 2168.0], [33.7, 2168.0], [33.8, 2168.0], [33.9, 2168.0], [34.0, 2171.0], [34.1, 2171.0], [34.2, 2171.0], [34.3, 2171.0], [34.4, 2171.0], [34.5, 2171.0], [34.6, 2171.0], [34.7, 2171.0], [34.8, 2171.0], [34.9, 2171.0], [35.0, 2177.0], [35.1, 2177.0], [35.2, 2177.0], [35.3, 2177.0], [35.4, 2177.0], [35.5, 2177.0], [35.6, 2177.0], [35.7, 2177.0], [35.8, 2177.0], [35.9, 2177.0], [36.0, 2180.0], [36.1, 2180.0], [36.2, 2180.0], [36.3, 2180.0], [36.4, 2180.0], [36.5, 2180.0], [36.6, 2180.0], [36.7, 2180.0], [36.8, 2180.0], [36.9, 2180.0], [37.0, 2180.0], [37.1, 2180.0], [37.2, 2180.0], [37.3, 2180.0], [37.4, 2180.0], [37.5, 2180.0], [37.6, 2180.0], [37.7, 2180.0], [37.8, 2180.0], [37.9, 2180.0], [38.0, 2183.0], [38.1, 2183.0], [38.2, 2183.0], [38.3, 2183.0], [38.4, 2183.0], [38.5, 2183.0], [38.6, 2183.0], [38.7, 2183.0], [38.8, 2183.0], [38.9, 2183.0], [39.0, 2183.0], [39.1, 2183.0], [39.2, 2183.0], [39.3, 2183.0], [39.4, 2183.0], [39.5, 2183.0], [39.6, 2183.0], [39.7, 2183.0], [39.8, 2183.0], [39.9, 2183.0], [40.0, 2185.0], [40.1, 2185.0], [40.2, 2185.0], [40.3, 2185.0], [40.4, 2185.0], [40.5, 2185.0], [40.6, 2185.0], [40.7, 2185.0], [40.8, 2185.0], [40.9, 2185.0], [41.0, 2186.0], [41.1, 2186.0], [41.2, 2186.0], [41.3, 2186.0], [41.4, 2186.0], [41.5, 2186.0], [41.6, 2186.0], [41.7, 2186.0], [41.8, 2186.0], [41.9, 2186.0], [42.0, 2186.0], [42.1, 2186.0], [42.2, 2186.0], [42.3, 2186.0], [42.4, 2186.0], [42.5, 2186.0], [42.6, 2186.0], [42.7, 2186.0], [42.8, 2186.0], [42.9, 2186.0], [43.0, 2187.0], [43.1, 2187.0], [43.2, 2187.0], [43.3, 2187.0], [43.4, 2187.0], [43.5, 2187.0], [43.6, 2187.0], [43.7, 2187.0], [43.8, 2187.0], [43.9, 2187.0], [44.0, 2187.0], [44.1, 2187.0], [44.2, 2187.0], [44.3, 2187.0], [44.4, 2187.0], [44.5, 2187.0], [44.6, 2187.0], [44.7, 2187.0], [44.8, 2187.0], [44.9, 2187.0], [45.0, 2187.0], [45.1, 2187.0], [45.2, 2187.0], [45.3, 2187.0], [45.4, 2187.0], [45.5, 2187.0], [45.6, 2187.0], [45.7, 2187.0], [45.8, 2187.0], [45.9, 2187.0], [46.0, 2189.0], [46.1, 2189.0], [46.2, 2189.0], [46.3, 2189.0], [46.4, 2189.0], [46.5, 2189.0], [46.6, 2189.0], [46.7, 2189.0], [46.8, 2189.0], [46.9, 2189.0], [47.0, 2189.0], [47.1, 2189.0], [47.2, 2189.0], [47.3, 2189.0], [47.4, 2189.0], [47.5, 2189.0], [47.6, 2189.0], [47.7, 2189.0], [47.8, 2189.0], [47.9, 2189.0], [48.0, 2190.0], [48.1, 2190.0], [48.2, 2190.0], [48.3, 2190.0], [48.4, 2190.0], [48.5, 2190.0], [48.6, 2190.0], [48.7, 2190.0], [48.8, 2190.0], [48.9, 2190.0], [49.0, 2190.0], [49.1, 2190.0], [49.2, 2190.0], [49.3, 2190.0], [49.4, 2190.0], [49.5, 2190.0], [49.6, 2190.0], [49.7, 2190.0], [49.8, 2190.0], [49.9, 2190.0], [50.0, 2190.0], [50.1, 2190.0], [50.2, 2190.0], [50.3, 2190.0], [50.4, 2190.0], [50.5, 2190.0], [50.6, 2190.0], [50.7, 2190.0], [50.8, 2190.0], [50.9, 2190.0], [51.0, 2191.0], [51.1, 2191.0], [51.2, 2191.0], [51.3, 2191.0], [51.4, 2191.0], [51.5, 2191.0], [51.6, 2191.0], [51.7, 2191.0], [51.8, 2191.0], [51.9, 2191.0], [52.0, 2192.0], [52.1, 2192.0], [52.2, 2192.0], [52.3, 2192.0], [52.4, 2192.0], [52.5, 2192.0], [52.6, 2192.0], [52.7, 2192.0], [52.8, 2192.0], [52.9, 2192.0], [53.0, 2194.0], [53.1, 2194.0], [53.2, 2194.0], [53.3, 2194.0], [53.4, 2194.0], [53.5, 2194.0], [53.6, 2194.0], [53.7, 2194.0], [53.8, 2194.0], [53.9, 2194.0], [54.0, 2197.0], [54.1, 2197.0], [54.2, 2197.0], [54.3, 2197.0], [54.4, 2197.0], [54.5, 2197.0], [54.6, 2197.0], [54.7, 2197.0], [54.8, 2197.0], [54.9, 2197.0], [55.0, 2198.0], [55.1, 2198.0], [55.2, 2198.0], [55.3, 2198.0], [55.4, 2198.0], [55.5, 2198.0], [55.6, 2198.0], [55.7, 2198.0], [55.8, 2198.0], [55.9, 2198.0], [56.0, 2200.0], [56.1, 2200.0], [56.2, 2200.0], [56.3, 2200.0], [56.4, 2200.0], [56.5, 2200.0], [56.6, 2200.0], [56.7, 2200.0], [56.8, 2200.0], [56.9, 2200.0], [57.0, 2200.0], [57.1, 2200.0], [57.2, 2200.0], [57.3, 2200.0], [57.4, 2200.0], [57.5, 2200.0], [57.6, 2200.0], [57.7, 2200.0], [57.8, 2200.0], [57.9, 2200.0], [58.0, 2201.0], [58.1, 2201.0], [58.2, 2201.0], [58.3, 2201.0], [58.4, 2201.0], [58.5, 2201.0], [58.6, 2201.0], [58.7, 2201.0], [58.8, 2201.0], [58.9, 2201.0], [59.0, 2203.0], [59.1, 2203.0], [59.2, 2203.0], [59.3, 2203.0], [59.4, 2203.0], [59.5, 2203.0], [59.6, 2203.0], [59.7, 2203.0], [59.8, 2203.0], [59.9, 2203.0], [60.0, 2203.0], [60.1, 2203.0], [60.2, 2203.0], [60.3, 2203.0], [60.4, 2203.0], [60.5, 2203.0], [60.6, 2203.0], [60.7, 2203.0], [60.8, 2203.0], [60.9, 2203.0], [61.0, 2209.0], [61.1, 2209.0], [61.2, 2209.0], [61.3, 2209.0], [61.4, 2209.0], [61.5, 2209.0], [61.6, 2209.0], [61.7, 2209.0], [61.8, 2209.0], [61.9, 2209.0], [62.0, 2210.0], [62.1, 2210.0], [62.2, 2210.0], [62.3, 2210.0], [62.4, 2210.0], [62.5, 2210.0], [62.6, 2210.0], [62.7, 2210.0], [62.8, 2210.0], [62.9, 2210.0], [63.0, 2214.0], [63.1, 2214.0], [63.2, 2214.0], [63.3, 2214.0], [63.4, 2214.0], [63.5, 2214.0], [63.6, 2214.0], [63.7, 2214.0], [63.8, 2214.0], [63.9, 2214.0], [64.0, 2216.0], [64.1, 2216.0], [64.2, 2216.0], [64.3, 2216.0], [64.4, 2216.0], [64.5, 2216.0], [64.6, 2216.0], [64.7, 2216.0], [64.8, 2216.0], [64.9, 2216.0], [65.0, 2220.0], [65.1, 2220.0], [65.2, 2220.0], [65.3, 2220.0], [65.4, 2220.0], [65.5, 2220.0], [65.6, 2220.0], [65.7, 2220.0], [65.8, 2220.0], [65.9, 2220.0], [66.0, 2229.0], [66.1, 2229.0], [66.2, 2229.0], [66.3, 2229.0], [66.4, 2229.0], [66.5, 2229.0], [66.6, 2229.0], [66.7, 2229.0], [66.8, 2229.0], [66.9, 2229.0], [67.0, 2231.0], [67.1, 2231.0], [67.2, 2231.0], [67.3, 2231.0], [67.4, 2231.0], [67.5, 2231.0], [67.6, 2231.0], [67.7, 2231.0], [67.8, 2231.0], [67.9, 2231.0], [68.0, 2240.0], [68.1, 2240.0], [68.2, 2240.0], [68.3, 2240.0], [68.4, 2240.0], [68.5, 2240.0], [68.6, 2240.0], [68.7, 2240.0], [68.8, 2240.0], [68.9, 2240.0], [69.0, 2242.0], [69.1, 2242.0], [69.2, 2242.0], [69.3, 2242.0], [69.4, 2242.0], [69.5, 2242.0], [69.6, 2242.0], [69.7, 2242.0], [69.8, 2242.0], [69.9, 2242.0], [70.0, 2246.0], [70.1, 2246.0], [70.2, 2246.0], [70.3, 2246.0], [70.4, 2246.0], [70.5, 2246.0], [70.6, 2246.0], [70.7, 2246.0], [70.8, 2246.0], [70.9, 2246.0], [71.0, 2247.0], [71.1, 2247.0], [71.2, 2247.0], [71.3, 2247.0], [71.4, 2247.0], [71.5, 2247.0], [71.6, 2247.0], [71.7, 2247.0], [71.8, 2247.0], [71.9, 2247.0], [72.0, 2265.0], [72.1, 2265.0], [72.2, 2265.0], [72.3, 2265.0], [72.4, 2265.0], [72.5, 2265.0], [72.6, 2265.0], [72.7, 2265.0], [72.8, 2265.0], [72.9, 2265.0], [73.0, 2265.0], [73.1, 2265.0], [73.2, 2265.0], [73.3, 2265.0], [73.4, 2265.0], [73.5, 2265.0], [73.6, 2265.0], [73.7, 2265.0], [73.8, 2265.0], [73.9, 2265.0], [74.0, 2270.0], [74.1, 2270.0], [74.2, 2270.0], [74.3, 2270.0], [74.4, 2270.0], [74.5, 2270.0], [74.6, 2270.0], [74.7, 2270.0], [74.8, 2270.0], [74.9, 2270.0], [75.0, 2285.0], [75.1, 2285.0], [75.2, 2285.0], [75.3, 2285.0], [75.4, 2285.0], [75.5, 2285.0], [75.6, 2285.0], [75.7, 2285.0], [75.8, 2285.0], [75.9, 2285.0], [76.0, 2291.0], [76.1, 2291.0], [76.2, 2291.0], [76.3, 2291.0], [76.4, 2291.0], [76.5, 2291.0], [76.6, 2291.0], [76.7, 2291.0], [76.8, 2291.0], [76.9, 2291.0], [77.0, 2298.0], [77.1, 2298.0], [77.2, 2298.0], [77.3, 2298.0], [77.4, 2298.0], [77.5, 2298.0], [77.6, 2298.0], [77.7, 2298.0], [77.8, 2298.0], [77.9, 2298.0], [78.0, 2303.0], [78.1, 2303.0], [78.2, 2303.0], [78.3, 2303.0], [78.4, 2303.0], [78.5, 2303.0], [78.6, 2303.0], [78.7, 2303.0], [78.8, 2303.0], [78.9, 2303.0], [79.0, 2312.0], [79.1, 2312.0], [79.2, 2312.0], [79.3, 2312.0], [79.4, 2312.0], [79.5, 2312.0], [79.6, 2312.0], [79.7, 2312.0], [79.8, 2312.0], [79.9, 2312.0], [80.0, 2356.0], [80.1, 2356.0], [80.2, 2356.0], [80.3, 2356.0], [80.4, 2356.0], [80.5, 2356.0], [80.6, 2356.0], [80.7, 2356.0], [80.8, 2356.0], [80.9, 2356.0], [81.0, 2381.0], [81.1, 2381.0], [81.2, 2381.0], [81.3, 2381.0], [81.4, 2381.0], [81.5, 2381.0], [81.6, 2381.0], [81.7, 2381.0], [81.8, 2381.0], [81.9, 2381.0], [82.0, 2387.0], [82.1, 2387.0], [82.2, 2387.0], [82.3, 2387.0], [82.4, 2387.0], [82.5, 2387.0], [82.6, 2387.0], [82.7, 2387.0], [82.8, 2387.0], [82.9, 2387.0], [83.0, 2399.0], [83.1, 2399.0], [83.2, 2399.0], [83.3, 2399.0], [83.4, 2399.0], [83.5, 2399.0], [83.6, 2399.0], [83.7, 2399.0], [83.8, 2399.0], [83.9, 2399.0], [84.0, 2404.0], [84.1, 2404.0], [84.2, 2404.0], [84.3, 2404.0], [84.4, 2404.0], [84.5, 2404.0], [84.6, 2404.0], [84.7, 2404.0], [84.8, 2404.0], [84.9, 2404.0], [85.0, 2443.0], [85.1, 2443.0], [85.2, 2443.0], [85.3, 2443.0], [85.4, 2443.0], [85.5, 2443.0], [85.6, 2443.0], [85.7, 2443.0], [85.8, 2443.0], [85.9, 2443.0], [86.0, 2450.0], [86.1, 2450.0], [86.2, 2450.0], [86.3, 2450.0], [86.4, 2450.0], [86.5, 2450.0], [86.6, 2450.0], [86.7, 2450.0], [86.8, 2450.0], [86.9, 2450.0], [87.0, 2455.0], [87.1, 2455.0], [87.2, 2455.0], [87.3, 2455.0], [87.4, 2455.0], [87.5, 2455.0], [87.6, 2455.0], [87.7, 2455.0], [87.8, 2455.0], [87.9, 2455.0], [88.0, 2471.0], [88.1, 2471.0], [88.2, 2471.0], [88.3, 2471.0], [88.4, 2471.0], [88.5, 2471.0], [88.6, 2471.0], [88.7, 2471.0], [88.8, 2471.0], [88.9, 2471.0], [89.0, 2486.0], [89.1, 2486.0], [89.2, 2486.0], [89.3, 2486.0], [89.4, 2486.0], [89.5, 2486.0], [89.6, 2486.0], [89.7, 2486.0], [89.8, 2486.0], [89.9, 2486.0], [90.0, 2486.0], [90.1, 2486.0], [90.2, 2486.0], [90.3, 2486.0], [90.4, 2486.0], [90.5, 2486.0], [90.6, 2486.0], [90.7, 2486.0], [90.8, 2486.0], [90.9, 2486.0], [91.0, 2491.0], [91.1, 2491.0], [91.2, 2491.0], [91.3, 2491.0], [91.4, 2491.0], [91.5, 2491.0], [91.6, 2491.0], [91.7, 2491.0], [91.8, 2491.0], [91.9, 2491.0], [92.0, 2492.0], [92.1, 2492.0], [92.2, 2492.0], [92.3, 2492.0], [92.4, 2492.0], [92.5, 2492.0], [92.6, 2492.0], [92.7, 2492.0], [92.8, 2492.0], [92.9, 2492.0], [93.0, 2511.0], [93.1, 2511.0], [93.2, 2511.0], [93.3, 2511.0], [93.4, 2511.0], [93.5, 2511.0], [93.6, 2511.0], [93.7, 2511.0], [93.8, 2511.0], [93.9, 2511.0], [94.0, 2531.0], [94.1, 2531.0], [94.2, 2531.0], [94.3, 2531.0], [94.4, 2531.0], [94.5, 2531.0], [94.6, 2531.0], [94.7, 2531.0], [94.8, 2531.0], [94.9, 2531.0], [95.0, 2537.0], [95.1, 2537.0], [95.2, 2537.0], [95.3, 2537.0], [95.4, 2537.0], [95.5, 2537.0], [95.6, 2537.0], [95.7, 2537.0], [95.8, 2537.0], [95.9, 2537.0], [96.0, 2555.0], [96.1, 2555.0], [96.2, 2555.0], [96.3, 2555.0], [96.4, 2555.0], [96.5, 2555.0], [96.6, 2555.0], [96.7, 2555.0], [96.8, 2555.0], [96.9, 2555.0], [97.0, 2590.0], [97.1, 2590.0], [97.2, 2590.0], [97.3, 2590.0], [97.4, 2590.0], [97.5, 2590.0], [97.6, 2590.0], [97.7, 2590.0], [97.8, 2590.0], [97.9, 2590.0], [98.0, 2596.0], [98.1, 2596.0], [98.2, 2596.0], [98.3, 2596.0], [98.4, 2596.0], [98.5, 2596.0], [98.6, 2596.0], [98.7, 2596.0], [98.8, 2596.0], [98.9, 2596.0], [99.0, 2767.0], [99.1, 2767.0], [99.2, 2767.0], [99.3, 2767.0], [99.4, 2767.0], [99.5, 2767.0], [99.6, 2767.0], [99.7, 2767.0], [99.8, 2767.0], [99.9, 2767.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[0.0, 1885.0], [0.1, 1885.0], [0.2, 1885.0], [0.3, 1885.0], [0.4, 1885.0], [0.5, 1885.0], [0.6, 1885.0], [0.7, 1885.0], [0.8, 1885.0], [0.9, 1885.0], [1.0, 1963.0], [1.1, 1963.0], [1.2, 1963.0], [1.3, 1963.0], [1.4, 1963.0], [1.5, 1963.0], [1.6, 1963.0], [1.7, 1963.0], [1.8, 1963.0], [1.9, 1963.0], [2.0, 1970.0], [2.1, 1970.0], [2.2, 1970.0], [2.3, 1970.0], [2.4, 1970.0], [2.5, 1970.0], [2.6, 1970.0], [2.7, 1970.0], [2.8, 1970.0], [2.9, 1970.0], [3.0, 1971.0], [3.1, 1971.0], [3.2, 1971.0], [3.3, 1971.0], [3.4, 1971.0], [3.5, 1971.0], [3.6, 1971.0], [3.7, 1971.0], [3.8, 1971.0], [3.9, 1971.0], [4.0, 1974.0], [4.1, 1974.0], [4.2, 1974.0], [4.3, 1974.0], [4.4, 1974.0], [4.5, 1974.0], [4.6, 1974.0], [4.7, 1974.0], [4.8, 1974.0], [4.9, 1974.0], [5.0, 1992.0], [5.1, 1992.0], [5.2, 1992.0], [5.3, 1992.0], [5.4, 1992.0], [5.5, 1992.0], [5.6, 1992.0], [5.7, 1992.0], [5.8, 1992.0], [5.9, 1992.0], [6.0, 1994.0], [6.1, 1994.0], [6.2, 1994.0], [6.3, 1994.0], [6.4, 1994.0], [6.5, 1994.0], [6.6, 1994.0], [6.7, 1994.0], [6.8, 1994.0], [6.9, 1994.0], [7.0, 1996.0], [7.1, 1996.0], [7.2, 1996.0], [7.3, 1996.0], [7.4, 1996.0], [7.5, 1996.0], [7.6, 1996.0], [7.7, 1996.0], [7.8, 1996.0], [7.9, 1996.0], [8.0, 1998.0], [8.1, 1998.0], [8.2, 1998.0], [8.3, 1998.0], [8.4, 1998.0], [8.5, 1998.0], [8.6, 1998.0], [8.7, 1998.0], [8.8, 1998.0], [8.9, 1998.0], [9.0, 1998.0], [9.1, 1998.0], [9.2, 1998.0], [9.3, 1998.0], [9.4, 1998.0], [9.5, 1998.0], [9.6, 1998.0], [9.7, 1998.0], [9.8, 1998.0], [9.9, 1998.0], [10.0, 2008.0], [10.1, 2008.0], [10.2, 2008.0], [10.3, 2008.0], [10.4, 2008.0], [10.5, 2008.0], [10.6, 2008.0], [10.7, 2008.0], [10.8, 2008.0], [10.9, 2008.0], [11.0, 2010.0], [11.1, 2010.0], [11.2, 2010.0], [11.3, 2010.0], [11.4, 2010.0], [11.5, 2010.0], [11.6, 2010.0], [11.7, 2010.0], [11.8, 2010.0], [11.9, 2010.0], [12.0, 2012.0], [12.1, 2012.0], [12.2, 2012.0], [12.3, 2012.0], [12.4, 2012.0], [12.5, 2012.0], [12.6, 2012.0], [12.7, 2012.0], [12.8, 2012.0], [12.9, 2012.0], [13.0, 2020.0], [13.1, 2020.0], [13.2, 2020.0], [13.3, 2020.0], [13.4, 2020.0], [13.5, 2020.0], [13.6, 2020.0], [13.7, 2020.0], [13.8, 2020.0], [13.9, 2020.0], [14.0, 2023.0], [14.1, 2023.0], [14.2, 2023.0], [14.3, 2023.0], [14.4, 2023.0], [14.5, 2023.0], [14.6, 2023.0], [14.7, 2023.0], [14.8, 2023.0], [14.9, 2023.0], [15.0, 2035.0], [15.1, 2035.0], [15.2, 2035.0], [15.3, 2035.0], [15.4, 2035.0], [15.5, 2035.0], [15.6, 2035.0], [15.7, 2035.0], [15.8, 2035.0], [15.9, 2035.0], [16.0, 2038.0], [16.1, 2038.0], [16.2, 2038.0], [16.3, 2038.0], [16.4, 2038.0], [16.5, 2038.0], [16.6, 2038.0], [16.7, 2038.0], [16.8, 2038.0], [16.9, 2038.0], [17.0, 2047.0], [17.1, 2047.0], [17.2, 2047.0], [17.3, 2047.0], [17.4, 2047.0], [17.5, 2047.0], [17.6, 2047.0], [17.7, 2047.0], [17.8, 2047.0], [17.9, 2047.0], [18.0, 2047.0], [18.1, 2047.0], [18.2, 2047.0], [18.3, 2047.0], [18.4, 2047.0], [18.5, 2047.0], [18.6, 2047.0], [18.7, 2047.0], [18.8, 2047.0], [18.9, 2047.0], [19.0, 2048.0], [19.1, 2048.0], [19.2, 2048.0], [19.3, 2048.0], [19.4, 2048.0], [19.5, 2048.0], [19.6, 2048.0], [19.7, 2048.0], [19.8, 2048.0], [19.9, 2048.0], [20.0, 2049.0], [20.1, 2049.0], [20.2, 2049.0], [20.3, 2049.0], [20.4, 2049.0], [20.5, 2049.0], [20.6, 2049.0], [20.7, 2049.0], [20.8, 2049.0], [20.9, 2049.0], [21.0, 2051.0], [21.1, 2051.0], [21.2, 2051.0], [21.3, 2051.0], [21.4, 2051.0], [21.5, 2051.0], [21.6, 2051.0], [21.7, 2051.0], [21.8, 2051.0], [21.9, 2051.0], [22.0, 2057.0], [22.1, 2057.0], [22.2, 2057.0], [22.3, 2057.0], [22.4, 2057.0], [22.5, 2057.0], [22.6, 2057.0], [22.7, 2057.0], [22.8, 2057.0], [22.9, 2057.0], [23.0, 2060.0], [23.1, 2060.0], [23.2, 2060.0], [23.3, 2060.0], [23.4, 2060.0], [23.5, 2060.0], [23.6, 2060.0], [23.7, 2060.0], [23.8, 2060.0], [23.9, 2060.0], [24.0, 2066.0], [24.1, 2066.0], [24.2, 2066.0], [24.3, 2066.0], [24.4, 2066.0], [24.5, 2066.0], [24.6, 2066.0], [24.7, 2066.0], [24.8, 2066.0], [24.9, 2066.0], [25.0, 2069.0], [25.1, 2069.0], [25.2, 2069.0], [25.3, 2069.0], [25.4, 2069.0], [25.5, 2069.0], [25.6, 2069.0], [25.7, 2069.0], [25.8, 2069.0], [25.9, 2069.0], [26.0, 2072.0], [26.1, 2072.0], [26.2, 2072.0], [26.3, 2072.0], [26.4, 2072.0], [26.5, 2072.0], [26.6, 2072.0], [26.7, 2072.0], [26.8, 2072.0], [26.9, 2072.0], [27.0, 2085.0], [27.1, 2085.0], [27.2, 2085.0], [27.3, 2085.0], [27.4, 2085.0], [27.5, 2085.0], [27.6, 2085.0], [27.7, 2085.0], [27.8, 2085.0], [27.9, 2085.0], [28.0, 2086.0], [28.1, 2086.0], [28.2, 2086.0], [28.3, 2086.0], [28.4, 2086.0], [28.5, 2086.0], [28.6, 2086.0], [28.7, 2086.0], [28.8, 2086.0], [28.9, 2086.0], [29.0, 2091.0], [29.1, 2091.0], [29.2, 2091.0], [29.3, 2091.0], [29.4, 2091.0], [29.5, 2091.0], [29.6, 2091.0], [29.7, 2091.0], [29.8, 2091.0], [29.9, 2091.0], [30.0, 2091.0], [30.1, 2091.0], [30.2, 2091.0], [30.3, 2091.0], [30.4, 2091.0], [30.5, 2091.0], [30.6, 2091.0], [30.7, 2091.0], [30.8, 2091.0], [30.9, 2091.0], [31.0, 2092.0], [31.1, 2092.0], [31.2, 2092.0], [31.3, 2092.0], [31.4, 2092.0], [31.5, 2092.0], [31.6, 2092.0], [31.7, 2092.0], [31.8, 2092.0], [31.9, 2092.0], [32.0, 2094.0], [32.1, 2094.0], [32.2, 2094.0], [32.3, 2094.0], [32.4, 2094.0], [32.5, 2094.0], [32.6, 2094.0], [32.7, 2094.0], [32.8, 2094.0], [32.9, 2094.0], [33.0, 2094.0], [33.1, 2094.0], [33.2, 2094.0], [33.3, 2094.0], [33.4, 2094.0], [33.5, 2094.0], [33.6, 2094.0], [33.7, 2094.0], [33.8, 2094.0], [33.9, 2094.0], [34.0, 2096.0], [34.1, 2096.0], [34.2, 2096.0], [34.3, 2096.0], [34.4, 2096.0], [34.5, 2096.0], [34.6, 2096.0], [34.7, 2096.0], [34.8, 2096.0], [34.9, 2096.0], [35.0, 2110.0], [35.1, 2110.0], [35.2, 2110.0], [35.3, 2110.0], [35.4, 2110.0], [35.5, 2110.0], [35.6, 2110.0], [35.7, 2110.0], [35.8, 2110.0], [35.9, 2110.0], [36.0, 2115.0], [36.1, 2115.0], [36.2, 2115.0], [36.3, 2115.0], [36.4, 2115.0], [36.5, 2115.0], [36.6, 2115.0], [36.7, 2115.0], [36.8, 2115.0], [36.9, 2115.0], [37.0, 2115.0], [37.1, 2115.0], [37.2, 2115.0], [37.3, 2115.0], [37.4, 2115.0], [37.5, 2115.0], [37.6, 2115.0], [37.7, 2115.0], [37.8, 2115.0], [37.9, 2115.0], [38.0, 2117.0], [38.1, 2117.0], [38.2, 2117.0], [38.3, 2117.0], [38.4, 2117.0], [38.5, 2117.0], [38.6, 2117.0], [38.7, 2117.0], [38.8, 2117.0], [38.9, 2117.0], [39.0, 2118.0], [39.1, 2118.0], [39.2, 2118.0], [39.3, 2118.0], [39.4, 2118.0], [39.5, 2118.0], [39.6, 2118.0], [39.7, 2118.0], [39.8, 2118.0], [39.9, 2118.0], [40.0, 2127.0], [40.1, 2127.0], [40.2, 2127.0], [40.3, 2127.0], [40.4, 2127.0], [40.5, 2127.0], [40.6, 2127.0], [40.7, 2127.0], [40.8, 2127.0], [40.9, 2127.0], [41.0, 2142.0], [41.1, 2142.0], [41.2, 2142.0], [41.3, 2142.0], [41.4, 2142.0], [41.5, 2142.0], [41.6, 2142.0], [41.7, 2142.0], [41.8, 2142.0], [41.9, 2142.0], [42.0, 2142.0], [42.1, 2142.0], [42.2, 2142.0], [42.3, 2142.0], [42.4, 2142.0], [42.5, 2142.0], [42.6, 2142.0], [42.7, 2142.0], [42.8, 2142.0], [42.9, 2142.0], [43.0, 2143.0], [43.1, 2143.0], [43.2, 2143.0], [43.3, 2143.0], [43.4, 2143.0], [43.5, 2143.0], [43.6, 2143.0], [43.7, 2143.0], [43.8, 2143.0], [43.9, 2143.0], [44.0, 2146.0], [44.1, 2146.0], [44.2, 2146.0], [44.3, 2146.0], [44.4, 2146.0], [44.5, 2146.0], [44.6, 2146.0], [44.7, 2146.0], [44.8, 2146.0], [44.9, 2146.0], [45.0, 2150.0], [45.1, 2150.0], [45.2, 2150.0], [45.3, 2150.0], [45.4, 2150.0], [45.5, 2150.0], [45.6, 2150.0], [45.7, 2150.0], [45.8, 2150.0], [45.9, 2150.0], [46.0, 2164.0], [46.1, 2164.0], [46.2, 2164.0], [46.3, 2164.0], [46.4, 2164.0], [46.5, 2164.0], [46.6, 2164.0], [46.7, 2164.0], [46.8, 2164.0], [46.9, 2164.0], [47.0, 2180.0], [47.1, 2180.0], [47.2, 2180.0], [47.3, 2180.0], [47.4, 2180.0], [47.5, 2180.0], [47.6, 2180.0], [47.7, 2180.0], [47.8, 2180.0], [47.9, 2180.0], [48.0, 2181.0], [48.1, 2181.0], [48.2, 2181.0], [48.3, 2181.0], [48.4, 2181.0], [48.5, 2181.0], [48.6, 2181.0], [48.7, 2181.0], [48.8, 2181.0], [48.9, 2181.0], [49.0, 2189.0], [49.1, 2189.0], [49.2, 2189.0], [49.3, 2189.0], [49.4, 2189.0], [49.5, 2189.0], [49.6, 2189.0], [49.7, 2189.0], [49.8, 2189.0], [49.9, 2189.0], [50.0, 2195.0], [50.1, 2195.0], [50.2, 2195.0], [50.3, 2195.0], [50.4, 2195.0], [50.5, 2195.0], [50.6, 2195.0], [50.7, 2195.0], [50.8, 2195.0], [50.9, 2195.0], [51.0, 2198.0], [51.1, 2198.0], [51.2, 2198.0], [51.3, 2198.0], [51.4, 2198.0], [51.5, 2198.0], [51.6, 2198.0], [51.7, 2198.0], [51.8, 2198.0], [51.9, 2198.0], [52.0, 2217.0], [52.1, 2217.0], [52.2, 2217.0], [52.3, 2217.0], [52.4, 2217.0], [52.5, 2217.0], [52.6, 2217.0], [52.7, 2217.0], [52.8, 2217.0], [52.9, 2217.0], [53.0, 2230.0], [53.1, 2230.0], [53.2, 2230.0], [53.3, 2230.0], [53.4, 2230.0], [53.5, 2230.0], [53.6, 2230.0], [53.7, 2230.0], [53.8, 2230.0], [53.9, 2230.0], [54.0, 2235.0], [54.1, 2235.0], [54.2, 2235.0], [54.3, 2235.0], [54.4, 2235.0], [54.5, 2235.0], [54.6, 2235.0], [54.7, 2235.0], [54.8, 2235.0], [54.9, 2235.0], [55.0, 2250.0], [55.1, 2250.0], [55.2, 2250.0], [55.3, 2250.0], [55.4, 2250.0], [55.5, 2250.0], [55.6, 2250.0], [55.7, 2250.0], [55.8, 2250.0], [55.9, 2250.0], [56.0, 2250.0], [56.1, 2250.0], [56.2, 2250.0], [56.3, 2250.0], [56.4, 2250.0], [56.5, 2250.0], [56.6, 2250.0], [56.7, 2250.0], [56.8, 2250.0], [56.9, 2250.0], [57.0, 2251.0], [57.1, 2251.0], [57.2, 2251.0], [57.3, 2251.0], [57.4, 2251.0], [57.5, 2251.0], [57.6, 2251.0], [57.7, 2251.0], [57.8, 2251.0], [57.9, 2251.0], [58.0, 2257.0], [58.1, 2257.0], [58.2, 2257.0], [58.3, 2257.0], [58.4, 2257.0], [58.5, 2257.0], [58.6, 2257.0], [58.7, 2257.0], [58.8, 2257.0], [58.9, 2257.0], [59.0, 2259.0], [59.1, 2259.0], [59.2, 2259.0], [59.3, 2259.0], [59.4, 2259.0], [59.5, 2259.0], [59.6, 2259.0], [59.7, 2259.0], [59.8, 2259.0], [59.9, 2259.0], [60.0, 2260.0], [60.1, 2260.0], [60.2, 2260.0], [60.3, 2260.0], [60.4, 2260.0], [60.5, 2260.0], [60.6, 2260.0], [60.7, 2260.0], [60.8, 2260.0], [60.9, 2260.0], [61.0, 2280.0], [61.1, 2280.0], [61.2, 2280.0], [61.3, 2280.0], [61.4, 2280.0], [61.5, 2280.0], [61.6, 2280.0], [61.7, 2280.0], [61.8, 2280.0], [61.9, 2280.0], [62.0, 2283.0], [62.1, 2283.0], [62.2, 2283.0], [62.3, 2283.0], [62.4, 2283.0], [62.5, 2283.0], [62.6, 2283.0], [62.7, 2283.0], [62.8, 2283.0], [62.9, 2283.0], [63.0, 2286.0], [63.1, 2286.0], [63.2, 2286.0], [63.3, 2286.0], [63.4, 2286.0], [63.5, 2286.0], [63.6, 2286.0], [63.7, 2286.0], [63.8, 2286.0], [63.9, 2286.0], [64.0, 2297.0], [64.1, 2297.0], [64.2, 2297.0], [64.3, 2297.0], [64.4, 2297.0], [64.5, 2297.0], [64.6, 2297.0], [64.7, 2297.0], [64.8, 2297.0], [64.9, 2297.0], [65.0, 2309.0], [65.1, 2309.0], [65.2, 2309.0], [65.3, 2309.0], [65.4, 2309.0], [65.5, 2309.0], [65.6, 2309.0], [65.7, 2309.0], [65.8, 2309.0], [65.9, 2309.0], [66.0, 2309.0], [66.1, 2309.0], [66.2, 2309.0], [66.3, 2309.0], [66.4, 2309.0], [66.5, 2309.0], [66.6, 2309.0], [66.7, 2309.0], [66.8, 2309.0], [66.9, 2309.0], [67.0, 2312.0], [67.1, 2312.0], [67.2, 2312.0], [67.3, 2312.0], [67.4, 2312.0], [67.5, 2312.0], [67.6, 2312.0], [67.7, 2312.0], [67.8, 2312.0], [67.9, 2312.0], [68.0, 2319.0], [68.1, 2319.0], [68.2, 2319.0], [68.3, 2319.0], [68.4, 2319.0], [68.5, 2319.0], [68.6, 2319.0], [68.7, 2319.0], [68.8, 2319.0], [68.9, 2319.0], [69.0, 2321.0], [69.1, 2321.0], [69.2, 2321.0], [69.3, 2321.0], [69.4, 2321.0], [69.5, 2321.0], [69.6, 2321.0], [69.7, 2321.0], [69.8, 2321.0], [69.9, 2321.0], [70.0, 2327.0], [70.1, 2327.0], [70.2, 2327.0], [70.3, 2327.0], [70.4, 2327.0], [70.5, 2327.0], [70.6, 2327.0], [70.7, 2327.0], [70.8, 2327.0], [70.9, 2327.0], [71.0, 2332.0], [71.1, 2332.0], [71.2, 2332.0], [71.3, 2332.0], [71.4, 2332.0], [71.5, 2332.0], [71.6, 2332.0], [71.7, 2332.0], [71.8, 2332.0], [71.9, 2332.0], [72.0, 2334.0], [72.1, 2334.0], [72.2, 2334.0], [72.3, 2334.0], [72.4, 2334.0], [72.5, 2334.0], [72.6, 2334.0], [72.7, 2334.0], [72.8, 2334.0], [72.9, 2334.0], [73.0, 2336.0], [73.1, 2336.0], [73.2, 2336.0], [73.3, 2336.0], [73.4, 2336.0], [73.5, 2336.0], [73.6, 2336.0], [73.7, 2336.0], [73.8, 2336.0], [73.9, 2336.0], [74.0, 2338.0], [74.1, 2338.0], [74.2, 2338.0], [74.3, 2338.0], [74.4, 2338.0], [74.5, 2338.0], [74.6, 2338.0], [74.7, 2338.0], [74.8, 2338.0], [74.9, 2338.0], [75.0, 2339.0], [75.1, 2339.0], [75.2, 2339.0], [75.3, 2339.0], [75.4, 2339.0], [75.5, 2339.0], [75.6, 2339.0], [75.7, 2339.0], [75.8, 2339.0], [75.9, 2339.0], [76.0, 2342.0], [76.1, 2342.0], [76.2, 2342.0], [76.3, 2342.0], [76.4, 2342.0], [76.5, 2342.0], [76.6, 2342.0], [76.7, 2342.0], [76.8, 2342.0], [76.9, 2342.0], [77.0, 2344.0], [77.1, 2344.0], [77.2, 2344.0], [77.3, 2344.0], [77.4, 2344.0], [77.5, 2344.0], [77.6, 2344.0], [77.7, 2344.0], [77.8, 2344.0], [77.9, 2344.0], [78.0, 2350.0], [78.1, 2350.0], [78.2, 2350.0], [78.3, 2350.0], [78.4, 2350.0], [78.5, 2350.0], [78.6, 2350.0], [78.7, 2350.0], [78.8, 2350.0], [78.9, 2350.0], [79.0, 2353.0], [79.1, 2353.0], [79.2, 2353.0], [79.3, 2353.0], [79.4, 2353.0], [79.5, 2353.0], [79.6, 2353.0], [79.7, 2353.0], [79.8, 2353.0], [79.9, 2353.0], [80.0, 2358.0], [80.1, 2358.0], [80.2, 2358.0], [80.3, 2358.0], [80.4, 2358.0], [80.5, 2358.0], [80.6, 2358.0], [80.7, 2358.0], [80.8, 2358.0], [80.9, 2358.0], [81.0, 2373.0], [81.1, 2373.0], [81.2, 2373.0], [81.3, 2373.0], [81.4, 2373.0], [81.5, 2373.0], [81.6, 2373.0], [81.7, 2373.0], [81.8, 2373.0], [81.9, 2373.0], [82.0, 2376.0], [82.1, 2376.0], [82.2, 2376.0], [82.3, 2376.0], [82.4, 2376.0], [82.5, 2376.0], [82.6, 2376.0], [82.7, 2376.0], [82.8, 2376.0], [82.9, 2376.0], [83.0, 2377.0], [83.1, 2377.0], [83.2, 2377.0], [83.3, 2377.0], [83.4, 2377.0], [83.5, 2377.0], [83.6, 2377.0], [83.7, 2377.0], [83.8, 2377.0], [83.9, 2377.0], [84.0, 2380.0], [84.1, 2380.0], [84.2, 2380.0], [84.3, 2380.0], [84.4, 2380.0], [84.5, 2380.0], [84.6, 2380.0], [84.7, 2380.0], [84.8, 2380.0], [84.9, 2380.0], [85.0, 2384.0], [85.1, 2384.0], [85.2, 2384.0], [85.3, 2384.0], [85.4, 2384.0], [85.5, 2384.0], [85.6, 2384.0], [85.7, 2384.0], [85.8, 2384.0], [85.9, 2384.0], [86.0, 2387.0], [86.1, 2387.0], [86.2, 2387.0], [86.3, 2387.0], [86.4, 2387.0], [86.5, 2387.0], [86.6, 2387.0], [86.7, 2387.0], [86.8, 2387.0], [86.9, 2387.0], [87.0, 2393.0], [87.1, 2393.0], [87.2, 2393.0], [87.3, 2393.0], [87.4, 2393.0], [87.5, 2393.0], [87.6, 2393.0], [87.7, 2393.0], [87.8, 2393.0], [87.9, 2393.0], [88.0, 2396.0], [88.1, 2396.0], [88.2, 2396.0], [88.3, 2396.0], [88.4, 2396.0], [88.5, 2396.0], [88.6, 2396.0], [88.7, 2396.0], [88.8, 2396.0], [88.9, 2396.0], [89.0, 2401.0], [89.1, 2401.0], [89.2, 2401.0], [89.3, 2401.0], [89.4, 2401.0], [89.5, 2401.0], [89.6, 2401.0], [89.7, 2401.0], [89.8, 2401.0], [89.9, 2401.0], [90.0, 2415.0], [90.1, 2415.0], [90.2, 2415.0], [90.3, 2415.0], [90.4, 2415.0], [90.5, 2415.0], [90.6, 2415.0], [90.7, 2415.0], [90.8, 2415.0], [90.9, 2415.0], [91.0, 2432.0], [91.1, 2432.0], [91.2, 2432.0], [91.3, 2432.0], [91.4, 2432.0], [91.5, 2432.0], [91.6, 2432.0], [91.7, 2432.0], [91.8, 2432.0], [91.9, 2432.0], [92.0, 2434.0], [92.1, 2434.0], [92.2, 2434.0], [92.3, 2434.0], [92.4, 2434.0], [92.5, 2434.0], [92.6, 2434.0], [92.7, 2434.0], [92.8, 2434.0], [92.9, 2434.0], [93.0, 2445.0], [93.1, 2445.0], [93.2, 2445.0], [93.3, 2445.0], [93.4, 2445.0], [93.5, 2445.0], [93.6, 2445.0], [93.7, 2445.0], [93.8, 2445.0], [93.9, 2445.0], [94.0, 2455.0], [94.1, 2455.0], [94.2, 2455.0], [94.3, 2455.0], [94.4, 2455.0], [94.5, 2455.0], [94.6, 2455.0], [94.7, 2455.0], [94.8, 2455.0], [94.9, 2455.0], [95.0, 2469.0], [95.1, 2469.0], [95.2, 2469.0], [95.3, 2469.0], [95.4, 2469.0], [95.5, 2469.0], [95.6, 2469.0], [95.7, 2469.0], [95.8, 2469.0], [95.9, 2469.0], [96.0, 2471.0], [96.1, 2471.0], [96.2, 2471.0], [96.3, 2471.0], [96.4, 2471.0], [96.5, 2471.0], [96.6, 2471.0], [96.7, 2471.0], [96.8, 2471.0], [96.9, 2471.0], [97.0, 2532.0], [97.1, 2532.0], [97.2, 2532.0], [97.3, 2532.0], [97.4, 2532.0], [97.5, 2532.0], [97.6, 2532.0], [97.7, 2532.0], [97.8, 2532.0], [97.9, 2532.0], [98.0, 2649.0], [98.1, 2649.0], [98.2, 2649.0], [98.3, 2649.0], [98.4, 2649.0], [98.5, 2649.0], [98.6, 2649.0], [98.7, 2649.0], [98.8, 2649.0], [98.9, 2649.0], [99.0, 2972.0], [99.1, 2972.0], [99.2, 2972.0], [99.3, 2972.0], [99.4, 2972.0], [99.5, 2972.0], [99.6, 2972.0], [99.7, 2972.0], [99.8, 2972.0], [99.9, 2972.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[0.0, 323.0], [0.1, 323.0], [0.2, 323.0], [0.3, 323.0], [0.4, 323.0], [0.5, 323.0], [0.6, 323.0], [0.7, 323.0], [0.8, 323.0], [0.9, 323.0], [1.0, 324.0], [1.1, 324.0], [1.2, 324.0], [1.3, 324.0], [1.4, 324.0], [1.5, 324.0], [1.6, 324.0], [1.7, 324.0], [1.8, 324.0], [1.9, 324.0], [2.0, 325.0], [2.1, 325.0], [2.2, 325.0], [2.3, 325.0], [2.4, 325.0], [2.5, 325.0], [2.6, 325.0], [2.7, 325.0], [2.8, 325.0], [2.9, 325.0], [3.0, 325.0], [3.1, 325.0], [3.2, 325.0], [3.3, 325.0], [3.4, 325.0], [3.5, 325.0], [3.6, 325.0], [3.7, 325.0], [3.8, 325.0], [3.9, 325.0], [4.0, 328.0], [4.1, 328.0], [4.2, 328.0], [4.3, 328.0], [4.4, 328.0], [4.5, 328.0], [4.6, 328.0], [4.7, 328.0], [4.8, 328.0], [4.9, 328.0], [5.0, 332.0], [5.1, 332.0], [5.2, 332.0], [5.3, 332.0], [5.4, 332.0], [5.5, 332.0], [5.6, 332.0], [5.7, 332.0], [5.8, 332.0], [5.9, 332.0], [6.0, 334.0], [6.1, 334.0], [6.2, 334.0], [6.3, 334.0], [6.4, 334.0], [6.5, 334.0], [6.6, 334.0], [6.7, 334.0], [6.8, 334.0], [6.9, 334.0], [7.0, 334.0], [7.1, 334.0], [7.2, 334.0], [7.3, 334.0], [7.4, 334.0], [7.5, 334.0], [7.6, 334.0], [7.7, 334.0], [7.8, 334.0], [7.9, 334.0], [8.0, 336.0], [8.1, 336.0], [8.2, 336.0], [8.3, 336.0], [8.4, 336.0], [8.5, 336.0], [8.6, 336.0], [8.7, 336.0], [8.8, 336.0], [8.9, 336.0], [9.0, 338.0], [9.1, 338.0], [9.2, 338.0], [9.3, 338.0], [9.4, 338.0], [9.5, 338.0], [9.6, 338.0], [9.7, 338.0], [9.8, 338.0], [9.9, 338.0], [10.0, 338.0], [10.1, 338.0], [10.2, 338.0], [10.3, 338.0], [10.4, 338.0], [10.5, 338.0], [10.6, 338.0], [10.7, 338.0], [10.8, 338.0], [10.9, 338.0], [11.0, 345.0], [11.1, 345.0], [11.2, 345.0], [11.3, 345.0], [11.4, 345.0], [11.5, 345.0], [11.6, 345.0], [11.7, 345.0], [11.8, 345.0], [11.9, 345.0], [12.0, 350.0], [12.1, 350.0], [12.2, 350.0], [12.3, 350.0], [12.4, 350.0], [12.5, 350.0], [12.6, 350.0], [12.7, 350.0], [12.8, 350.0], [12.9, 350.0], [13.0, 362.0], [13.1, 362.0], [13.2, 362.0], [13.3, 362.0], [13.4, 362.0], [13.5, 362.0], [13.6, 362.0], [13.7, 362.0], [13.8, 362.0], [13.9, 362.0], [14.0, 365.0], [14.1, 365.0], [14.2, 365.0], [14.3, 365.0], [14.4, 365.0], [14.5, 365.0], [14.6, 365.0], [14.7, 365.0], [14.8, 365.0], [14.9, 365.0], [15.0, 366.0], [15.1, 366.0], [15.2, 366.0], [15.3, 366.0], [15.4, 366.0], [15.5, 366.0], [15.6, 366.0], [15.7, 366.0], [15.8, 366.0], [15.9, 366.0], [16.0, 369.0], [16.1, 369.0], [16.2, 369.0], [16.3, 369.0], [16.4, 369.0], [16.5, 369.0], [16.6, 369.0], [16.7, 369.0], [16.8, 369.0], [16.9, 369.0], [17.0, 369.0], [17.1, 369.0], [17.2, 369.0], [17.3, 369.0], [17.4, 369.0], [17.5, 369.0], [17.6, 369.0], [17.7, 369.0], [17.8, 369.0], [17.9, 369.0], [18.0, 369.0], [18.1, 369.0], [18.2, 369.0], [18.3, 369.0], [18.4, 369.0], [18.5, 369.0], [18.6, 369.0], [18.7, 369.0], [18.8, 369.0], [18.9, 369.0], [19.0, 369.0], [19.1, 369.0], [19.2, 369.0], [19.3, 369.0], [19.4, 369.0], [19.5, 369.0], [19.6, 369.0], [19.7, 369.0], [19.8, 369.0], [19.9, 369.0], [20.0, 370.0], [20.1, 370.0], [20.2, 370.0], [20.3, 370.0], [20.4, 370.0], [20.5, 370.0], [20.6, 370.0], [20.7, 370.0], [20.8, 370.0], [20.9, 370.0], [21.0, 371.0], [21.1, 371.0], [21.2, 371.0], [21.3, 371.0], [21.4, 371.0], [21.5, 371.0], [21.6, 371.0], [21.7, 371.0], [21.8, 371.0], [21.9, 371.0], [22.0, 371.0], [22.1, 371.0], [22.2, 371.0], [22.3, 371.0], [22.4, 371.0], [22.5, 371.0], [22.6, 371.0], [22.7, 371.0], [22.8, 371.0], [22.9, 371.0], [23.0, 372.0], [23.1, 372.0], [23.2, 372.0], [23.3, 372.0], [23.4, 372.0], [23.5, 372.0], [23.6, 372.0], [23.7, 372.0], [23.8, 372.0], [23.9, 372.0], [24.0, 372.0], [24.1, 372.0], [24.2, 372.0], [24.3, 372.0], [24.4, 372.0], [24.5, 372.0], [24.6, 372.0], [24.7, 372.0], [24.8, 372.0], [24.9, 372.0], [25.0, 372.0], [25.1, 372.0], [25.2, 372.0], [25.3, 372.0], [25.4, 372.0], [25.5, 372.0], [25.6, 372.0], [25.7, 372.0], [25.8, 372.0], [25.9, 372.0], [26.0, 373.0], [26.1, 373.0], [26.2, 373.0], [26.3, 373.0], [26.4, 373.0], [26.5, 373.0], [26.6, 373.0], [26.7, 373.0], [26.8, 373.0], [26.9, 373.0], [27.0, 373.0], [27.1, 373.0], [27.2, 373.0], [27.3, 373.0], [27.4, 373.0], [27.5, 373.0], [27.6, 373.0], [27.7, 373.0], [27.8, 373.0], [27.9, 373.0], [28.0, 373.0], [28.1, 373.0], [28.2, 373.0], [28.3, 373.0], [28.4, 373.0], [28.5, 373.0], [28.6, 373.0], [28.7, 373.0], [28.8, 373.0], [28.9, 373.0], [29.0, 374.0], [29.1, 374.0], [29.2, 374.0], [29.3, 374.0], [29.4, 374.0], [29.5, 374.0], [29.6, 374.0], [29.7, 374.0], [29.8, 374.0], [29.9, 374.0], [30.0, 376.0], [30.1, 376.0], [30.2, 376.0], [30.3, 376.0], [30.4, 376.0], [30.5, 376.0], [30.6, 376.0], [30.7, 376.0], [30.8, 376.0], [30.9, 376.0], [31.0, 377.0], [31.1, 377.0], [31.2, 377.0], [31.3, 377.0], [31.4, 377.0], [31.5, 377.0], [31.6, 377.0], [31.7, 377.0], [31.8, 377.0], [31.9, 377.0], [32.0, 377.0], [32.1, 377.0], [32.2, 377.0], [32.3, 377.0], [32.4, 377.0], [32.5, 377.0], [32.6, 377.0], [32.7, 377.0], [32.8, 377.0], [32.9, 377.0], [33.0, 378.0], [33.1, 378.0], [33.2, 378.0], [33.3, 378.0], [33.4, 378.0], [33.5, 378.0], [33.6, 378.0], [33.7, 378.0], [33.8, 378.0], [33.9, 378.0], [34.0, 379.0], [34.1, 379.0], [34.2, 379.0], [34.3, 379.0], [34.4, 379.0], [34.5, 379.0], [34.6, 379.0], [34.7, 379.0], [34.8, 379.0], [34.9, 379.0], [35.0, 379.0], [35.1, 379.0], [35.2, 379.0], [35.3, 379.0], [35.4, 379.0], [35.5, 379.0], [35.6, 379.0], [35.7, 379.0], [35.8, 379.0], [35.9, 379.0], [36.0, 380.0], [36.1, 380.0], [36.2, 380.0], [36.3, 380.0], [36.4, 380.0], [36.5, 380.0], [36.6, 380.0], [36.7, 380.0], [36.8, 380.0], [36.9, 380.0], [37.0, 381.0], [37.1, 381.0], [37.2, 381.0], [37.3, 381.0], [37.4, 381.0], [37.5, 381.0], [37.6, 381.0], [37.7, 381.0], [37.8, 381.0], [37.9, 381.0], [38.0, 381.0], [38.1, 381.0], [38.2, 381.0], [38.3, 381.0], [38.4, 381.0], [38.5, 381.0], [38.6, 381.0], [38.7, 381.0], [38.8, 381.0], [38.9, 381.0], [39.0, 381.0], [39.1, 381.0], [39.2, 381.0], [39.3, 381.0], [39.4, 381.0], [39.5, 381.0], [39.6, 381.0], [39.7, 381.0], [39.8, 381.0], [39.9, 381.0], [40.0, 382.0], [40.1, 382.0], [40.2, 382.0], [40.3, 382.0], [40.4, 382.0], [40.5, 382.0], [40.6, 382.0], [40.7, 382.0], [40.8, 382.0], [40.9, 382.0], [41.0, 382.0], [41.1, 382.0], [41.2, 382.0], [41.3, 382.0], [41.4, 382.0], [41.5, 382.0], [41.6, 382.0], [41.7, 382.0], [41.8, 382.0], [41.9, 382.0], [42.0, 383.0], [42.1, 383.0], [42.2, 383.0], [42.3, 383.0], [42.4, 383.0], [42.5, 383.0], [42.6, 383.0], [42.7, 383.0], [42.8, 383.0], [42.9, 383.0], [43.0, 384.0], [43.1, 384.0], [43.2, 384.0], [43.3, 384.0], [43.4, 384.0], [43.5, 384.0], [43.6, 384.0], [43.7, 384.0], [43.8, 384.0], [43.9, 384.0], [44.0, 384.0], [44.1, 384.0], [44.2, 384.0], [44.3, 384.0], [44.4, 384.0], [44.5, 384.0], [44.6, 384.0], [44.7, 384.0], [44.8, 384.0], [44.9, 384.0], [45.0, 385.0], [45.1, 385.0], [45.2, 385.0], [45.3, 385.0], [45.4, 385.0], [45.5, 385.0], [45.6, 385.0], [45.7, 385.0], [45.8, 385.0], [45.9, 385.0], [46.0, 385.0], [46.1, 385.0], [46.2, 385.0], [46.3, 385.0], [46.4, 385.0], [46.5, 385.0], [46.6, 385.0], [46.7, 385.0], [46.8, 385.0], [46.9, 385.0], [47.0, 387.0], [47.1, 387.0], [47.2, 387.0], [47.3, 387.0], [47.4, 387.0], [47.5, 387.0], [47.6, 387.0], [47.7, 387.0], [47.8, 387.0], [47.9, 387.0], [48.0, 389.0], [48.1, 389.0], [48.2, 389.0], [48.3, 389.0], [48.4, 389.0], [48.5, 389.0], [48.6, 389.0], [48.7, 389.0], [48.8, 389.0], [48.9, 389.0], [49.0, 389.0], [49.1, 389.0], [49.2, 389.0], [49.3, 389.0], [49.4, 389.0], [49.5, 389.0], [49.6, 389.0], [49.7, 389.0], [49.8, 389.0], [49.9, 389.0], [50.0, 390.0], [50.1, 390.0], [50.2, 390.0], [50.3, 390.0], [50.4, 390.0], [50.5, 390.0], [50.6, 390.0], [50.7, 390.0], [50.8, 390.0], [50.9, 390.0], [51.0, 392.0], [51.1, 392.0], [51.2, 392.0], [51.3, 392.0], [51.4, 392.0], [51.5, 392.0], [51.6, 392.0], [51.7, 392.0], [51.8, 392.0], [51.9, 392.0], [52.0, 392.0], [52.1, 392.0], [52.2, 392.0], [52.3, 392.0], [52.4, 392.0], [52.5, 392.0], [52.6, 392.0], [52.7, 392.0], [52.8, 392.0], [52.9, 392.0], [53.0, 393.0], [53.1, 393.0], [53.2, 393.0], [53.3, 393.0], [53.4, 393.0], [53.5, 393.0], [53.6, 393.0], [53.7, 393.0], [53.8, 393.0], [53.9, 393.0], [54.0, 393.0], [54.1, 393.0], [54.2, 393.0], [54.3, 393.0], [54.4, 393.0], [54.5, 393.0], [54.6, 393.0], [54.7, 393.0], [54.8, 393.0], [54.9, 393.0], [55.0, 396.0], [55.1, 396.0], [55.2, 396.0], [55.3, 396.0], [55.4, 396.0], [55.5, 396.0], [55.6, 396.0], [55.7, 396.0], [55.8, 396.0], [55.9, 396.0], [56.0, 399.0], [56.1, 399.0], [56.2, 399.0], [56.3, 399.0], [56.4, 399.0], [56.5, 399.0], [56.6, 399.0], [56.7, 399.0], [56.8, 399.0], [56.9, 399.0], [57.0, 401.0], [57.1, 401.0], [57.2, 401.0], [57.3, 401.0], [57.4, 401.0], [57.5, 401.0], [57.6, 401.0], [57.7, 401.0], [57.8, 401.0], [57.9, 401.0], [58.0, 402.0], [58.1, 402.0], [58.2, 402.0], [58.3, 402.0], [58.4, 402.0], [58.5, 402.0], [58.6, 402.0], [58.7, 402.0], [58.8, 402.0], [58.9, 402.0], [59.0, 402.0], [59.1, 402.0], [59.2, 402.0], [59.3, 402.0], [59.4, 402.0], [59.5, 402.0], [59.6, 402.0], [59.7, 402.0], [59.8, 402.0], [59.9, 402.0], [60.0, 402.0], [60.1, 402.0], [60.2, 402.0], [60.3, 402.0], [60.4, 402.0], [60.5, 402.0], [60.6, 402.0], [60.7, 402.0], [60.8, 402.0], [60.9, 402.0], [61.0, 405.0], [61.1, 405.0], [61.2, 405.0], [61.3, 405.0], [61.4, 405.0], [61.5, 405.0], [61.6, 405.0], [61.7, 405.0], [61.8, 405.0], [61.9, 405.0], [62.0, 414.0], [62.1, 414.0], [62.2, 414.0], [62.3, 414.0], [62.4, 414.0], [62.5, 414.0], [62.6, 414.0], [62.7, 414.0], [62.8, 414.0], [62.9, 414.0], [63.0, 414.0], [63.1, 414.0], [63.2, 414.0], [63.3, 414.0], [63.4, 414.0], [63.5, 414.0], [63.6, 414.0], [63.7, 414.0], [63.8, 414.0], [63.9, 414.0], [64.0, 416.0], [64.1, 416.0], [64.2, 416.0], [64.3, 416.0], [64.4, 416.0], [64.5, 416.0], [64.6, 416.0], [64.7, 416.0], [64.8, 416.0], [64.9, 416.0], [65.0, 424.0], [65.1, 424.0], [65.2, 424.0], [65.3, 424.0], [65.4, 424.0], [65.5, 424.0], [65.6, 424.0], [65.7, 424.0], [65.8, 424.0], [65.9, 424.0], [66.0, 424.0], [66.1, 424.0], [66.2, 424.0], [66.3, 424.0], [66.4, 424.0], [66.5, 424.0], [66.6, 424.0], [66.7, 424.0], [66.8, 424.0], [66.9, 424.0], [67.0, 432.0], [67.1, 432.0], [67.2, 432.0], [67.3, 432.0], [67.4, 432.0], [67.5, 432.0], [67.6, 432.0], [67.7, 432.0], [67.8, 432.0], [67.9, 432.0], [68.0, 432.0], [68.1, 432.0], [68.2, 432.0], [68.3, 432.0], [68.4, 432.0], [68.5, 432.0], [68.6, 432.0], [68.7, 432.0], [68.8, 432.0], [68.9, 432.0], [69.0, 433.0], [69.1, 433.0], [69.2, 433.0], [69.3, 433.0], [69.4, 433.0], [69.5, 433.0], [69.6, 433.0], [69.7, 433.0], [69.8, 433.0], [69.9, 433.0], [70.0, 434.0], [70.1, 434.0], [70.2, 434.0], [70.3, 434.0], [70.4, 434.0], [70.5, 434.0], [70.6, 434.0], [70.7, 434.0], [70.8, 434.0], [70.9, 434.0], [71.0, 435.0], [71.1, 435.0], [71.2, 435.0], [71.3, 435.0], [71.4, 435.0], [71.5, 435.0], [71.6, 435.0], [71.7, 435.0], [71.8, 435.0], [71.9, 435.0], [72.0, 435.0], [72.1, 435.0], [72.2, 435.0], [72.3, 435.0], [72.4, 435.0], [72.5, 435.0], [72.6, 435.0], [72.7, 435.0], [72.8, 435.0], [72.9, 435.0], [73.0, 436.0], [73.1, 436.0], [73.2, 436.0], [73.3, 436.0], [73.4, 436.0], [73.5, 436.0], [73.6, 436.0], [73.7, 436.0], [73.8, 436.0], [73.9, 436.0], [74.0, 436.0], [74.1, 436.0], [74.2, 436.0], [74.3, 436.0], [74.4, 436.0], [74.5, 436.0], [74.6, 436.0], [74.7, 436.0], [74.8, 436.0], [74.9, 436.0], [75.0, 437.0], [75.1, 437.0], [75.2, 437.0], [75.3, 437.0], [75.4, 437.0], [75.5, 437.0], [75.6, 437.0], [75.7, 437.0], [75.8, 437.0], [75.9, 437.0], [76.0, 437.0], [76.1, 437.0], [76.2, 437.0], [76.3, 437.0], [76.4, 437.0], [76.5, 437.0], [76.6, 437.0], [76.7, 437.0], [76.8, 437.0], [76.9, 437.0], [77.0, 437.0], [77.1, 437.0], [77.2, 437.0], [77.3, 437.0], [77.4, 437.0], [77.5, 437.0], [77.6, 437.0], [77.7, 437.0], [77.8, 437.0], [77.9, 437.0], [78.0, 437.0], [78.1, 437.0], [78.2, 437.0], [78.3, 437.0], [78.4, 437.0], [78.5, 437.0], [78.6, 437.0], [78.7, 437.0], [78.8, 437.0], [78.9, 437.0], [79.0, 437.0], [79.1, 437.0], [79.2, 437.0], [79.3, 437.0], [79.4, 437.0], [79.5, 437.0], [79.6, 437.0], [79.7, 437.0], [79.8, 437.0], [79.9, 437.0], [80.0, 438.0], [80.1, 438.0], [80.2, 438.0], [80.3, 438.0], [80.4, 438.0], [80.5, 438.0], [80.6, 438.0], [80.7, 438.0], [80.8, 438.0], [80.9, 438.0], [81.0, 438.0], [81.1, 438.0], [81.2, 438.0], [81.3, 438.0], [81.4, 438.0], [81.5, 438.0], [81.6, 438.0], [81.7, 438.0], [81.8, 438.0], [81.9, 438.0], [82.0, 438.0], [82.1, 438.0], [82.2, 438.0], [82.3, 438.0], [82.4, 438.0], [82.5, 438.0], [82.6, 438.0], [82.7, 438.0], [82.8, 438.0], [82.9, 438.0], [83.0, 438.0], [83.1, 438.0], [83.2, 438.0], [83.3, 438.0], [83.4, 438.0], [83.5, 438.0], [83.6, 438.0], [83.7, 438.0], [83.8, 438.0], [83.9, 438.0], [84.0, 439.0], [84.1, 439.0], [84.2, 439.0], [84.3, 439.0], [84.4, 439.0], [84.5, 439.0], [84.6, 439.0], [84.7, 439.0], [84.8, 439.0], [84.9, 439.0], [85.0, 439.0], [85.1, 439.0], [85.2, 439.0], [85.3, 439.0], [85.4, 439.0], [85.5, 439.0], [85.6, 439.0], [85.7, 439.0], [85.8, 439.0], [85.9, 439.0], [86.0, 439.0], [86.1, 439.0], [86.2, 439.0], [86.3, 439.0], [86.4, 439.0], [86.5, 439.0], [86.6, 439.0], [86.7, 439.0], [86.8, 439.0], [86.9, 439.0], [87.0, 440.0], [87.1, 440.0], [87.2, 440.0], [87.3, 440.0], [87.4, 440.0], [87.5, 440.0], [87.6, 440.0], [87.7, 440.0], [87.8, 440.0], [87.9, 440.0], [88.0, 441.0], [88.1, 441.0], [88.2, 441.0], [88.3, 441.0], [88.4, 441.0], [88.5, 441.0], [88.6, 441.0], [88.7, 441.0], [88.8, 441.0], [88.9, 441.0], [89.0, 441.0], [89.1, 441.0], [89.2, 441.0], [89.3, 441.0], [89.4, 441.0], [89.5, 441.0], [89.6, 441.0], [89.7, 441.0], [89.8, 441.0], [89.9, 441.0], [90.0, 443.0], [90.1, 443.0], [90.2, 443.0], [90.3, 443.0], [90.4, 443.0], [90.5, 443.0], [90.6, 443.0], [90.7, 443.0], [90.8, 443.0], [90.9, 443.0], [91.0, 444.0], [91.1, 444.0], [91.2, 444.0], [91.3, 444.0], [91.4, 444.0], [91.5, 444.0], [91.6, 444.0], [91.7, 444.0], [91.8, 444.0], [91.9, 444.0], [92.0, 447.0], [92.1, 447.0], [92.2, 447.0], [92.3, 447.0], [92.4, 447.0], [92.5, 447.0], [92.6, 447.0], [92.7, 447.0], [92.8, 447.0], [92.9, 447.0], [93.0, 447.0], [93.1, 447.0], [93.2, 447.0], [93.3, 447.0], [93.4, 447.0], [93.5, 447.0], [93.6, 447.0], [93.7, 447.0], [93.8, 447.0], [93.9, 447.0], [94.0, 451.0], [94.1, 451.0], [94.2, 451.0], [94.3, 451.0], [94.4, 451.0], [94.5, 451.0], [94.6, 451.0], [94.7, 451.0], [94.8, 451.0], [94.9, 451.0], [95.0, 454.0], [95.1, 454.0], [95.2, 454.0], [95.3, 454.0], [95.4, 454.0], [95.5, 454.0], [95.6, 454.0], [95.7, 454.0], [95.8, 454.0], [95.9, 454.0], [96.0, 456.0], [96.1, 456.0], [96.2, 456.0], [96.3, 456.0], [96.4, 456.0], [96.5, 456.0], [96.6, 456.0], [96.7, 456.0], [96.8, 456.0], [96.9, 456.0], [97.0, 456.0], [97.1, 456.0], [97.2, 456.0], [97.3, 456.0], [97.4, 456.0], [97.5, 456.0], [97.6, 456.0], [97.7, 456.0], [97.8, 456.0], [97.9, 456.0], [98.0, 468.0], [98.1, 468.0], [98.2, 468.0], [98.3, 468.0], [98.4, 468.0], [98.5, 468.0], [98.6, 468.0], [98.7, 468.0], [98.8, 468.0], [98.9, 468.0], [99.0, 475.0], [99.1, 475.0], [99.2, 475.0], [99.3, 475.0], [99.4, 475.0], [99.5, 475.0], [99.6, 475.0], [99.7, 475.0], [99.8, 475.0], [99.9, 475.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[0.0, 292.0], [0.1, 292.0], [0.2, 292.0], [0.3, 292.0], [0.4, 292.0], [0.5, 292.0], [0.6, 292.0], [0.7, 292.0], [0.8, 292.0], [0.9, 292.0], [1.0, 327.0], [1.1, 327.0], [1.2, 327.0], [1.3, 327.0], [1.4, 327.0], [1.5, 327.0], [1.6, 327.0], [1.7, 327.0], [1.8, 327.0], [1.9, 327.0], [2.0, 346.0], [2.1, 346.0], [2.2, 346.0], [2.3, 346.0], [2.4, 346.0], [2.5, 346.0], [2.6, 346.0], [2.7, 346.0], [2.8, 346.0], [2.9, 346.0], [3.0, 349.0], [3.1, 349.0], [3.2, 349.0], [3.3, 349.0], [3.4, 349.0], [3.5, 349.0], [3.6, 349.0], [3.7, 349.0], [3.8, 349.0], [3.9, 349.0], [4.0, 352.0], [4.1, 352.0], [4.2, 352.0], [4.3, 352.0], [4.4, 352.0], [4.5, 352.0], [4.6, 352.0], [4.7, 352.0], [4.8, 352.0], [4.9, 352.0], [5.0, 358.0], [5.1, 358.0], [5.2, 358.0], [5.3, 358.0], [5.4, 358.0], [5.5, 358.0], [5.6, 358.0], [5.7, 358.0], [5.8, 358.0], [5.9, 358.0], [6.0, 367.0], [6.1, 367.0], [6.2, 367.0], [6.3, 367.0], [6.4, 367.0], [6.5, 367.0], [6.6, 367.0], [6.7, 367.0], [6.8, 367.0], [6.9, 367.0], [7.0, 369.0], [7.1, 369.0], [7.2, 369.0], [7.3, 369.0], [7.4, 369.0], [7.5, 369.0], [7.6, 369.0], [7.7, 369.0], [7.8, 369.0], [7.9, 369.0], [8.0, 388.0], [8.1, 388.0], [8.2, 388.0], [8.3, 388.0], [8.4, 388.0], [8.5, 388.0], [8.6, 388.0], [8.7, 388.0], [8.8, 388.0], [8.9, 388.0], [9.0, 396.0], [9.1, 396.0], [9.2, 396.0], [9.3, 396.0], [9.4, 396.0], [9.5, 396.0], [9.6, 396.0], [9.7, 396.0], [9.8, 396.0], [9.9, 396.0], [10.0, 397.0], [10.1, 397.0], [10.2, 397.0], [10.3, 397.0], [10.4, 397.0], [10.5, 397.0], [10.6, 397.0], [10.7, 397.0], [10.8, 397.0], [10.9, 397.0], [11.0, 404.0], [11.1, 404.0], [11.2, 404.0], [11.3, 404.0], [11.4, 404.0], [11.5, 404.0], [11.6, 404.0], [11.7, 404.0], [11.8, 404.0], [11.9, 404.0], [12.0, 424.0], [12.1, 424.0], [12.2, 424.0], [12.3, 424.0], [12.4, 424.0], [12.5, 424.0], [12.6, 424.0], [12.7, 424.0], [12.8, 424.0], [12.9, 424.0], [13.0, 424.0], [13.1, 424.0], [13.2, 424.0], [13.3, 424.0], [13.4, 424.0], [13.5, 424.0], [13.6, 424.0], [13.7, 424.0], [13.8, 424.0], [13.9, 424.0], [14.0, 425.0], [14.1, 425.0], [14.2, 425.0], [14.3, 425.0], [14.4, 425.0], [14.5, 425.0], [14.6, 425.0], [14.7, 425.0], [14.8, 425.0], [14.9, 425.0], [15.0, 433.0], [15.1, 433.0], [15.2, 433.0], [15.3, 433.0], [15.4, 433.0], [15.5, 433.0], [15.6, 433.0], [15.7, 433.0], [15.8, 433.0], [15.9, 433.0], [16.0, 435.0], [16.1, 435.0], [16.2, 435.0], [16.3, 435.0], [16.4, 435.0], [16.5, 435.0], [16.6, 435.0], [16.7, 435.0], [16.8, 435.0], [16.9, 435.0], [17.0, 447.0], [17.1, 447.0], [17.2, 447.0], [17.3, 447.0], [17.4, 447.0], [17.5, 447.0], [17.6, 447.0], [17.7, 447.0], [17.8, 447.0], [17.9, 447.0], [18.0, 447.0], [18.1, 447.0], [18.2, 447.0], [18.3, 447.0], [18.4, 447.0], [18.5, 447.0], [18.6, 447.0], [18.7, 447.0], [18.8, 447.0], [18.9, 447.0], [19.0, 496.0], [19.1, 496.0], [19.2, 496.0], [19.3, 496.0], [19.4, 496.0], [19.5, 496.0], [19.6, 496.0], [19.7, 496.0], [19.8, 496.0], [19.9, 496.0], [20.0, 3159.0], [20.1, 3159.0], [20.2, 3159.0], [20.3, 3159.0], [20.4, 3159.0], [20.5, 3159.0], [20.6, 3159.0], [20.7, 3159.0], [20.8, 3159.0], [20.9, 3159.0], [21.0, 3176.0], [21.1, 3176.0], [21.2, 3176.0], [21.3, 3176.0], [21.4, 3176.0], [21.5, 3176.0], [21.6, 3176.0], [21.7, 3176.0], [21.8, 3176.0], [21.9, 3176.0], [22.0, 3178.0], [22.1, 3178.0], [22.2, 3178.0], [22.3, 3178.0], [22.4, 3178.0], [22.5, 3178.0], [22.6, 3178.0], [22.7, 3178.0], [22.8, 3178.0], [22.9, 3178.0], [23.0, 3178.0], [23.1, 3178.0], [23.2, 3178.0], [23.3, 3178.0], [23.4, 3178.0], [23.5, 3178.0], [23.6, 3178.0], [23.7, 3178.0], [23.8, 3178.0], [23.9, 3178.0], [24.0, 3180.0], [24.1, 3180.0], [24.2, 3180.0], [24.3, 3180.0], [24.4, 3180.0], [24.5, 3180.0], [24.6, 3180.0], [24.7, 3180.0], [24.8, 3180.0], [24.9, 3180.0], [25.0, 3184.0], [25.1, 3184.0], [25.2, 3184.0], [25.3, 3184.0], [25.4, 3184.0], [25.5, 3184.0], [25.6, 3184.0], [25.7, 3184.0], [25.8, 3184.0], [25.9, 3184.0], [26.0, 3193.0], [26.1, 3193.0], [26.2, 3193.0], [26.3, 3193.0], [26.4, 3193.0], [26.5, 3193.0], [26.6, 3193.0], [26.7, 3193.0], [26.8, 3193.0], [26.9, 3193.0], [27.0, 3197.0], [27.1, 3197.0], [27.2, 3197.0], [27.3, 3197.0], [27.4, 3197.0], [27.5, 3197.0], [27.6, 3197.0], [27.7, 3197.0], [27.8, 3197.0], [27.9, 3197.0], [28.0, 3205.0], [28.1, 3205.0], [28.2, 3205.0], [28.3, 3205.0], [28.4, 3205.0], [28.5, 3205.0], [28.6, 3205.0], [28.7, 3205.0], [28.8, 3205.0], [28.9, 3205.0], [29.0, 3210.0], [29.1, 3210.0], [29.2, 3210.0], [29.3, 3210.0], [29.4, 3210.0], [29.5, 3210.0], [29.6, 3210.0], [29.7, 3210.0], [29.8, 3210.0], [29.9, 3210.0], [30.0, 3213.0], [30.1, 3213.0], [30.2, 3213.0], [30.3, 3213.0], [30.4, 3213.0], [30.5, 3213.0], [30.6, 3213.0], [30.7, 3213.0], [30.8, 3213.0], [30.9, 3213.0], [31.0, 3220.0], [31.1, 3220.0], [31.2, 3220.0], [31.3, 3220.0], [31.4, 3220.0], [31.5, 3220.0], [31.6, 3220.0], [31.7, 3220.0], [31.8, 3220.0], [31.9, 3220.0], [32.0, 3221.0], [32.1, 3221.0], [32.2, 3221.0], [32.3, 3221.0], [32.4, 3221.0], [32.5, 3221.0], [32.6, 3221.0], [32.7, 3221.0], [32.8, 3221.0], [32.9, 3221.0], [33.0, 3225.0], [33.1, 3225.0], [33.2, 3225.0], [33.3, 3225.0], [33.4, 3225.0], [33.5, 3225.0], [33.6, 3225.0], [33.7, 3225.0], [33.8, 3225.0], [33.9, 3225.0], [34.0, 3226.0], [34.1, 3226.0], [34.2, 3226.0], [34.3, 3226.0], [34.4, 3226.0], [34.5, 3226.0], [34.6, 3226.0], [34.7, 3226.0], [34.8, 3226.0], [34.9, 3226.0], [35.0, 3227.0], [35.1, 3227.0], [35.2, 3227.0], [35.3, 3227.0], [35.4, 3227.0], [35.5, 3227.0], [35.6, 3227.0], [35.7, 3227.0], [35.8, 3227.0], [35.9, 3227.0], [36.0, 3228.0], [36.1, 3228.0], [36.2, 3228.0], [36.3, 3228.0], [36.4, 3228.0], [36.5, 3228.0], [36.6, 3228.0], [36.7, 3228.0], [36.8, 3228.0], [36.9, 3228.0], [37.0, 3230.0], [37.1, 3230.0], [37.2, 3230.0], [37.3, 3230.0], [37.4, 3230.0], [37.5, 3230.0], [37.6, 3230.0], [37.7, 3230.0], [37.8, 3230.0], [37.9, 3230.0], [38.0, 3232.0], [38.1, 3232.0], [38.2, 3232.0], [38.3, 3232.0], [38.4, 3232.0], [38.5, 3232.0], [38.6, 3232.0], [38.7, 3232.0], [38.8, 3232.0], [38.9, 3232.0], [39.0, 3250.0], [39.1, 3250.0], [39.2, 3250.0], [39.3, 3250.0], [39.4, 3250.0], [39.5, 3250.0], [39.6, 3250.0], [39.7, 3250.0], [39.8, 3250.0], [39.9, 3250.0], [40.0, 3479.0], [40.1, 3479.0], [40.2, 3479.0], [40.3, 3479.0], [40.4, 3479.0], [40.5, 3479.0], [40.6, 3479.0], [40.7, 3479.0], [40.8, 3479.0], [40.9, 3479.0], [41.0, 3584.0], [41.1, 3584.0], [41.2, 3584.0], [41.3, 3584.0], [41.4, 3584.0], [41.5, 3584.0], [41.6, 3584.0], [41.7, 3584.0], [41.8, 3584.0], [41.9, 3584.0], [42.0, 3589.0], [42.1, 3589.0], [42.2, 3589.0], [42.3, 3589.0], [42.4, 3589.0], [42.5, 3589.0], [42.6, 3589.0], [42.7, 3589.0], [42.8, 3589.0], [42.9, 3589.0], [43.0, 3616.0], [43.1, 3616.0], [43.2, 3616.0], [43.3, 3616.0], [43.4, 3616.0], [43.5, 3616.0], [43.6, 3616.0], [43.7, 3616.0], [43.8, 3616.0], [43.9, 3616.0], [44.0, 3619.0], [44.1, 3619.0], [44.2, 3619.0], [44.3, 3619.0], [44.4, 3619.0], [44.5, 3619.0], [44.6, 3619.0], [44.7, 3619.0], [44.8, 3619.0], [44.9, 3619.0], [45.0, 3625.0], [45.1, 3625.0], [45.2, 3625.0], [45.3, 3625.0], [45.4, 3625.0], [45.5, 3625.0], [45.6, 3625.0], [45.7, 3625.0], [45.8, 3625.0], [45.9, 3625.0], [46.0, 3626.0], [46.1, 3626.0], [46.2, 3626.0], [46.3, 3626.0], [46.4, 3626.0], [46.5, 3626.0], [46.6, 3626.0], [46.7, 3626.0], [46.8, 3626.0], [46.9, 3626.0], [47.0, 3637.0], [47.1, 3637.0], [47.2, 3637.0], [47.3, 3637.0], [47.4, 3637.0], [47.5, 3637.0], [47.6, 3637.0], [47.7, 3637.0], [47.8, 3637.0], [47.9, 3637.0], [48.0, 3638.0], [48.1, 3638.0], [48.2, 3638.0], [48.3, 3638.0], [48.4, 3638.0], [48.5, 3638.0], [48.6, 3638.0], [48.7, 3638.0], [48.8, 3638.0], [48.9, 3638.0], [49.0, 3639.0], [49.1, 3639.0], [49.2, 3639.0], [49.3, 3639.0], [49.4, 3639.0], [49.5, 3639.0], [49.6, 3639.0], [49.7, 3639.0], [49.8, 3639.0], [49.9, 3639.0], [50.0, 3640.0], [50.1, 3640.0], [50.2, 3640.0], [50.3, 3640.0], [50.4, 3640.0], [50.5, 3640.0], [50.6, 3640.0], [50.7, 3640.0], [50.8, 3640.0], [50.9, 3640.0], [51.0, 3645.0], [51.1, 3645.0], [51.2, 3645.0], [51.3, 3645.0], [51.4, 3645.0], [51.5, 3645.0], [51.6, 3645.0], [51.7, 3645.0], [51.8, 3645.0], [51.9, 3645.0], [52.0, 3651.0], [52.1, 3651.0], [52.2, 3651.0], [52.3, 3651.0], [52.4, 3651.0], [52.5, 3651.0], [52.6, 3651.0], [52.7, 3651.0], [52.8, 3651.0], [52.9, 3651.0], [53.0, 3651.0], [53.1, 3651.0], [53.2, 3651.0], [53.3, 3651.0], [53.4, 3651.0], [53.5, 3651.0], [53.6, 3651.0], [53.7, 3651.0], [53.8, 3651.0], [53.9, 3651.0], [54.0, 3653.0], [54.1, 3653.0], [54.2, 3653.0], [54.3, 3653.0], [54.4, 3653.0], [54.5, 3653.0], [54.6, 3653.0], [54.7, 3653.0], [54.8, 3653.0], [54.9, 3653.0], [55.0, 3653.0], [55.1, 3653.0], [55.2, 3653.0], [55.3, 3653.0], [55.4, 3653.0], [55.5, 3653.0], [55.6, 3653.0], [55.7, 3653.0], [55.8, 3653.0], [55.9, 3653.0], [56.0, 3656.0], [56.1, 3656.0], [56.2, 3656.0], [56.3, 3656.0], [56.4, 3656.0], [56.5, 3656.0], [56.6, 3656.0], [56.7, 3656.0], [56.8, 3656.0], [56.9, 3656.0], [57.0, 3657.0], [57.1, 3657.0], [57.2, 3657.0], [57.3, 3657.0], [57.4, 3657.0], [57.5, 3657.0], [57.6, 3657.0], [57.7, 3657.0], [57.8, 3657.0], [57.9, 3657.0], [58.0, 3659.0], [58.1, 3659.0], [58.2, 3659.0], [58.3, 3659.0], [58.4, 3659.0], [58.5, 3659.0], [58.6, 3659.0], [58.7, 3659.0], [58.8, 3659.0], [58.9, 3659.0], [59.0, 3660.0], [59.1, 3660.0], [59.2, 3660.0], [59.3, 3660.0], [59.4, 3660.0], [59.5, 3660.0], [59.6, 3660.0], [59.7, 3660.0], [59.8, 3660.0], [59.9, 3660.0], [60.0, 3661.0], [60.1, 3661.0], [60.2, 3661.0], [60.3, 3661.0], [60.4, 3661.0], [60.5, 3661.0], [60.6, 3661.0], [60.7, 3661.0], [60.8, 3661.0], [60.9, 3661.0], [61.0, 3662.0], [61.1, 3662.0], [61.2, 3662.0], [61.3, 3662.0], [61.4, 3662.0], [61.5, 3662.0], [61.6, 3662.0], [61.7, 3662.0], [61.8, 3662.0], [61.9, 3662.0], [62.0, 3664.0], [62.1, 3664.0], [62.2, 3664.0], [62.3, 3664.0], [62.4, 3664.0], [62.5, 3664.0], [62.6, 3664.0], [62.7, 3664.0], [62.8, 3664.0], [62.9, 3664.0], [63.0, 3665.0], [63.1, 3665.0], [63.2, 3665.0], [63.3, 3665.0], [63.4, 3665.0], [63.5, 3665.0], [63.6, 3665.0], [63.7, 3665.0], [63.8, 3665.0], [63.9, 3665.0], [64.0, 3671.0], [64.1, 3671.0], [64.2, 3671.0], [64.3, 3671.0], [64.4, 3671.0], [64.5, 3671.0], [64.6, 3671.0], [64.7, 3671.0], [64.8, 3671.0], [64.9, 3671.0], [65.0, 3673.0], [65.1, 3673.0], [65.2, 3673.0], [65.3, 3673.0], [65.4, 3673.0], [65.5, 3673.0], [65.6, 3673.0], [65.7, 3673.0], [65.8, 3673.0], [65.9, 3673.0], [66.0, 3679.0], [66.1, 3679.0], [66.2, 3679.0], [66.3, 3679.0], [66.4, 3679.0], [66.5, 3679.0], [66.6, 3679.0], [66.7, 3679.0], [66.8, 3679.0], [66.9, 3679.0], [67.0, 3680.0], [67.1, 3680.0], [67.2, 3680.0], [67.3, 3680.0], [67.4, 3680.0], [67.5, 3680.0], [67.6, 3680.0], [67.7, 3680.0], [67.8, 3680.0], [67.9, 3680.0], [68.0, 3681.0], [68.1, 3681.0], [68.2, 3681.0], [68.3, 3681.0], [68.4, 3681.0], [68.5, 3681.0], [68.6, 3681.0], [68.7, 3681.0], [68.8, 3681.0], [68.9, 3681.0], [69.0, 3681.0], [69.1, 3681.0], [69.2, 3681.0], [69.3, 3681.0], [69.4, 3681.0], [69.5, 3681.0], [69.6, 3681.0], [69.7, 3681.0], [69.8, 3681.0], [69.9, 3681.0], [70.0, 3682.0], [70.1, 3682.0], [70.2, 3682.0], [70.3, 3682.0], [70.4, 3682.0], [70.5, 3682.0], [70.6, 3682.0], [70.7, 3682.0], [70.8, 3682.0], [70.9, 3682.0], [71.0, 3685.0], [71.1, 3685.0], [71.2, 3685.0], [71.3, 3685.0], [71.4, 3685.0], [71.5, 3685.0], [71.6, 3685.0], [71.7, 3685.0], [71.8, 3685.0], [71.9, 3685.0], [72.0, 3687.0], [72.1, 3687.0], [72.2, 3687.0], [72.3, 3687.0], [72.4, 3687.0], [72.5, 3687.0], [72.6, 3687.0], [72.7, 3687.0], [72.8, 3687.0], [72.9, 3687.0], [73.0, 3690.0], [73.1, 3690.0], [73.2, 3690.0], [73.3, 3690.0], [73.4, 3690.0], [73.5, 3690.0], [73.6, 3690.0], [73.7, 3690.0], [73.8, 3690.0], [73.9, 3690.0], [74.0, 3695.0], [74.1, 3695.0], [74.2, 3695.0], [74.3, 3695.0], [74.4, 3695.0], [74.5, 3695.0], [74.6, 3695.0], [74.7, 3695.0], [74.8, 3695.0], [74.9, 3695.0], [75.0, 3706.0], [75.1, 3706.0], [75.2, 3706.0], [75.3, 3706.0], [75.4, 3706.0], [75.5, 3706.0], [75.6, 3706.0], [75.7, 3706.0], [75.8, 3706.0], [75.9, 3706.0], [76.0, 3708.0], [76.1, 3708.0], [76.2, 3708.0], [76.3, 3708.0], [76.4, 3708.0], [76.5, 3708.0], [76.6, 3708.0], [76.7, 3708.0], [76.8, 3708.0], [76.9, 3708.0], [77.0, 3715.0], [77.1, 3715.0], [77.2, 3715.0], [77.3, 3715.0], [77.4, 3715.0], [77.5, 3715.0], [77.6, 3715.0], [77.7, 3715.0], [77.8, 3715.0], [77.9, 3715.0], [78.0, 3728.0], [78.1, 3728.0], [78.2, 3728.0], [78.3, 3728.0], [78.4, 3728.0], [78.5, 3728.0], [78.6, 3728.0], [78.7, 3728.0], [78.8, 3728.0], [78.9, 3728.0], [79.0, 3735.0], [79.1, 3735.0], [79.2, 3735.0], [79.3, 3735.0], [79.4, 3735.0], [79.5, 3735.0], [79.6, 3735.0], [79.7, 3735.0], [79.8, 3735.0], [79.9, 3735.0], [80.0, 3784.0], [80.1, 3784.0], [80.2, 3784.0], [80.3, 3784.0], [80.4, 3784.0], [80.5, 3784.0], [80.6, 3784.0], [80.7, 3784.0], [80.8, 3784.0], [80.9, 3784.0], [81.0, 3808.0], [81.1, 3808.0], [81.2, 3808.0], [81.3, 3808.0], [81.4, 3808.0], [81.5, 3808.0], [81.6, 3808.0], [81.7, 3808.0], [81.8, 3808.0], [81.9, 3808.0], [82.0, 3811.0], [82.1, 3811.0], [82.2, 3811.0], [82.3, 3811.0], [82.4, 3811.0], [82.5, 3811.0], [82.6, 3811.0], [82.7, 3811.0], [82.8, 3811.0], [82.9, 3811.0], [83.0, 3881.0], [83.1, 3881.0], [83.2, 3881.0], [83.3, 3881.0], [83.4, 3881.0], [83.5, 3881.0], [83.6, 3881.0], [83.7, 3881.0], [83.8, 3881.0], [83.9, 3881.0], [84.0, 3897.0], [84.1, 3897.0], [84.2, 3897.0], [84.3, 3897.0], [84.4, 3897.0], [84.5, 3897.0], [84.6, 3897.0], [84.7, 3897.0], [84.8, 3897.0], [84.9, 3897.0], [85.0, 3905.0], [85.1, 3905.0], [85.2, 3905.0], [85.3, 3905.0], [85.4, 3905.0], [85.5, 3905.0], [85.6, 3905.0], [85.7, 3905.0], [85.8, 3905.0], [85.9, 3905.0], [86.0, 3906.0], [86.1, 3906.0], [86.2, 3906.0], [86.3, 3906.0], [86.4, 3906.0], [86.5, 3906.0], [86.6, 3906.0], [86.7, 3906.0], [86.8, 3906.0], [86.9, 3906.0], [87.0, 3915.0], [87.1, 3915.0], [87.2, 3915.0], [87.3, 3915.0], [87.4, 3915.0], [87.5, 3915.0], [87.6, 3915.0], [87.7, 3915.0], [87.8, 3915.0], [87.9, 3915.0], [88.0, 3922.0], [88.1, 3922.0], [88.2, 3922.0], [88.3, 3922.0], [88.4, 3922.0], [88.5, 3922.0], [88.6, 3922.0], [88.7, 3922.0], [88.8, 3922.0], [88.9, 3922.0], [89.0, 3927.0], [89.1, 3927.0], [89.2, 3927.0], [89.3, 3927.0], [89.4, 3927.0], [89.5, 3927.0], [89.6, 3927.0], [89.7, 3927.0], [89.8, 3927.0], [89.9, 3927.0], [90.0, 3939.0], [90.1, 3939.0], [90.2, 3939.0], [90.3, 3939.0], [90.4, 3939.0], [90.5, 3939.0], [90.6, 3939.0], [90.7, 3939.0], [90.8, 3939.0], [90.9, 3939.0], [91.0, 3949.0], [91.1, 3949.0], [91.2, 3949.0], [91.3, 3949.0], [91.4, 3949.0], [91.5, 3949.0], [91.6, 3949.0], [91.7, 3949.0], [91.8, 3949.0], [91.9, 3949.0], [92.0, 3951.0], [92.1, 3951.0], [92.2, 3951.0], [92.3, 3951.0], [92.4, 3951.0], [92.5, 3951.0], [92.6, 3951.0], [92.7, 3951.0], [92.8, 3951.0], [92.9, 3951.0], [93.0, 3963.0], [93.1, 3963.0], [93.2, 3963.0], [93.3, 3963.0], [93.4, 3963.0], [93.5, 3963.0], [93.6, 3963.0], [93.7, 3963.0], [93.8, 3963.0], [93.9, 3963.0], [94.0, 3983.0], [94.1, 3983.0], [94.2, 3983.0], [94.3, 3983.0], [94.4, 3983.0], [94.5, 3983.0], [94.6, 3983.0], [94.7, 3983.0], [94.8, 3983.0], [94.9, 3983.0], [95.0, 4020.0], [95.1, 4020.0], [95.2, 4020.0], [95.3, 4020.0], [95.4, 4020.0], [95.5, 4020.0], [95.6, 4020.0], [95.7, 4020.0], [95.8, 4020.0], [95.9, 4020.0], [96.0, 4405.0], [96.1, 4405.0], [96.2, 4405.0], [96.3, 4405.0], [96.4, 4405.0], [96.5, 4405.0], [96.6, 4405.0], [96.7, 4405.0], [96.8, 4405.0], [96.9, 4405.0], [97.0, 4636.0], [97.1, 4636.0], [97.2, 4636.0], [97.3, 4636.0], [97.4, 4636.0], [97.5, 4636.0], [97.6, 4636.0], [97.7, 4636.0], [97.8, 4636.0], [97.9, 4636.0], [98.0, 4670.0], [98.1, 4670.0], [98.2, 4670.0], [98.3, 4670.0], [98.4, 4670.0], [98.5, 4670.0], [98.6, 4670.0], [98.7, 4670.0], [98.8, 4670.0], [98.9, 4670.0], [99.0, 4683.0], [99.1, 4683.0], [99.2, 4683.0], [99.3, 4683.0], [99.4, 4683.0], [99.5, 4683.0], [99.6, 4683.0], [99.7, 4683.0], [99.8, 4683.0], [99.9, 4683.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 57.0, "series": [{"data": [[600.0, 53.0], [300.0, 1.0], [700.0, 9.0], [100.0, 1.0], [200.0, 18.0], [800.0, 18.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[2100.0, 26.0], [2200.0, 22.0], [2300.0, 6.0], [2400.0, 9.0], [2500.0, 6.0], [2700.0, 1.0], [1000.0, 11.0], [1100.0, 3.0], [1200.0, 4.0], [1300.0, 1.0], [1400.0, 1.0], [1700.0, 6.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 1.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[2100.0, 17.0], [2300.0, 24.0], [2200.0, 13.0], [2400.0, 8.0], [2500.0, 1.0], [2600.0, 1.0], [2900.0, 1.0], [1800.0, 1.0], [1900.0, 9.0], [2000.0, 25.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[300.0, 57.0], [400.0, 43.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[3100.0, 8.0], [3200.0, 12.0], [200.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 32.0], [3700.0, 6.0], [3800.0, 4.0], [3900.0, 10.0], [4000.0, 1.0], [4600.0, 3.0], [4400.0, 1.0], [300.0, 10.0], [400.0, 9.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 100.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 260.0, "series": [{"data": [[0.0, 140.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 100.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 260.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.71230754E12, "maxY": 1.0, "series": [{"data": [[1.71230784E12, 1.0], [1.71230766E12, 1.0], [1.7123082E12, 1.0], [1.7123079E12, 1.0], [1.7123076E12, 1.0], [1.71230826E12, 1.0], [1.71230796E12, 1.0], [1.71230754E12, 1.0], [1.71230832E12, 1.0], [1.71230802E12, 1.0], [1.71230778E12, 1.0], [1.71230808E12, 1.0], [1.71230772E12, 1.0], [1.71230814E12, 1.0]], "isOverall": false, "label": "tipg_1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230832E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 397.1000000000001, "minX": 1.0, "maxY": 2992.88, "series": [{"data": [[1.0, 613.0400000000001]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.0, 613.0400000000001]], "isOverall": false, "label": "Test_5-Aggregated", "isController": false}, {"data": [[1.0, 2014.3800000000003]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.0, 2014.3800000000003]], "isOverall": false, "label": "Test_1-Aggregated", "isController": false}, {"data": [[1.0, 2211.3300000000004]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.0, 2211.3300000000004]], "isOverall": false, "label": "Test_2-Aggregated", "isController": false}, {"data": [[1.0, 397.1000000000001]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.0, 397.1000000000001]], "isOverall": false, "label": "Test_3-Aggregated", "isController": false}, {"data": [[1.0, 2992.88]], "isOverall": false, "label": "Test_4", "isController": false}, {"data": [[1.0, 2992.88]], "isOverall": false, "label": "Test_4-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 49.06666666666667, "minX": 1.71230754E12, "maxY": 119279.76666666666, "series": [{"data": [[1.71230784E12, 55373.933333333334], [1.71230766E12, 46935.0], [1.7123082E12, 14740.266666666666], [1.7123079E12, 59633.46666666667], [1.7123076E12, 46935.0], [1.71230826E12, 16343.266666666666], [1.71230796E12, 119279.76666666666], [1.71230754E12, 53888.333333333336], [1.71230832E12, 9847.0], [1.71230802E12, 23952.933333333334], [1.71230778E12, 59633.46666666667], [1.71230808E12, 14740.266666666666], [1.71230772E12, 49502.433333333334], [1.71230814E12, 15661.533333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71230784E12, 320.6666666666667], [1.71230766E12, 82.35], [1.7123082E12, 49.06666666666667], [1.7123079E12, 345.3333333333333], [1.7123076E12, 82.35], [1.71230826E12, 92.7], [1.71230796E12, 420.6], [1.71230754E12, 94.55], [1.71230832E12, 268.03333333333336], [1.71230802E12, 79.73333333333333], [1.71230778E12, 345.3333333333333], [1.71230808E12, 49.06666666666667], [1.71230772E12, 181.41666666666666], [1.71230814E12, 52.13333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230832E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 397.1000000000001, "minX": 1.71230754E12, "maxY": 3849.0624999999995, "series": [{"data": [[1.71230832E12, 639.6976744186046], [1.71230826E12, 449.2857142857143]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230766E12, 2239.148148148148], [1.7123076E12, 2183.962962962963], [1.71230772E12, 2274.5333333333333], [1.71230754E12, 1545.0322580645163]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230784E12, 2243.6153846153848], [1.71230778E12, 2163.9642857142853], [1.7123079E12, 2195.6428571428573], [1.71230772E12, 2344.636363636364], [1.71230796E12, 2134.142857142857]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230796E12, 397.1000000000001]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230802E12, 2371.4230769230767], [1.7123082E12, 3849.0624999999995], [1.71230808E12, 3602.6250000000005], [1.71230826E12, 3449.375], [1.71230796E12, 408.22222222222223], [1.71230814E12, 3502.3529411764707]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230832E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71230754E12, "maxY": 3845.125, "series": [{"data": [[1.71230832E12, 639.5813953488371], [1.71230826E12, 449.21428571428567]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230766E12, 2224.3703703703704], [1.7123076E12, 2167.4444444444443], [1.71230772E12, 2252.6666666666665], [1.71230754E12, 1518.4838709677422]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230784E12, 0.0], [1.71230778E12, 0.0], [1.7123079E12, 0.0], [1.71230772E12, 0.0], [1.71230796E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230796E12, 393.09000000000003]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230802E12, 2368.0769230769233], [1.7123082E12, 3845.125], [1.71230808E12, 3598.9999999999995], [1.71230826E12, 3447.375], [1.71230796E12, 393.3333333333333], [1.71230814E12, 3500.4117647058824]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230832E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.71230754E12, "maxY": 1.516129032258064, "series": [{"data": [[1.71230832E12, 0.48837209302325574], [1.71230826E12, 0.42857142857142855]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230766E12, 0.8518518518518517], [1.7123076E12, 0.9629629629629629], [1.71230772E12, 0.8666666666666666], [1.71230754E12, 1.516129032258064]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230784E12, 0.0], [1.71230778E12, 0.0], [1.7123079E12, 0.0], [1.71230772E12, 0.0], [1.71230796E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230796E12, 0.5599999999999998]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230802E12, 0.38461538461538464], [1.7123082E12, 0.6875], [1.71230808E12, 0.6875], [1.71230826E12, 0.6875000000000001], [1.71230796E12, 0.6666666666666666], [1.71230814E12, 0.5294117647058824]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230832E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 182.0, "minX": 1.71230754E12, "maxY": 4683.0, "series": [{"data": [[1.71230784E12, 2532.0], [1.71230766E12, 2492.0], [1.7123082E12, 4683.0], [1.7123079E12, 2445.0], [1.7123076E12, 2590.0], [1.71230826E12, 3706.0], [1.71230796E12, 2283.0], [1.71230754E12, 2767.0], [1.71230832E12, 872.0], [1.71230802E12, 3939.0], [1.71230778E12, 2401.0], [1.71230808E12, 4670.0], [1.71230772E12, 2972.0], [1.71230814E12, 3905.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71230784E12, 2459.8], [1.71230766E12, 2461.2], [1.7123082E12, 4650.1], [1.7123079E12, 2383.5], [1.7123076E12, 2532.2], [1.71230826E12, 3686.4], [1.71230796E12, 456.0], [1.71230754E12, 2241.6], [1.71230832E12, 812.6], [1.71230802E12, 3783.6], [1.71230778E12, 2387.6], [1.71230808E12, 4189.1], [1.71230772E12, 2611.9], [1.71230814E12, 3885.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71230784E12, 2532.0], [1.71230766E12, 2492.0], [1.7123082E12, 4683.0], [1.7123079E12, 2445.0], [1.7123076E12, 2590.0], [1.71230826E12, 3706.0], [1.71230796E12, 2265.49], [1.71230754E12, 2767.0], [1.71230832E12, 872.0], [1.71230802E12, 3939.0], [1.71230778E12, 2401.0], [1.71230808E12, 4670.0], [1.71230772E12, 2972.0], [1.71230814E12, 3905.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71230784E12, 2510.65], [1.71230766E12, 2489.6], [1.7123082E12, 4683.0], [1.7123079E12, 2431.5], [1.7123076E12, 2568.7999999999997], [1.71230826E12, 3697.2], [1.71230796E12, 2058.8999999999996], [1.71230754E12, 2535.3999999999996], [1.71230832E12, 819.55], [1.71230802E12, 3924.2999999999997], [1.71230778E12, 2397.4], [1.71230808E12, 4670.0], [1.71230772E12, 2858.9499999999994], [1.71230814E12, 3905.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71230784E12, 1963.0], [1.71230766E12, 1733.0], [1.7123082E12, 3178.0], [1.7123079E12, 1885.0], [1.7123076E12, 1253.0], [1.71230826E12, 182.0], [1.71230796E12, 323.0], [1.71230754E12, 1011.0], [1.71230832E12, 206.0], [1.71230802E12, 292.0], [1.71230778E12, 1970.0], [1.71230808E12, 397.0], [1.71230772E12, 1722.0], [1.71230814E12, 3159.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71230784E12, 2255.0], [1.71230766E12, 2201.0], [1.7123082E12, 3661.5], [1.7123079E12, 2169.0], [1.7123076E12, 2194.0], [1.71230826E12, 3195.0], [1.71230796E12, 394.5], [1.71230754E12, 1253.0], [1.71230832E12, 670.0], [1.71230802E12, 3406.0], [1.71230778E12, 2129.5], [1.71230808E12, 3745.5], [1.71230772E12, 2321.0], [1.71230814E12, 3616.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230832E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 247.0, "minX": 1.0, "maxY": 2230.0, "series": [{"data": [[1.0, 2230.0], [2.0, 449.0], [4.0, 247.0], [3.0, 387.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 246.0, "minX": 1.0, "maxY": 1716.0, "series": [{"data": [[1.0, 1716.0], [2.0, 448.5], [4.0, 246.0], [3.0, 384.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.71230754E12, "maxY": 1.9333333333333333, "series": [{"data": [[1.71230784E12, 0.43333333333333335], [1.71230766E12, 0.45], [1.7123082E12, 0.26666666666666666], [1.7123079E12, 0.4666666666666667], [1.7123076E12, 0.45], [1.71230826E12, 0.5], [1.71230796E12, 1.9333333333333333], [1.71230754E12, 0.5333333333333333], [1.71230832E12, 1.4166666666666667], [1.71230802E12, 0.43333333333333335], [1.71230778E12, 0.4666666666666667], [1.71230808E12, 0.26666666666666666], [1.71230772E12, 0.43333333333333335], [1.71230814E12, 0.2833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230832E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.71230754E12, "maxY": 1.9333333333333333, "series": [{"data": [[1.71230784E12, 0.43333333333333335], [1.71230766E12, 0.45], [1.7123082E12, 0.26666666666666666], [1.7123079E12, 0.4666666666666667], [1.7123076E12, 0.45], [1.71230826E12, 0.5], [1.71230796E12, 1.9333333333333333], [1.71230754E12, 0.5166666666666667], [1.71230832E12, 1.4333333333333333], [1.71230802E12, 0.43333333333333335], [1.71230778E12, 0.4666666666666667], [1.71230808E12, 0.26666666666666666], [1.71230772E12, 0.43333333333333335], [1.71230814E12, 0.2833333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230832E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.11666666666666667, "minX": 1.71230754E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.71230766E12, 0.45], [1.7123076E12, 0.45], [1.71230772E12, 0.25], [1.71230754E12, 0.5166666666666667]], "isOverall": false, "label": "Test_1-success", "isController": false}, {"data": [[1.71230832E12, 1.4333333333333333], [1.71230826E12, 0.23333333333333334]], "isOverall": false, "label": "Test_5-success", "isController": false}, {"data": [[1.71230784E12, 0.43333333333333335], [1.71230778E12, 0.4666666666666667], [1.7123079E12, 0.4666666666666667], [1.71230772E12, 0.18333333333333332], [1.71230796E12, 0.11666666666666667]], "isOverall": false, "label": "Test_2-success", "isController": false}, {"data": [[1.71230802E12, 0.43333333333333335], [1.7123082E12, 0.26666666666666666], [1.71230808E12, 0.26666666666666666], [1.71230826E12, 0.26666666666666666], [1.71230796E12, 0.15], [1.71230814E12, 0.2833333333333333]], "isOverall": false, "label": "Test_4-success", "isController": false}, {"data": [[1.71230796E12, 1.6666666666666667]], "isOverall": false, "label": "Test_3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230832E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.71230754E12, "maxY": 1.9333333333333333, "series": [{"data": [[1.71230784E12, 0.43333333333333335], [1.71230766E12, 0.45], [1.7123082E12, 0.26666666666666666], [1.7123079E12, 0.4666666666666667], [1.7123076E12, 0.45], [1.71230826E12, 0.5], [1.71230796E12, 1.9333333333333333], [1.71230754E12, 0.5166666666666667], [1.71230832E12, 1.4333333333333333], [1.71230802E12, 0.43333333333333335], [1.71230778E12, 0.4666666666666667], [1.71230808E12, 0.26666666666666666], [1.71230772E12, 0.43333333333333335], [1.71230814E12, 0.2833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230832E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

