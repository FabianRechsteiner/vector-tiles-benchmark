/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 98.0, "minX": 0.0, "maxY": 57982.0, "series": [{"data": [[0.0, 98.0], [0.1, 98.0], [0.2, 98.0], [0.3, 98.0], [0.4, 99.0], [0.5, 99.0], [0.6, 99.0], [0.7, 100.0], [0.8, 100.0], [0.9, 100.0], [1.0, 105.0], [1.1, 105.0], [1.2, 105.0], [1.3, 105.0], [1.4, 106.0], [1.5, 106.0], [1.6, 106.0], [1.7, 108.0], [1.8, 108.0], [1.9, 108.0], [2.0, 109.0], [2.1, 109.0], [2.2, 109.0], [2.3, 109.0], [2.4, 110.0], [2.5, 110.0], [2.6, 110.0], [2.7, 111.0], [2.8, 111.0], [2.9, 111.0], [3.0, 111.0], [3.1, 111.0], [3.2, 111.0], [3.3, 111.0], [3.4, 111.0], [3.5, 111.0], [3.6, 111.0], [3.7, 111.0], [3.8, 111.0], [3.9, 111.0], [4.0, 112.0], [4.1, 112.0], [4.2, 112.0], [4.3, 112.0], [4.4, 112.0], [4.5, 112.0], [4.6, 112.0], [4.7, 112.0], [4.8, 112.0], [4.9, 112.0], [5.0, 112.0], [5.1, 112.0], [5.2, 112.0], [5.3, 112.0], [5.4, 113.0], [5.5, 113.0], [5.6, 113.0], [5.7, 113.0], [5.8, 113.0], [5.9, 113.0], [6.0, 113.0], [6.1, 113.0], [6.2, 113.0], [6.3, 113.0], [6.4, 113.0], [6.5, 113.0], [6.6, 113.0], [6.7, 114.0], [6.8, 114.0], [6.9, 114.0], [7.0, 114.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 114.0], [7.8, 114.0], [7.9, 114.0], [8.0, 115.0], [8.1, 115.0], [8.2, 115.0], [8.3, 115.0], [8.4, 115.0], [8.5, 115.0], [8.6, 115.0], [8.7, 115.0], [8.8, 115.0], [8.9, 115.0], [9.0, 116.0], [9.1, 116.0], [9.2, 116.0], [9.3, 116.0], [9.4, 116.0], [9.5, 116.0], [9.6, 116.0], [9.7, 116.0], [9.8, 116.0], [9.9, 116.0], [10.0, 116.0], [10.1, 116.0], [10.2, 116.0], [10.3, 116.0], [10.4, 116.0], [10.5, 116.0], [10.6, 116.0], [10.7, 116.0], [10.8, 116.0], [10.9, 116.0], [11.0, 117.0], [11.1, 117.0], [11.2, 117.0], [11.3, 117.0], [11.4, 117.0], [11.5, 117.0], [11.6, 117.0], [11.7, 117.0], [11.8, 117.0], [11.9, 117.0], [12.0, 117.0], [12.1, 117.0], [12.2, 117.0], [12.3, 117.0], [12.4, 118.0], [12.5, 118.0], [12.6, 118.0], [12.7, 118.0], [12.8, 118.0], [12.9, 118.0], [13.0, 118.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 119.0], [13.5, 119.0], [13.6, 119.0], [13.7, 119.0], [13.8, 119.0], [13.9, 119.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 119.0], [14.4, 120.0], [14.5, 120.0], [14.6, 120.0], [14.7, 121.0], [14.8, 121.0], [14.9, 121.0], [15.0, 121.0], [15.1, 121.0], [15.2, 121.0], [15.3, 121.0], [15.4, 121.0], [15.5, 121.0], [15.6, 121.0], [15.7, 121.0], [15.8, 121.0], [15.9, 121.0], [16.0, 121.0], [16.1, 121.0], [16.2, 121.0], [16.3, 121.0], [16.4, 121.0], [16.5, 121.0], [16.6, 121.0], [16.7, 122.0], [16.8, 122.0], [16.9, 122.0], [17.0, 122.0], [17.1, 122.0], [17.2, 122.0], [17.3, 122.0], [17.4, 122.0], [17.5, 122.0], [17.6, 122.0], [17.7, 122.0], [17.8, 122.0], [17.9, 122.0], [18.0, 122.0], [18.1, 122.0], [18.2, 122.0], [18.3, 122.0], [18.4, 123.0], [18.5, 123.0], [18.6, 123.0], [18.7, 123.0], [18.8, 123.0], [18.9, 123.0], [19.0, 123.0], [19.1, 123.0], [19.2, 123.0], [19.3, 123.0], [19.4, 124.0], [19.5, 124.0], [19.6, 124.0], [19.7, 124.0], [19.8, 124.0], [19.9, 124.0], [20.0, 124.0], [20.1, 124.0], [20.2, 124.0], [20.3, 124.0], [20.4, 125.0], [20.5, 125.0], [20.6, 125.0], [20.7, 125.0], [20.8, 125.0], [20.9, 125.0], [21.0, 125.0], [21.1, 125.0], [21.2, 125.0], [21.3, 125.0], [21.4, 126.0], [21.5, 126.0], [21.6, 126.0], [21.7, 126.0], [21.8, 126.0], [21.9, 126.0], [22.0, 126.0], [22.1, 126.0], [22.2, 126.0], [22.3, 126.0], [22.4, 127.0], [22.5, 127.0], [22.6, 127.0], [22.7, 127.0], [22.8, 127.0], [22.9, 127.0], [23.0, 127.0], [23.1, 127.0], [23.2, 127.0], [23.3, 127.0], [23.4, 127.0], [23.5, 127.0], [23.6, 127.0], [23.7, 128.0], [23.8, 128.0], [23.9, 128.0], [24.0, 129.0], [24.1, 129.0], [24.2, 129.0], [24.3, 129.0], [24.4, 129.0], [24.5, 129.0], [24.6, 129.0], [24.7, 130.0], [24.8, 130.0], [24.9, 130.0], [25.0, 131.0], [25.1, 131.0], [25.2, 131.0], [25.3, 131.0], [25.4, 131.0], [25.5, 131.0], [25.6, 131.0], [25.7, 131.0], [25.8, 131.0], [25.9, 131.0], [26.0, 131.0], [26.1, 131.0], [26.2, 131.0], [26.3, 131.0], [26.4, 131.0], [26.5, 131.0], [26.6, 131.0], [26.7, 132.0], [26.8, 132.0], [26.9, 132.0], [27.0, 132.0], [27.1, 132.0], [27.2, 132.0], [27.3, 132.0], [27.4, 134.0], [27.5, 134.0], [27.6, 134.0], [27.7, 135.0], [27.8, 135.0], [27.9, 135.0], [28.0, 135.0], [28.1, 135.0], [28.2, 135.0], [28.3, 135.0], [28.4, 136.0], [28.5, 136.0], [28.6, 136.0], [28.7, 136.0], [28.8, 136.0], [28.9, 136.0], [29.0, 136.0], [29.1, 138.0], [29.2, 138.0], [29.3, 138.0], [29.4, 141.0], [29.5, 141.0], [29.6, 141.0], [29.7, 141.0], [29.8, 141.0], [29.9, 141.0], [30.0, 141.0], [30.1, 141.0], [30.2, 141.0], [30.3, 141.0], [30.4, 141.0], [30.5, 141.0], [30.6, 141.0], [30.7, 141.0], [30.8, 141.0], [30.9, 141.0], [31.0, 141.0], [31.1, 142.0], [31.2, 142.0], [31.3, 142.0], [31.4, 142.0], [31.5, 142.0], [31.6, 142.0], [31.7, 144.0], [31.8, 144.0], [31.9, 144.0], [32.0, 144.0], [32.1, 144.0], [32.2, 144.0], [32.3, 144.0], [32.4, 145.0], [32.5, 145.0], [32.6, 145.0], [32.7, 145.0], [32.8, 145.0], [32.9, 145.0], [33.0, 146.0], [33.1, 146.0], [33.2, 146.0], [33.3, 146.0], [33.4, 147.0], [33.5, 147.0], [33.6, 147.0], [33.7, 147.0], [33.8, 147.0], [33.9, 147.0], [34.0, 148.0], [34.1, 148.0], [34.2, 148.0], [34.3, 148.0], [34.4, 148.0], [34.5, 148.0], [34.6, 148.0], [34.7, 148.0], [34.8, 148.0], [34.9, 148.0], [35.0, 148.0], [35.1, 148.0], [35.2, 148.0], [35.3, 148.0], [35.4, 149.0], [35.5, 149.0], [35.6, 149.0], [35.7, 149.0], [35.8, 149.0], [35.9, 149.0], [36.0, 149.0], [36.1, 149.0], [36.2, 149.0], [36.3, 149.0], [36.4, 149.0], [36.5, 149.0], [36.6, 149.0], [36.7, 150.0], [36.8, 150.0], [36.9, 150.0], [37.0, 150.0], [37.1, 150.0], [37.2, 150.0], [37.3, 150.0], [37.4, 150.0], [37.5, 150.0], [37.6, 150.0], [37.7, 151.0], [37.8, 151.0], [37.9, 151.0], [38.0, 151.0], [38.1, 151.0], [38.2, 151.0], [38.3, 151.0], [38.4, 151.0], [38.5, 151.0], [38.6, 151.0], [38.7, 151.0], [38.8, 151.0], [38.9, 151.0], [39.0, 151.0], [39.1, 152.0], [39.2, 152.0], [39.3, 152.0], [39.4, 152.0], [39.5, 152.0], [39.6, 152.0], [39.7, 152.0], [39.8, 152.0], [39.9, 152.0], [40.0, 152.0], [40.1, 152.0], [40.2, 152.0], [40.3, 152.0], [40.4, 152.0], [40.5, 152.0], [40.6, 152.0], [40.7, 152.0], [40.8, 152.0], [40.9, 152.0], [41.0, 152.0], [41.1, 153.0], [41.2, 153.0], [41.3, 153.0], [41.4, 153.0], [41.5, 153.0], [41.6, 153.0], [41.7, 153.0], [41.8, 153.0], [41.9, 153.0], [42.0, 153.0], [42.1, 153.0], [42.2, 153.0], [42.3, 153.0], [42.4, 153.0], [42.5, 153.0], [42.6, 153.0], [42.7, 154.0], [42.8, 154.0], [42.9, 154.0], [43.0, 154.0], [43.1, 154.0], [43.2, 154.0], [43.3, 154.0], [43.4, 154.0], [43.5, 154.0], [43.6, 154.0], [43.7, 154.0], [43.8, 154.0], [43.9, 154.0], [44.0, 154.0], [44.1, 155.0], [44.2, 155.0], [44.3, 155.0], [44.4, 155.0], [44.5, 155.0], [44.6, 155.0], [44.7, 155.0], [44.8, 155.0], [44.9, 155.0], [45.0, 155.0], [45.1, 155.0], [45.2, 155.0], [45.3, 155.0], [45.4, 156.0], [45.5, 156.0], [45.6, 156.0], [45.7, 156.0], [45.8, 156.0], [45.9, 156.0], [46.0, 156.0], [46.1, 156.0], [46.2, 156.0], [46.3, 156.0], [46.4, 156.0], [46.5, 156.0], [46.6, 156.0], [46.7, 156.0], [46.8, 156.0], [46.9, 156.0], [47.0, 156.0], [47.1, 156.0], [47.2, 156.0], [47.3, 156.0], [47.4, 156.0], [47.5, 156.0], [47.6, 156.0], [47.7, 156.0], [47.8, 156.0], [47.9, 156.0], [48.0, 156.0], [48.1, 156.0], [48.2, 156.0], [48.3, 156.0], [48.4, 156.0], [48.5, 156.0], [48.6, 156.0], [48.7, 156.0], [48.8, 156.0], [48.9, 156.0], [49.0, 156.0], [49.1, 157.0], [49.2, 157.0], [49.3, 157.0], [49.4, 157.0], [49.5, 157.0], [49.6, 157.0], [49.7, 157.0], [49.8, 157.0], [49.9, 157.0], [50.0, 157.0], [50.1, 157.0], [50.2, 157.0], [50.3, 157.0], [50.4, 157.0], [50.5, 157.0], [50.6, 157.0], [50.7, 158.0], [50.8, 158.0], [50.9, 158.0], [51.0, 158.0], [51.1, 158.0], [51.2, 158.0], [51.3, 158.0], [51.4, 158.0], [51.5, 158.0], [51.6, 158.0], [51.7, 158.0], [51.8, 158.0], [51.9, 158.0], [52.0, 158.0], [52.1, 159.0], [52.2, 159.0], [52.3, 159.0], [52.4, 159.0], [52.5, 159.0], [52.6, 159.0], [52.7, 159.0], [52.8, 159.0], [52.9, 159.0], [53.0, 159.0], [53.1, 159.0], [53.2, 159.0], [53.3, 159.0], [53.4, 159.0], [53.5, 159.0], [53.6, 159.0], [53.7, 159.0], [53.8, 159.0], [53.9, 159.0], [54.0, 159.0], [54.1, 159.0], [54.2, 159.0], [54.3, 159.0], [54.4, 159.0], [54.5, 159.0], [54.6, 159.0], [54.7, 160.0], [54.8, 160.0], [54.9, 160.0], [55.0, 160.0], [55.1, 160.0], [55.2, 160.0], [55.3, 160.0], [55.4, 160.0], [55.5, 160.0], [55.6, 160.0], [55.7, 160.0], [55.8, 160.0], [55.9, 160.0], [56.0, 160.0], [56.1, 161.0], [56.2, 161.0], [56.3, 161.0], [56.4, 161.0], [56.5, 161.0], [56.6, 161.0], [56.7, 161.0], [56.8, 161.0], [56.9, 161.0], [57.0, 161.0], [57.1, 161.0], [57.2, 161.0], [57.3, 161.0], [57.4, 161.0], [57.5, 161.0], [57.6, 161.0], [57.7, 162.0], [57.8, 162.0], [57.9, 162.0], [58.0, 162.0], [58.1, 162.0], [58.2, 162.0], [58.3, 162.0], [58.4, 162.0], [58.5, 162.0], [58.6, 162.0], [58.7, 162.0], [58.8, 162.0], [58.9, 162.0], [59.0, 162.0], [59.1, 163.0], [59.2, 163.0], [59.3, 163.0], [59.4, 163.0], [59.5, 163.0], [59.6, 163.0], [59.7, 163.0], [59.8, 163.0], [59.9, 163.0], [60.0, 163.0], [60.1, 163.0], [60.2, 163.0], [60.3, 163.0], [60.4, 163.0], [60.5, 163.0], [60.6, 163.0], [60.7, 163.0], [60.8, 163.0], [60.9, 163.0], [61.0, 163.0], [61.1, 163.0], [61.2, 163.0], [61.3, 163.0], [61.4, 163.0], [61.5, 163.0], [61.6, 163.0], [61.7, 163.0], [61.8, 163.0], [61.9, 163.0], [62.0, 163.0], [62.1, 164.0], [62.2, 164.0], [62.3, 164.0], [62.4, 164.0], [62.5, 164.0], [62.6, 164.0], [62.7, 164.0], [62.8, 164.0], [62.9, 164.0], [63.0, 164.0], [63.1, 164.0], [63.2, 164.0], [63.3, 164.0], [63.4, 164.0], [63.5, 164.0], [63.6, 164.0], [63.7, 164.0], [63.8, 164.0], [63.9, 164.0], [64.0, 164.0], [64.1, 164.0], [64.2, 164.0], [64.3, 164.0], [64.4, 165.0], [64.5, 165.0], [64.6, 165.0], [64.7, 165.0], [64.8, 165.0], [64.9, 165.0], [65.0, 165.0], [65.1, 165.0], [65.2, 165.0], [65.3, 165.0], [65.4, 166.0], [65.5, 166.0], [65.6, 166.0], [65.7, 166.0], [65.8, 166.0], [65.9, 166.0], [66.0, 166.0], [66.1, 167.0], [66.2, 167.0], [66.3, 167.0], [66.4, 167.0], [66.5, 167.0], [66.6, 167.0], [66.7, 167.0], [66.8, 167.0], [66.9, 167.0], [67.0, 167.0], [67.1, 167.0], [67.2, 167.0], [67.3, 167.0], [67.4, 167.0], [67.5, 167.0], [67.6, 167.0], [67.7, 168.0], [67.8, 168.0], [67.9, 168.0], [68.0, 168.0], [68.1, 168.0], [68.2, 168.0], [68.3, 168.0], [68.4, 168.0], [68.5, 168.0], [68.6, 168.0], [68.7, 168.0], [68.8, 168.0], [68.9, 168.0], [69.0, 168.0], [69.1, 168.0], [69.2, 168.0], [69.3, 168.0], [69.4, 169.0], [69.5, 169.0], [69.6, 169.0], [69.7, 169.0], [69.8, 169.0], [69.9, 169.0], [70.0, 169.0], [70.1, 169.0], [70.2, 169.0], [70.3, 169.0], [70.4, 170.0], [70.5, 170.0], [70.6, 170.0], [70.7, 170.0], [70.8, 170.0], [70.9, 170.0], [71.0, 170.0], [71.1, 171.0], [71.2, 171.0], [71.3, 171.0], [71.4, 172.0], [71.5, 172.0], [71.6, 172.0], [71.7, 172.0], [71.8, 172.0], [71.9, 172.0], [72.0, 172.0], [72.1, 172.0], [72.2, 172.0], [72.3, 172.0], [72.4, 173.0], [72.5, 173.0], [72.6, 173.0], [72.7, 173.0], [72.8, 173.0], [72.9, 173.0], [73.0, 173.0], [73.1, 174.0], [73.2, 174.0], [73.3, 174.0], [73.4, 174.0], [73.5, 174.0], [73.6, 174.0], [73.7, 175.0], [73.8, 175.0], [73.9, 175.0], [74.0, 175.0], [74.1, 175.0], [74.2, 175.0], [74.3, 175.0], [74.4, 175.0], [74.5, 175.0], [74.6, 175.0], [74.7, 175.0], [74.8, 175.0], [74.9, 175.0], [75.0, 175.0], [75.1, 175.0], [75.2, 175.0], [75.3, 175.0], [75.4, 176.0], [75.5, 176.0], [75.6, 176.0], [75.7, 177.0], [75.8, 177.0], [75.9, 177.0], [76.0, 177.0], [76.1, 177.0], [76.2, 177.0], [76.3, 177.0], [76.4, 178.0], [76.5, 178.0], [76.6, 178.0], [76.7, 178.0], [76.8, 178.0], [76.9, 178.0], [77.0, 178.0], [77.1, 179.0], [77.2, 179.0], [77.3, 179.0], [77.4, 179.0], [77.5, 179.0], [77.6, 179.0], [77.7, 180.0], [77.8, 180.0], [77.9, 180.0], [78.0, 180.0], [78.1, 180.0], [78.2, 180.0], [78.3, 180.0], [78.4, 180.0], [78.5, 180.0], [78.6, 180.0], [78.7, 180.0], [78.8, 180.0], [78.9, 180.0], [79.0, 180.0], [79.1, 181.0], [79.2, 181.0], [79.3, 181.0], [79.4, 181.0], [79.5, 181.0], [79.6, 181.0], [79.7, 184.0], [79.8, 184.0], [79.9, 184.0], [80.0, 184.0], [80.1, 186.0], [80.2, 186.0], [80.3, 186.0], [80.4, 187.0], [80.5, 187.0], [80.6, 187.0], [80.7, 188.0], [80.8, 188.0], [80.9, 188.0], [81.0, 188.0], [81.1, 188.0], [81.2, 188.0], [81.3, 188.0], [81.4, 188.0], [81.5, 188.0], [81.6, 188.0], [81.7, 188.0], [81.8, 188.0], [81.9, 188.0], [82.0, 188.0], [82.1, 188.0], [82.2, 188.0], [82.3, 188.0], [82.4, 188.0], [82.5, 188.0], [82.6, 188.0], [82.7, 188.0], [82.8, 188.0], [82.9, 188.0], [83.0, 188.0], [83.1, 189.0], [83.2, 189.0], [83.3, 189.0], [83.4, 189.0], [83.5, 189.0], [83.6, 189.0], [83.7, 189.0], [83.8, 189.0], [83.9, 189.0], [84.0, 189.0], [84.1, 190.0], [84.2, 190.0], [84.3, 190.0], [84.4, 191.0], [84.5, 191.0], [84.6, 191.0], [84.7, 192.0], [84.8, 192.0], [84.9, 192.0], [85.0, 192.0], [85.1, 192.0], [85.2, 192.0], [85.3, 192.0], [85.4, 195.0], [85.5, 195.0], [85.6, 195.0], [85.7, 195.0], [85.8, 195.0], [85.9, 195.0], [86.0, 195.0], [86.1, 196.0], [86.2, 196.0], [86.3, 196.0], [86.4, 198.0], [86.5, 198.0], [86.6, 198.0], [86.7, 198.0], [86.8, 198.0], [86.9, 198.0], [87.0, 198.0], [87.1, 199.0], [87.2, 199.0], [87.3, 199.0], [87.4, 200.0], [87.5, 200.0], [87.6, 200.0], [87.7, 201.0], [87.8, 201.0], [87.9, 201.0], [88.0, 201.0], [88.1, 202.0], [88.2, 202.0], [88.3, 202.0], [88.4, 205.0], [88.5, 205.0], [88.6, 205.0], [88.7, 207.0], [88.8, 207.0], [88.9, 207.0], [89.0, 207.0], [89.1, 207.0], [89.2, 207.0], [89.3, 207.0], [89.4, 208.0], [89.5, 208.0], [89.6, 208.0], [89.7, 208.0], [89.8, 208.0], [89.9, 208.0], [90.0, 208.0], [90.1, 209.0], [90.2, 209.0], [90.3, 209.0], [90.4, 211.0], [90.5, 211.0], [90.6, 211.0], [90.7, 211.0], [90.8, 211.0], [90.9, 211.0], [91.0, 211.0], [91.1, 216.0], [91.2, 216.0], [91.3, 216.0], [91.4, 217.0], [91.5, 217.0], [91.6, 217.0], [91.7, 219.0], [91.8, 219.0], [91.9, 219.0], [92.0, 221.0], [92.1, 221.0], [92.2, 221.0], [92.3, 221.0], [92.4, 226.0], [92.5, 226.0], [92.6, 226.0], [92.7, 228.0], [92.8, 228.0], [92.9, 228.0], [93.0, 228.0], [93.1, 228.0], [93.2, 228.0], [93.3, 228.0], [93.4, 229.0], [93.5, 229.0], [93.6, 229.0], [93.7, 229.0], [93.8, 229.0], [93.9, 229.0], [94.0, 231.0], [94.1, 231.0], [94.2, 231.0], [94.3, 231.0], [94.4, 234.0], [94.5, 234.0], [94.6, 234.0], [94.7, 240.0], [94.8, 240.0], [94.9, 240.0], [95.0, 240.0], [95.1, 240.0], [95.2, 240.0], [95.3, 240.0], [95.4, 244.0], [95.5, 244.0], [95.6, 244.0], [95.7, 244.0], [95.8, 244.0], [95.9, 244.0], [96.0, 248.0], [96.1, 248.0], [96.2, 248.0], [96.3, 248.0], [96.4, 248.0], [96.5, 248.0], [96.6, 248.0], [96.7, 254.0], [96.8, 254.0], [96.9, 254.0], [97.0, 254.0], [97.1, 254.0], [97.2, 254.0], [97.3, 254.0], [97.4, 257.0], [97.5, 257.0], [97.6, 257.0], [97.7, 264.0], [97.8, 264.0], [97.9, 264.0], [98.0, 266.0], [98.1, 266.0], [98.2, 266.0], [98.3, 266.0], [98.4, 281.0], [98.5, 281.0], [98.6, 281.0], [98.7, 283.0], [98.8, 283.0], [98.9, 283.0], [99.0, 292.0], [99.1, 292.0], [99.2, 292.0], [99.3, 292.0], [99.4, 318.0], [99.5, 318.0], [99.6, 318.0], [99.7, 339.0], [99.8, 339.0], [99.9, 339.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[0.0, 293.0], [0.1, 293.0], [0.2, 293.0], [0.3, 293.0], [0.4, 315.0], [0.5, 315.0], [0.6, 315.0], [0.7, 317.0], [0.8, 317.0], [0.9, 317.0], [1.0, 323.0], [1.1, 323.0], [1.2, 323.0], [1.3, 323.0], [1.4, 324.0], [1.5, 324.0], [1.6, 324.0], [1.7, 327.0], [1.8, 327.0], [1.9, 327.0], [2.0, 329.0], [2.1, 329.0], [2.2, 329.0], [2.3, 329.0], [2.4, 337.0], [2.5, 337.0], [2.6, 337.0], [2.7, 339.0], [2.8, 339.0], [2.9, 339.0], [3.0, 339.0], [3.1, 339.0], [3.2, 339.0], [3.3, 339.0], [3.4, 339.0], [3.5, 339.0], [3.6, 339.0], [3.7, 340.0], [3.8, 340.0], [3.9, 340.0], [4.0, 340.0], [4.1, 340.0], [4.2, 340.0], [4.3, 340.0], [4.4, 342.0], [4.5, 342.0], [4.6, 342.0], [4.7, 343.0], [4.8, 343.0], [4.9, 343.0], [5.0, 343.0], [5.1, 343.0], [5.2, 343.0], [5.3, 343.0], [5.4, 344.0], [5.5, 344.0], [5.6, 344.0], [5.7, 345.0], [5.8, 345.0], [5.9, 345.0], [6.0, 346.0], [6.1, 346.0], [6.2, 346.0], [6.3, 346.0], [6.4, 346.0], [6.5, 346.0], [6.6, 346.0], [6.7, 347.0], [6.8, 347.0], [6.9, 347.0], [7.0, 347.0], [7.1, 347.0], [7.2, 347.0], [7.3, 347.0], [7.4, 348.0], [7.5, 348.0], [7.6, 348.0], [7.7, 348.0], [7.8, 348.0], [7.9, 348.0], [8.0, 349.0], [8.1, 349.0], [8.2, 349.0], [8.3, 349.0], [8.4, 349.0], [8.5, 349.0], [8.6, 349.0], [8.7, 350.0], [8.8, 350.0], [8.9, 350.0], [9.0, 350.0], [9.1, 350.0], [9.2, 350.0], [9.3, 350.0], [9.4, 351.0], [9.5, 351.0], [9.6, 351.0], [9.7, 351.0], [9.8, 351.0], [9.9, 351.0], [10.0, 351.0], [10.1, 351.0], [10.2, 351.0], [10.3, 351.0], [10.4, 354.0], [10.5, 354.0], [10.6, 354.0], [10.7, 354.0], [10.8, 354.0], [10.9, 354.0], [11.0, 354.0], [11.1, 354.0], [11.2, 354.0], [11.3, 354.0], [11.4, 355.0], [11.5, 355.0], [11.6, 355.0], [11.7, 355.0], [11.8, 355.0], [11.9, 355.0], [12.0, 356.0], [12.1, 356.0], [12.2, 356.0], [12.3, 356.0], [12.4, 356.0], [12.5, 356.0], [12.6, 356.0], [12.7, 356.0], [12.8, 356.0], [12.9, 356.0], [13.0, 356.0], [13.1, 356.0], [13.2, 356.0], [13.3, 356.0], [13.4, 358.0], [13.5, 358.0], [13.6, 358.0], [13.7, 358.0], [13.8, 358.0], [13.9, 358.0], [14.0, 359.0], [14.1, 359.0], [14.2, 359.0], [14.3, 359.0], [14.4, 359.0], [14.5, 359.0], [14.6, 359.0], [14.7, 359.0], [14.8, 359.0], [14.9, 359.0], [15.0, 359.0], [15.1, 359.0], [15.2, 359.0], [15.3, 359.0], [15.4, 360.0], [15.5, 360.0], [15.6, 360.0], [15.7, 360.0], [15.8, 360.0], [15.9, 360.0], [16.0, 361.0], [16.1, 361.0], [16.2, 361.0], [16.3, 361.0], [16.4, 361.0], [16.5, 361.0], [16.6, 361.0], [16.7, 361.0], [16.8, 361.0], [16.9, 361.0], [17.0, 361.0], [17.1, 361.0], [17.2, 361.0], [17.3, 361.0], [17.4, 361.0], [17.5, 361.0], [17.6, 361.0], [17.7, 361.0], [17.8, 361.0], [17.9, 361.0], [18.0, 362.0], [18.1, 362.0], [18.2, 362.0], [18.3, 362.0], [18.4, 362.0], [18.5, 362.0], [18.6, 362.0], [18.7, 362.0], [18.8, 362.0], [18.9, 362.0], [19.0, 362.0], [19.1, 362.0], [19.2, 362.0], [19.3, 362.0], [19.4, 363.0], [19.5, 363.0], [19.6, 363.0], [19.7, 364.0], [19.8, 364.0], [19.9, 364.0], [20.0, 364.0], [20.1, 364.0], [20.2, 364.0], [20.3, 364.0], [20.4, 364.0], [20.5, 364.0], [20.6, 364.0], [20.7, 367.0], [20.8, 367.0], [20.9, 367.0], [21.0, 367.0], [21.1, 367.0], [21.2, 367.0], [21.3, 367.0], [21.4, 367.0], [21.5, 367.0], [21.6, 367.0], [21.7, 367.0], [21.8, 367.0], [21.9, 367.0], [22.0, 367.0], [22.1, 367.0], [22.2, 367.0], [22.3, 367.0], [22.4, 370.0], [22.5, 370.0], [22.6, 370.0], [22.7, 371.0], [22.8, 371.0], [22.9, 371.0], [23.0, 371.0], [23.1, 371.0], [23.2, 371.0], [23.3, 371.0], [23.4, 371.0], [23.5, 371.0], [23.6, 371.0], [23.7, 372.0], [23.8, 372.0], [23.9, 372.0], [24.0, 373.0], [24.1, 373.0], [24.2, 373.0], [24.3, 373.0], [24.4, 375.0], [24.5, 375.0], [24.6, 375.0], [24.7, 376.0], [24.8, 376.0], [24.9, 376.0], [25.0, 376.0], [25.1, 376.0], [25.2, 376.0], [25.3, 376.0], [25.4, 377.0], [25.5, 377.0], [25.6, 377.0], [25.7, 378.0], [25.8, 378.0], [25.9, 378.0], [26.0, 379.0], [26.1, 379.0], [26.2, 379.0], [26.3, 379.0], [26.4, 379.0], [26.5, 379.0], [26.6, 379.0], [26.7, 380.0], [26.8, 380.0], [26.9, 380.0], [27.0, 383.0], [27.1, 383.0], [27.2, 383.0], [27.3, 383.0], [27.4, 383.0], [27.5, 383.0], [27.6, 383.0], [27.7, 384.0], [27.8, 384.0], [27.9, 384.0], [28.0, 387.0], [28.1, 387.0], [28.2, 387.0], [28.3, 387.0], [28.4, 388.0], [28.5, 388.0], [28.6, 388.0], [28.7, 394.0], [28.8, 394.0], [28.9, 394.0], [29.0, 395.0], [29.1, 395.0], [29.2, 395.0], [29.3, 395.0], [29.4, 395.0], [29.5, 395.0], [29.6, 395.0], [29.7, 397.0], [29.8, 397.0], [29.9, 397.0], [30.0, 399.0], [30.1, 399.0], [30.2, 399.0], [30.3, 399.0], [30.4, 400.0], [30.5, 400.0], [30.6, 400.0], [30.7, 402.0], [30.8, 402.0], [30.9, 402.0], [31.0, 402.0], [31.1, 402.0], [31.2, 402.0], [31.3, 402.0], [31.4, 404.0], [31.5, 404.0], [31.6, 404.0], [31.7, 406.0], [31.8, 406.0], [31.9, 406.0], [32.0, 417.0], [32.1, 417.0], [32.2, 417.0], [32.3, 417.0], [32.4, 421.0], [32.5, 421.0], [32.6, 421.0], [32.7, 428.0], [32.8, 428.0], [32.9, 428.0], [33.0, 637.0], [33.1, 637.0], [33.2, 637.0], [33.3, 637.0], [33.4, 800.0], [33.5, 800.0], [33.6, 800.0], [33.7, 803.0], [33.8, 803.0], [33.9, 803.0], [34.0, 817.0], [34.1, 817.0], [34.2, 817.0], [34.3, 817.0], [34.4, 837.0], [34.5, 837.0], [34.6, 837.0], [34.7, 868.0], [34.8, 868.0], [34.9, 868.0], [35.0, 868.0], [35.1, 869.0], [35.2, 869.0], [35.3, 869.0], [35.4, 872.0], [35.5, 872.0], [35.6, 872.0], [35.7, 894.0], [35.8, 894.0], [35.9, 894.0], [36.0, 894.0], [36.1, 897.0], [36.2, 897.0], [36.3, 897.0], [36.4, 913.0], [36.5, 913.0], [36.6, 913.0], [36.7, 921.0], [36.8, 921.0], [36.9, 921.0], [37.0, 921.0], [37.1, 921.0], [37.2, 921.0], [37.3, 921.0], [37.4, 923.0], [37.5, 923.0], [37.6, 923.0], [37.7, 933.0], [37.8, 933.0], [37.9, 933.0], [38.0, 933.0], [38.1, 939.0], [38.2, 939.0], [38.3, 939.0], [38.4, 943.0], [38.5, 943.0], [38.6, 943.0], [38.7, 943.0], [38.8, 943.0], [38.9, 943.0], [39.0, 943.0], [39.1, 952.0], [39.2, 952.0], [39.3, 952.0], [39.4, 952.0], [39.5, 952.0], [39.6, 952.0], [39.7, 956.0], [39.8, 956.0], [39.9, 956.0], [40.0, 956.0], [40.1, 961.0], [40.2, 961.0], [40.3, 961.0], [40.4, 975.0], [40.5, 975.0], [40.6, 975.0], [40.7, 983.0], [40.8, 983.0], [40.9, 983.0], [41.0, 983.0], [41.1, 988.0], [41.2, 988.0], [41.3, 988.0], [41.4, 992.0], [41.5, 992.0], [41.6, 992.0], [41.7, 995.0], [41.8, 995.0], [41.9, 995.0], [42.0, 995.0], [42.1, 1002.0], [42.2, 1002.0], [42.3, 1002.0], [42.4, 1011.0], [42.5, 1011.0], [42.6, 1011.0], [42.7, 1011.0], [42.8, 1011.0], [42.9, 1011.0], [43.0, 1011.0], [43.1, 1021.0], [43.2, 1021.0], [43.3, 1021.0], [43.4, 1023.0], [43.5, 1023.0], [43.6, 1023.0], [43.7, 1028.0], [43.8, 1028.0], [43.9, 1028.0], [44.0, 1028.0], [44.1, 1029.0], [44.2, 1029.0], [44.3, 1029.0], [44.4, 1058.0], [44.5, 1058.0], [44.6, 1058.0], [44.7, 1065.0], [44.8, 1065.0], [44.9, 1065.0], [45.0, 1065.0], [45.1, 1069.0], [45.2, 1069.0], [45.3, 1069.0], [45.4, 1070.0], [45.5, 1070.0], [45.6, 1070.0], [45.7, 1078.0], [45.8, 1078.0], [45.9, 1078.0], [46.0, 1078.0], [46.1, 1079.0], [46.2, 1079.0], [46.3, 1079.0], [46.4, 1091.0], [46.5, 1091.0], [46.6, 1091.0], [46.7, 1111.0], [46.8, 1111.0], [46.9, 1111.0], [47.0, 1111.0], [47.1, 1115.0], [47.2, 1115.0], [47.3, 1115.0], [47.4, 1118.0], [47.5, 1118.0], [47.6, 1118.0], [47.7, 1120.0], [47.8, 1120.0], [47.9, 1120.0], [48.0, 1120.0], [48.1, 1126.0], [48.2, 1126.0], [48.3, 1126.0], [48.4, 1141.0], [48.5, 1141.0], [48.6, 1141.0], [48.7, 1153.0], [48.8, 1153.0], [48.9, 1153.0], [49.0, 1153.0], [49.1, 1156.0], [49.2, 1156.0], [49.3, 1156.0], [49.4, 1164.0], [49.5, 1164.0], [49.6, 1164.0], [49.7, 1167.0], [49.8, 1167.0], [49.9, 1167.0], [50.0, 1167.0], [50.1, 1171.0], [50.2, 1171.0], [50.3, 1171.0], [50.4, 1182.0], [50.5, 1182.0], [50.6, 1182.0], [50.7, 1191.0], [50.8, 1191.0], [50.9, 1191.0], [51.0, 1191.0], [51.1, 1205.0], [51.2, 1205.0], [51.3, 1205.0], [51.4, 1208.0], [51.5, 1208.0], [51.6, 1208.0], [51.7, 1221.0], [51.8, 1221.0], [51.9, 1221.0], [52.0, 1221.0], [52.1, 1238.0], [52.2, 1238.0], [52.3, 1238.0], [52.4, 1246.0], [52.5, 1246.0], [52.6, 1246.0], [52.7, 1256.0], [52.8, 1256.0], [52.9, 1256.0], [53.0, 1256.0], [53.1, 1258.0], [53.2, 1258.0], [53.3, 1258.0], [53.4, 1273.0], [53.5, 1273.0], [53.6, 1273.0], [53.7, 1300.0], [53.8, 1300.0], [53.9, 1300.0], [54.0, 1300.0], [54.1, 1314.0], [54.2, 1314.0], [54.3, 1314.0], [54.4, 1317.0], [54.5, 1317.0], [54.6, 1317.0], [54.7, 1318.0], [54.8, 1318.0], [54.9, 1318.0], [55.0, 1318.0], [55.1, 1330.0], [55.2, 1330.0], [55.3, 1330.0], [55.4, 1356.0], [55.5, 1356.0], [55.6, 1356.0], [55.7, 1446.0], [55.8, 1446.0], [55.9, 1446.0], [56.0, 1446.0], [56.1, 1447.0], [56.2, 1447.0], [56.3, 1447.0], [56.4, 1454.0], [56.5, 1454.0], [56.6, 1454.0], [56.7, 1477.0], [56.8, 1477.0], [56.9, 1477.0], [57.0, 1477.0], [57.1, 1482.0], [57.2, 1482.0], [57.3, 1482.0], [57.4, 1501.0], [57.5, 1501.0], [57.6, 1501.0], [57.7, 1503.0], [57.8, 1503.0], [57.9, 1503.0], [58.0, 1503.0], [58.1, 1504.0], [58.2, 1504.0], [58.3, 1504.0], [58.4, 1573.0], [58.5, 1573.0], [58.6, 1573.0], [58.7, 1585.0], [58.8, 1585.0], [58.9, 1585.0], [59.0, 1585.0], [59.1, 1603.0], [59.2, 1603.0], [59.3, 1603.0], [59.4, 1605.0], [59.5, 1605.0], [59.6, 1605.0], [59.7, 1621.0], [59.8, 1621.0], [59.9, 1621.0], [60.0, 1621.0], [60.1, 1648.0], [60.2, 1648.0], [60.3, 1648.0], [60.4, 1665.0], [60.5, 1665.0], [60.6, 1665.0], [60.7, 1667.0], [60.8, 1667.0], [60.9, 1667.0], [61.0, 1667.0], [61.1, 1674.0], [61.2, 1674.0], [61.3, 1674.0], [61.4, 1689.0], [61.5, 1689.0], [61.6, 1689.0], [61.7, 1714.0], [61.8, 1714.0], [61.9, 1714.0], [62.0, 1714.0], [62.1, 1717.0], [62.2, 1717.0], [62.3, 1717.0], [62.4, 1719.0], [62.5, 1719.0], [62.6, 1719.0], [62.7, 1720.0], [62.8, 1720.0], [62.9, 1720.0], [63.0, 1720.0], [63.1, 1746.0], [63.2, 1746.0], [63.3, 1746.0], [63.4, 1776.0], [63.5, 1776.0], [63.6, 1776.0], [63.7, 1778.0], [63.8, 1778.0], [63.9, 1778.0], [64.0, 1778.0], [64.1, 1788.0], [64.2, 1788.0], [64.3, 1788.0], [64.4, 1792.0], [64.5, 1792.0], [64.6, 1792.0], [64.7, 1803.0], [64.8, 1803.0], [64.9, 1803.0], [65.0, 1803.0], [65.1, 1849.0], [65.2, 1849.0], [65.3, 1849.0], [65.4, 1908.0], [65.5, 1908.0], [65.6, 1908.0], [65.7, 1909.0], [65.8, 1909.0], [65.9, 1909.0], [66.0, 1909.0], [66.1, 1944.0], [66.2, 1944.0], [66.3, 1944.0], [66.4, 1944.0], [66.5, 1944.0], [66.6, 1944.0], [66.7, 1952.0], [66.8, 1952.0], [66.9, 1952.0], [67.0, 1952.0], [67.1, 1964.0], [67.2, 1964.0], [67.3, 1964.0], [67.4, 1984.0], [67.5, 1984.0], [67.6, 1984.0], [67.7, 2027.0], [67.8, 2027.0], [67.9, 2027.0], [68.0, 2027.0], [68.1, 2071.0], [68.2, 2071.0], [68.3, 2071.0], [68.4, 2079.0], [68.5, 2079.0], [68.6, 2079.0], [68.7, 2099.0], [68.8, 2099.0], [68.9, 2099.0], [69.0, 2099.0], [69.1, 2237.0], [69.2, 2237.0], [69.3, 2237.0], [69.4, 2248.0], [69.5, 2248.0], [69.6, 2248.0], [69.7, 2330.0], [69.8, 2330.0], [69.9, 2330.0], [70.0, 2330.0], [70.1, 2385.0], [70.2, 2385.0], [70.3, 2385.0], [70.4, 2526.0], [70.5, 2526.0], [70.6, 2526.0], [70.7, 2538.0], [70.8, 2538.0], [70.9, 2538.0], [71.0, 2538.0], [71.1, 2544.0], [71.2, 2544.0], [71.3, 2544.0], [71.4, 2544.0], [71.5, 2544.0], [71.6, 2544.0], [71.7, 2896.0], [71.8, 2896.0], [71.9, 2896.0], [72.0, 2896.0], [72.1, 3089.0], [72.2, 3089.0], [72.3, 3089.0], [72.4, 3160.0], [72.5, 3160.0], [72.6, 3160.0], [72.7, 3233.0], [72.8, 3233.0], [72.9, 3233.0], [73.0, 3233.0], [73.1, 3311.0], [73.2, 3311.0], [73.3, 3311.0], [73.4, 3443.0], [73.5, 3443.0], [73.6, 3443.0], [73.7, 3490.0], [73.8, 3490.0], [73.9, 3490.0], [74.0, 3490.0], [74.1, 3576.0], [74.2, 3576.0], [74.3, 3576.0], [74.4, 3587.0], [74.5, 3587.0], [74.6, 3587.0], [74.7, 3788.0], [74.8, 3788.0], [74.9, 3788.0], [75.0, 3788.0], [75.1, 3860.0], [75.2, 3860.0], [75.3, 3860.0], [75.4, 3911.0], [75.5, 3911.0], [75.6, 3911.0], [75.7, 4225.0], [75.8, 4225.0], [75.9, 4225.0], [76.0, 4225.0], [76.1, 4337.0], [76.2, 4337.0], [76.3, 4337.0], [76.4, 4526.0], [76.5, 4526.0], [76.6, 4526.0], [76.7, 4600.0], [76.8, 4600.0], [76.9, 4600.0], [77.0, 4600.0], [77.1, 4708.0], [77.2, 4708.0], [77.3, 4708.0], [77.4, 4882.0], [77.5, 4882.0], [77.6, 4882.0], [77.7, 4924.0], [77.8, 4924.0], [77.9, 4924.0], [78.0, 4924.0], [78.1, 4938.0], [78.2, 4938.0], [78.3, 4938.0], [78.4, 4974.0], [78.5, 4974.0], [78.6, 4974.0], [78.7, 5076.0], [78.8, 5076.0], [78.9, 5076.0], [79.0, 5140.0], [79.1, 5140.0], [79.2, 5140.0], [79.3, 5140.0], [79.4, 5534.0], [79.5, 5534.0], [79.6, 5534.0], [79.7, 5565.0], [79.8, 5565.0], [79.9, 5565.0], [80.0, 5581.0], [80.1, 5581.0], [80.2, 5581.0], [80.3, 5581.0], [80.4, 5759.0], [80.5, 5759.0], [80.6, 5759.0], [80.7, 6100.0], [80.8, 6100.0], [80.9, 6100.0], [81.0, 6183.0], [81.1, 6183.0], [81.2, 6183.0], [81.3, 6183.0], [81.4, 6225.0], [81.5, 6225.0], [81.6, 6225.0], [81.7, 6232.0], [81.8, 6232.0], [81.9, 6232.0], [82.0, 6336.0], [82.1, 6336.0], [82.2, 6336.0], [82.3, 6336.0], [82.4, 6421.0], [82.5, 6421.0], [82.6, 6421.0], [82.7, 6433.0], [82.8, 6433.0], [82.9, 6433.0], [83.0, 6592.0], [83.1, 6592.0], [83.2, 6592.0], [83.3, 6592.0], [83.4, 6806.0], [83.5, 6806.0], [83.6, 6806.0], [83.7, 6965.0], [83.8, 6965.0], [83.9, 6965.0], [84.0, 7065.0], [84.1, 7065.0], [84.2, 7065.0], [84.3, 7065.0], [84.4, 7151.0], [84.5, 7151.0], [84.6, 7151.0], [84.7, 7204.0], [84.8, 7204.0], [84.9, 7204.0], [85.0, 7489.0], [85.1, 7489.0], [85.2, 7489.0], [85.3, 7489.0], [85.4, 7612.0], [85.5, 7612.0], [85.6, 7612.0], [85.7, 7819.0], [85.8, 7819.0], [85.9, 7819.0], [86.0, 7856.0], [86.1, 7856.0], [86.2, 7856.0], [86.3, 7856.0], [86.4, 7910.0], [86.5, 7910.0], [86.6, 7910.0], [86.7, 7919.0], [86.8, 7919.0], [86.9, 7919.0], [87.0, 8189.0], [87.1, 8189.0], [87.2, 8189.0], [87.3, 8189.0], [87.4, 8431.0], [87.5, 8431.0], [87.6, 8431.0], [87.7, 8619.0], [87.8, 8619.0], [87.9, 8619.0], [88.0, 8621.0], [88.1, 8621.0], [88.2, 8621.0], [88.3, 8621.0], [88.4, 8728.0], [88.5, 8728.0], [88.6, 8728.0], [88.7, 8947.0], [88.8, 8947.0], [88.9, 8947.0], [89.0, 8958.0], [89.1, 8958.0], [89.2, 8958.0], [89.3, 8958.0], [89.4, 9034.0], [89.5, 9034.0], [89.6, 9034.0], [89.7, 9383.0], [89.8, 9383.0], [89.9, 9383.0], [90.0, 9386.0], [90.1, 9386.0], [90.2, 9386.0], [90.3, 9386.0], [90.4, 9427.0], [90.5, 9427.0], [90.6, 9427.0], [90.7, 9498.0], [90.8, 9498.0], [90.9, 9498.0], [91.0, 9899.0], [91.1, 9899.0], [91.2, 9899.0], [91.3, 9899.0], [91.4, 9985.0], [91.5, 9985.0], [91.6, 9985.0], [91.7, 10049.0], [91.8, 10049.0], [91.9, 10049.0], [92.0, 10133.0], [92.1, 10133.0], [92.2, 10133.0], [92.3, 10133.0], [92.4, 10217.0], [92.5, 10217.0], [92.6, 10217.0], [92.7, 10350.0], [92.8, 10350.0], [92.9, 10350.0], [93.0, 10397.0], [93.1, 10397.0], [93.2, 10397.0], [93.3, 10397.0], [93.4, 10639.0], [93.5, 10639.0], [93.6, 10639.0], [93.7, 10690.0], [93.8, 10690.0], [93.9, 10690.0], [94.0, 10721.0], [94.1, 10721.0], [94.2, 10721.0], [94.3, 10721.0], [94.4, 10802.0], [94.5, 10802.0], [94.6, 10802.0], [94.7, 10906.0], [94.8, 10906.0], [94.9, 10906.0], [95.0, 11461.0], [95.1, 11461.0], [95.2, 11461.0], [95.3, 11461.0], [95.4, 11474.0], [95.5, 11474.0], [95.6, 11474.0], [95.7, 11486.0], [95.8, 11486.0], [95.9, 11486.0], [96.0, 11561.0], [96.1, 11561.0], [96.2, 11561.0], [96.3, 11561.0], [96.4, 11562.0], [96.5, 11562.0], [96.6, 11562.0], [96.7, 11613.0], [96.8, 11613.0], [96.9, 11613.0], [97.0, 11770.0], [97.1, 11770.0], [97.2, 11770.0], [97.3, 11770.0], [97.4, 12122.0], [97.5, 12122.0], [97.6, 12122.0], [97.7, 12140.0], [97.8, 12140.0], [97.9, 12140.0], [98.0, 12193.0], [98.1, 12193.0], [98.2, 12193.0], [98.3, 12193.0], [98.4, 12212.0], [98.5, 12212.0], [98.6, 12212.0], [98.7, 12247.0], [98.8, 12247.0], [98.9, 12247.0], [99.0, 12340.0], [99.1, 12340.0], [99.2, 12340.0], [99.3, 12340.0], [99.4, 12454.0], [99.5, 12454.0], [99.6, 12454.0], [99.7, 12557.0], [99.8, 12557.0], [99.9, 12557.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[0.0, 459.0], [0.1, 459.0], [0.2, 459.0], [0.3, 459.0], [0.4, 466.0], [0.5, 466.0], [0.6, 466.0], [0.7, 469.0], [0.8, 469.0], [0.9, 469.0], [1.0, 469.0], [1.1, 469.0], [1.2, 469.0], [1.3, 469.0], [1.4, 470.0], [1.5, 470.0], [1.6, 470.0], [1.7, 473.0], [1.8, 473.0], [1.9, 473.0], [2.0, 475.0], [2.1, 475.0], [2.2, 475.0], [2.3, 475.0], [2.4, 478.0], [2.5, 478.0], [2.6, 478.0], [2.7, 479.0], [2.8, 479.0], [2.9, 479.0], [3.0, 480.0], [3.1, 480.0], [3.2, 480.0], [3.3, 480.0], [3.4, 481.0], [3.5, 481.0], [3.6, 481.0], [3.7, 482.0], [3.8, 482.0], [3.9, 482.0], [4.0, 485.0], [4.1, 485.0], [4.2, 485.0], [4.3, 485.0], [4.4, 485.0], [4.5, 485.0], [4.6, 485.0], [4.7, 486.0], [4.8, 486.0], [4.9, 486.0], [5.0, 487.0], [5.1, 487.0], [5.2, 487.0], [5.3, 487.0], [5.4, 488.0], [5.5, 488.0], [5.6, 488.0], [5.7, 489.0], [5.8, 489.0], [5.9, 489.0], [6.0, 490.0], [6.1, 490.0], [6.2, 490.0], [6.3, 490.0], [6.4, 490.0], [6.5, 490.0], [6.6, 490.0], [6.7, 490.0], [6.8, 490.0], [6.9, 490.0], [7.0, 491.0], [7.1, 491.0], [7.2, 491.0], [7.3, 491.0], [7.4, 491.0], [7.5, 491.0], [7.6, 491.0], [7.7, 492.0], [7.8, 492.0], [7.9, 492.0], [8.0, 492.0], [8.1, 492.0], [8.2, 492.0], [8.3, 492.0], [8.4, 494.0], [8.5, 494.0], [8.6, 494.0], [8.7, 498.0], [8.8, 498.0], [8.9, 498.0], [9.0, 498.0], [9.1, 498.0], [9.2, 498.0], [9.3, 498.0], [9.4, 499.0], [9.5, 499.0], [9.6, 499.0], [9.7, 499.0], [9.8, 499.0], [9.9, 499.0], [10.0, 502.0], [10.1, 502.0], [10.2, 502.0], [10.3, 502.0], [10.4, 503.0], [10.5, 503.0], [10.6, 503.0], [10.7, 504.0], [10.8, 504.0], [10.9, 504.0], [11.0, 504.0], [11.1, 504.0], [11.2, 504.0], [11.3, 504.0], [11.4, 505.0], [11.5, 505.0], [11.6, 505.0], [11.7, 506.0], [11.8, 506.0], [11.9, 506.0], [12.0, 507.0], [12.1, 507.0], [12.2, 507.0], [12.3, 507.0], [12.4, 508.0], [12.5, 508.0], [12.6, 508.0], [12.7, 510.0], [12.8, 510.0], [12.9, 510.0], [13.0, 510.0], [13.1, 511.0], [13.2, 511.0], [13.3, 511.0], [13.4, 512.0], [13.5, 512.0], [13.6, 512.0], [13.7, 512.0], [13.8, 512.0], [13.9, 512.0], [14.0, 512.0], [14.1, 512.0], [14.2, 512.0], [14.3, 512.0], [14.4, 513.0], [14.5, 513.0], [14.6, 513.0], [14.7, 513.0], [14.8, 513.0], [14.9, 513.0], [15.0, 513.0], [15.1, 513.0], [15.2, 513.0], [15.3, 513.0], [15.4, 513.0], [15.5, 513.0], [15.6, 513.0], [15.7, 517.0], [15.8, 517.0], [15.9, 517.0], [16.0, 517.0], [16.1, 517.0], [16.2, 517.0], [16.3, 517.0], [16.4, 518.0], [16.5, 518.0], [16.6, 518.0], [16.7, 520.0], [16.8, 520.0], [16.9, 520.0], [17.0, 520.0], [17.1, 520.0], [17.2, 520.0], [17.3, 520.0], [17.4, 521.0], [17.5, 521.0], [17.6, 521.0], [17.7, 522.0], [17.8, 522.0], [17.9, 522.0], [18.0, 522.0], [18.1, 522.0], [18.2, 522.0], [18.3, 522.0], [18.4, 523.0], [18.5, 523.0], [18.6, 523.0], [18.7, 523.0], [18.8, 523.0], [18.9, 523.0], [19.0, 523.0], [19.1, 524.0], [19.2, 524.0], [19.3, 524.0], [19.4, 525.0], [19.5, 525.0], [19.6, 525.0], [19.7, 525.0], [19.8, 525.0], [19.9, 525.0], [20.0, 525.0], [20.1, 525.0], [20.2, 525.0], [20.3, 525.0], [20.4, 525.0], [20.5, 525.0], [20.6, 525.0], [20.7, 527.0], [20.8, 527.0], [20.9, 527.0], [21.0, 528.0], [21.1, 528.0], [21.2, 528.0], [21.3, 528.0], [21.4, 528.0], [21.5, 528.0], [21.6, 528.0], [21.7, 528.0], [21.8, 528.0], [21.9, 528.0], [22.0, 528.0], [22.1, 528.0], [22.2, 528.0], [22.3, 528.0], [22.4, 532.0], [22.5, 532.0], [22.6, 532.0], [22.7, 532.0], [22.8, 532.0], [22.9, 532.0], [23.0, 533.0], [23.1, 533.0], [23.2, 533.0], [23.3, 533.0], [23.4, 536.0], [23.5, 536.0], [23.6, 536.0], [23.7, 536.0], [23.8, 536.0], [23.9, 536.0], [24.0, 541.0], [24.1, 541.0], [24.2, 541.0], [24.3, 541.0], [24.4, 541.0], [24.5, 541.0], [24.6, 541.0], [24.7, 542.0], [24.8, 542.0], [24.9, 542.0], [25.0, 543.0], [25.1, 543.0], [25.2, 543.0], [25.3, 543.0], [25.4, 544.0], [25.5, 544.0], [25.6, 544.0], [25.7, 547.0], [25.8, 547.0], [25.9, 547.0], [26.0, 548.0], [26.1, 548.0], [26.2, 548.0], [26.3, 548.0], [26.4, 548.0], [26.5, 548.0], [26.6, 548.0], [26.7, 549.0], [26.8, 549.0], [26.9, 549.0], [27.0, 549.0], [27.1, 549.0], [27.2, 549.0], [27.3, 549.0], [27.4, 554.0], [27.5, 554.0], [27.6, 554.0], [27.7, 554.0], [27.8, 554.0], [27.9, 554.0], [28.0, 554.0], [28.1, 554.0], [28.2, 554.0], [28.3, 554.0], [28.4, 560.0], [28.5, 560.0], [28.6, 560.0], [28.7, 560.0], [28.8, 560.0], [28.9, 560.0], [29.0, 564.0], [29.1, 564.0], [29.2, 564.0], [29.3, 564.0], [29.4, 564.0], [29.5, 564.0], [29.6, 564.0], [29.7, 566.0], [29.8, 566.0], [29.9, 566.0], [30.0, 570.0], [30.1, 570.0], [30.2, 570.0], [30.3, 570.0], [30.4, 573.0], [30.5, 573.0], [30.6, 573.0], [30.7, 578.0], [30.8, 578.0], [30.9, 578.0], [31.0, 579.0], [31.1, 579.0], [31.2, 579.0], [31.3, 579.0], [31.4, 584.0], [31.5, 584.0], [31.6, 584.0], [31.7, 586.0], [31.8, 586.0], [31.9, 586.0], [32.0, 588.0], [32.1, 588.0], [32.2, 588.0], [32.3, 588.0], [32.4, 595.0], [32.5, 595.0], [32.6, 595.0], [32.7, 605.0], [32.8, 605.0], [32.9, 605.0], [33.0, 610.0], [33.1, 610.0], [33.2, 610.0], [33.3, 610.0], [33.4, 992.0], [33.5, 992.0], [33.6, 992.0], [33.7, 996.0], [33.8, 996.0], [33.9, 996.0], [34.0, 996.0], [34.1, 1079.0], [34.2, 1079.0], [34.3, 1079.0], [34.4, 1257.0], [34.5, 1257.0], [34.6, 1257.0], [34.7, 1445.0], [34.8, 1445.0], [34.9, 1445.0], [35.0, 1445.0], [35.1, 1703.0], [35.2, 1703.0], [35.3, 1703.0], [35.4, 1856.0], [35.5, 1856.0], [35.6, 1856.0], [35.7, 1862.0], [35.8, 1862.0], [35.9, 1862.0], [36.0, 1862.0], [36.1, 1918.0], [36.2, 1918.0], [36.3, 1918.0], [36.4, 2049.0], [36.5, 2049.0], [36.6, 2049.0], [36.7, 2087.0], [36.8, 2087.0], [36.9, 2087.0], [37.0, 2087.0], [37.1, 2164.0], [37.2, 2164.0], [37.3, 2164.0], [37.4, 2216.0], [37.5, 2216.0], [37.6, 2216.0], [37.7, 2273.0], [37.8, 2273.0], [37.9, 2273.0], [38.0, 2273.0], [38.1, 2330.0], [38.2, 2330.0], [38.3, 2330.0], [38.4, 2334.0], [38.5, 2334.0], [38.6, 2334.0], [38.7, 2344.0], [38.8, 2344.0], [38.9, 2344.0], [39.0, 2344.0], [39.1, 2351.0], [39.2, 2351.0], [39.3, 2351.0], [39.4, 2378.0], [39.5, 2378.0], [39.6, 2378.0], [39.7, 2400.0], [39.8, 2400.0], [39.9, 2400.0], [40.0, 2400.0], [40.1, 2403.0], [40.2, 2403.0], [40.3, 2403.0], [40.4, 2463.0], [40.5, 2463.0], [40.6, 2463.0], [40.7, 2469.0], [40.8, 2469.0], [40.9, 2469.0], [41.0, 2469.0], [41.1, 2474.0], [41.2, 2474.0], [41.3, 2474.0], [41.4, 2496.0], [41.5, 2496.0], [41.6, 2496.0], [41.7, 2499.0], [41.8, 2499.0], [41.9, 2499.0], [42.0, 2499.0], [42.1, 2507.0], [42.2, 2507.0], [42.3, 2507.0], [42.4, 2511.0], [42.5, 2511.0], [42.6, 2511.0], [42.7, 2516.0], [42.8, 2516.0], [42.9, 2516.0], [43.0, 2516.0], [43.1, 2527.0], [43.2, 2527.0], [43.3, 2527.0], [43.4, 2540.0], [43.5, 2540.0], [43.6, 2540.0], [43.7, 2552.0], [43.8, 2552.0], [43.9, 2552.0], [44.0, 2552.0], [44.1, 2576.0], [44.2, 2576.0], [44.3, 2576.0], [44.4, 2577.0], [44.5, 2577.0], [44.6, 2577.0], [44.7, 2587.0], [44.8, 2587.0], [44.9, 2587.0], [45.0, 2587.0], [45.1, 2605.0], [45.2, 2605.0], [45.3, 2605.0], [45.4, 2611.0], [45.5, 2611.0], [45.6, 2611.0], [45.7, 2616.0], [45.8, 2616.0], [45.9, 2616.0], [46.0, 2616.0], [46.1, 2620.0], [46.2, 2620.0], [46.3, 2620.0], [46.4, 2620.0], [46.5, 2620.0], [46.6, 2620.0], [46.7, 2629.0], [46.8, 2629.0], [46.9, 2629.0], [47.0, 2629.0], [47.1, 2630.0], [47.2, 2630.0], [47.3, 2630.0], [47.4, 2635.0], [47.5, 2635.0], [47.6, 2635.0], [47.7, 2649.0], [47.8, 2649.0], [47.9, 2649.0], [48.0, 2649.0], [48.1, 2672.0], [48.2, 2672.0], [48.3, 2672.0], [48.4, 2695.0], [48.5, 2695.0], [48.6, 2695.0], [48.7, 2697.0], [48.8, 2697.0], [48.9, 2697.0], [49.0, 2697.0], [49.1, 2700.0], [49.2, 2700.0], [49.3, 2700.0], [49.4, 2706.0], [49.5, 2706.0], [49.6, 2706.0], [49.7, 2708.0], [49.8, 2708.0], [49.9, 2708.0], [50.0, 2708.0], [50.1, 2709.0], [50.2, 2709.0], [50.3, 2709.0], [50.4, 2717.0], [50.5, 2717.0], [50.6, 2717.0], [50.7, 2717.0], [50.8, 2717.0], [50.9, 2717.0], [51.0, 2717.0], [51.1, 2718.0], [51.2, 2718.0], [51.3, 2718.0], [51.4, 2722.0], [51.5, 2722.0], [51.6, 2722.0], [51.7, 2725.0], [51.8, 2725.0], [51.9, 2725.0], [52.0, 2725.0], [52.1, 2737.0], [52.2, 2737.0], [52.3, 2737.0], [52.4, 2746.0], [52.5, 2746.0], [52.6, 2746.0], [52.7, 2756.0], [52.8, 2756.0], [52.9, 2756.0], [53.0, 2756.0], [53.1, 2787.0], [53.2, 2787.0], [53.3, 2787.0], [53.4, 2788.0], [53.5, 2788.0], [53.6, 2788.0], [53.7, 2798.0], [53.8, 2798.0], [53.9, 2798.0], [54.0, 2798.0], [54.1, 2816.0], [54.2, 2816.0], [54.3, 2816.0], [54.4, 2824.0], [54.5, 2824.0], [54.6, 2824.0], [54.7, 2829.0], [54.8, 2829.0], [54.9, 2829.0], [55.0, 2829.0], [55.1, 2830.0], [55.2, 2830.0], [55.3, 2830.0], [55.4, 2833.0], [55.5, 2833.0], [55.6, 2833.0], [55.7, 2835.0], [55.8, 2835.0], [55.9, 2835.0], [56.0, 2835.0], [56.1, 2838.0], [56.2, 2838.0], [56.3, 2838.0], [56.4, 2844.0], [56.5, 2844.0], [56.6, 2844.0], [56.7, 2847.0], [56.8, 2847.0], [56.9, 2847.0], [57.0, 2847.0], [57.1, 2851.0], [57.2, 2851.0], [57.3, 2851.0], [57.4, 2882.0], [57.5, 2882.0], [57.6, 2882.0], [57.7, 2884.0], [57.8, 2884.0], [57.9, 2884.0], [58.0, 2884.0], [58.1, 2885.0], [58.2, 2885.0], [58.3, 2885.0], [58.4, 2887.0], [58.5, 2887.0], [58.6, 2887.0], [58.7, 2888.0], [58.8, 2888.0], [58.9, 2888.0], [59.0, 2888.0], [59.1, 2899.0], [59.2, 2899.0], [59.3, 2899.0], [59.4, 2908.0], [59.5, 2908.0], [59.6, 2908.0], [59.7, 2915.0], [59.8, 2915.0], [59.9, 2915.0], [60.0, 2915.0], [60.1, 2922.0], [60.2, 2922.0], [60.3, 2922.0], [60.4, 2945.0], [60.5, 2945.0], [60.6, 2945.0], [60.7, 2945.0], [60.8, 2945.0], [60.9, 2945.0], [61.0, 2945.0], [61.1, 2952.0], [61.2, 2952.0], [61.3, 2952.0], [61.4, 2974.0], [61.5, 2974.0], [61.6, 2974.0], [61.7, 2979.0], [61.8, 2979.0], [61.9, 2979.0], [62.0, 2979.0], [62.1, 2987.0], [62.2, 2987.0], [62.3, 2987.0], [62.4, 2994.0], [62.5, 2994.0], [62.6, 2994.0], [62.7, 3003.0], [62.8, 3003.0], [62.9, 3003.0], [63.0, 3003.0], [63.1, 3005.0], [63.2, 3005.0], [63.3, 3005.0], [63.4, 3021.0], [63.5, 3021.0], [63.6, 3021.0], [63.7, 3034.0], [63.8, 3034.0], [63.9, 3034.0], [64.0, 3034.0], [64.1, 3046.0], [64.2, 3046.0], [64.3, 3046.0], [64.4, 3052.0], [64.5, 3052.0], [64.6, 3052.0], [64.7, 3125.0], [64.8, 3125.0], [64.9, 3125.0], [65.0, 3125.0], [65.1, 3178.0], [65.2, 3178.0], [65.3, 3178.0], [65.4, 3192.0], [65.5, 3192.0], [65.6, 3192.0], [65.7, 3215.0], [65.8, 3215.0], [65.9, 3215.0], [66.0, 3215.0], [66.1, 3227.0], [66.2, 3227.0], [66.3, 3227.0], [66.4, 3251.0], [66.5, 3251.0], [66.6, 3251.0], [66.7, 41227.0], [66.8, 41227.0], [66.9, 41227.0], [67.0, 41227.0], [67.1, 41440.0], [67.2, 41440.0], [67.3, 41440.0], [67.4, 41492.0], [67.5, 41492.0], [67.6, 41492.0], [67.7, 41886.0], [67.8, 41886.0], [67.9, 41886.0], [68.0, 41886.0], [68.1, 41976.0], [68.2, 41976.0], [68.3, 41976.0], [68.4, 41991.0], [68.5, 41991.0], [68.6, 41991.0], [68.7, 42182.0], [68.8, 42182.0], [68.9, 42182.0], [69.0, 42182.0], [69.1, 42536.0], [69.2, 42536.0], [69.3, 42536.0], [69.4, 42616.0], [69.5, 42616.0], [69.6, 42616.0], [69.7, 42786.0], [69.8, 42786.0], [69.9, 42786.0], [70.0, 42786.0], [70.1, 43058.0], [70.2, 43058.0], [70.3, 43058.0], [70.4, 43301.0], [70.5, 43301.0], [70.6, 43301.0], [70.7, 43637.0], [70.8, 43637.0], [70.9, 43637.0], [71.0, 43637.0], [71.1, 43654.0], [71.2, 43654.0], [71.3, 43654.0], [71.4, 43664.0], [71.5, 43664.0], [71.6, 43664.0], [71.7, 43803.0], [71.8, 43803.0], [71.9, 43803.0], [72.0, 43803.0], [72.1, 43878.0], [72.2, 43878.0], [72.3, 43878.0], [72.4, 44245.0], [72.5, 44245.0], [72.6, 44245.0], [72.7, 44321.0], [72.8, 44321.0], [72.9, 44321.0], [73.0, 44321.0], [73.1, 44680.0], [73.2, 44680.0], [73.3, 44680.0], [73.4, 44760.0], [73.5, 44760.0], [73.6, 44760.0], [73.7, 45019.0], [73.8, 45019.0], [73.9, 45019.0], [74.0, 45019.0], [74.1, 45200.0], [74.2, 45200.0], [74.3, 45200.0], [74.4, 45605.0], [74.5, 45605.0], [74.6, 45605.0], [74.7, 45764.0], [74.8, 45764.0], [74.9, 45764.0], [75.0, 45764.0], [75.1, 45930.0], [75.2, 45930.0], [75.3, 45930.0], [75.4, 45949.0], [75.5, 45949.0], [75.6, 45949.0], [75.7, 46318.0], [75.8, 46318.0], [75.9, 46318.0], [76.0, 46318.0], [76.1, 46558.0], [76.2, 46558.0], [76.3, 46558.0], [76.4, 46665.0], [76.5, 46665.0], [76.6, 46665.0], [76.7, 46982.0], [76.8, 46982.0], [76.9, 46982.0], [77.0, 46982.0], [77.1, 47068.0], [77.2, 47068.0], [77.3, 47068.0], [77.4, 47158.0], [77.5, 47158.0], [77.6, 47158.0], [77.7, 47511.0], [77.8, 47511.0], [77.9, 47511.0], [78.0, 47710.0], [78.1, 47710.0], [78.2, 47710.0], [78.3, 47710.0], [78.4, 48054.0], [78.5, 48054.0], [78.6, 48054.0], [78.7, 48149.0], [78.8, 48149.0], [78.9, 48149.0], [79.0, 48313.0], [79.1, 48313.0], [79.2, 48313.0], [79.3, 48313.0], [79.4, 48419.0], [79.5, 48419.0], [79.6, 48419.0], [79.7, 48668.0], [79.8, 48668.0], [79.9, 48668.0], [80.0, 48749.0], [80.1, 48749.0], [80.2, 48749.0], [80.3, 48749.0], [80.4, 48892.0], [80.5, 48892.0], [80.6, 48892.0], [80.7, 48982.0], [80.8, 48982.0], [80.9, 48982.0], [81.0, 49098.0], [81.1, 49098.0], [81.2, 49098.0], [81.3, 49098.0], [81.4, 49476.0], [81.5, 49476.0], [81.6, 49476.0], [81.7, 49590.0], [81.8, 49590.0], [81.9, 49590.0], [82.0, 49662.0], [82.1, 49662.0], [82.2, 49662.0], [82.3, 49662.0], [82.4, 49907.0], [82.5, 49907.0], [82.6, 49907.0], [82.7, 50301.0], [82.8, 50301.0], [82.9, 50301.0], [83.0, 50304.0], [83.1, 50304.0], [83.2, 50304.0], [83.3, 50304.0], [83.4, 50470.0], [83.5, 50470.0], [83.6, 50470.0], [83.7, 50608.0], [83.8, 50608.0], [83.9, 50608.0], [84.0, 50644.0], [84.1, 50644.0], [84.2, 50644.0], [84.3, 50644.0], [84.4, 50827.0], [84.5, 50827.0], [84.6, 50827.0], [84.7, 50972.0], [84.8, 50972.0], [84.9, 50972.0], [85.0, 51167.0], [85.1, 51167.0], [85.2, 51167.0], [85.3, 51167.0], [85.4, 51290.0], [85.5, 51290.0], [85.6, 51290.0], [85.7, 51486.0], [85.8, 51486.0], [85.9, 51486.0], [86.0, 51526.0], [86.1, 51526.0], [86.2, 51526.0], [86.3, 51526.0], [86.4, 51735.0], [86.5, 51735.0], [86.6, 51735.0], [86.7, 52008.0], [86.8, 52008.0], [86.9, 52008.0], [87.0, 52027.0], [87.1, 52027.0], [87.2, 52027.0], [87.3, 52027.0], [87.4, 52203.0], [87.5, 52203.0], [87.6, 52203.0], [87.7, 52330.0], [87.8, 52330.0], [87.9, 52330.0], [88.0, 52382.0], [88.1, 52382.0], [88.2, 52382.0], [88.3, 52382.0], [88.4, 52742.0], [88.5, 52742.0], [88.6, 52742.0], [88.7, 52782.0], [88.8, 52782.0], [88.9, 52782.0], [89.0, 52783.0], [89.1, 52783.0], [89.2, 52783.0], [89.3, 52783.0], [89.4, 53084.0], [89.5, 53084.0], [89.6, 53084.0], [89.7, 53179.0], [89.8, 53179.0], [89.9, 53179.0], [90.0, 53449.0], [90.1, 53449.0], [90.2, 53449.0], [90.3, 53449.0], [90.4, 53549.0], [90.5, 53549.0], [90.6, 53549.0], [90.7, 53598.0], [90.8, 53598.0], [90.9, 53598.0], [91.0, 53773.0], [91.1, 53773.0], [91.2, 53773.0], [91.3, 53773.0], [91.4, 53927.0], [91.5, 53927.0], [91.6, 53927.0], [91.7, 53938.0], [91.8, 53938.0], [91.9, 53938.0], [92.0, 54176.0], [92.1, 54176.0], [92.2, 54176.0], [92.3, 54176.0], [92.4, 54468.0], [92.5, 54468.0], [92.6, 54468.0], [92.7, 54473.0], [92.8, 54473.0], [92.9, 54473.0], [93.0, 54738.0], [93.1, 54738.0], [93.2, 54738.0], [93.3, 54738.0], [93.4, 54741.0], [93.5, 54741.0], [93.6, 54741.0], [93.7, 55133.0], [93.8, 55133.0], [93.9, 55133.0], [94.0, 55436.0], [94.1, 55436.0], [94.2, 55436.0], [94.3, 55436.0], [94.4, 55548.0], [94.5, 55548.0], [94.6, 55548.0], [94.7, 55567.0], [94.8, 55567.0], [94.9, 55567.0], [95.0, 55583.0], [95.1, 55583.0], [95.2, 55583.0], [95.3, 55583.0], [95.4, 55850.0], [95.5, 55850.0], [95.6, 55850.0], [95.7, 56252.0], [95.8, 56252.0], [95.9, 56252.0], [96.0, 56286.0], [96.1, 56286.0], [96.2, 56286.0], [96.3, 56286.0], [96.4, 56312.0], [96.5, 56312.0], [96.6, 56312.0], [96.7, 56768.0], [96.8, 56768.0], [96.9, 56768.0], [97.0, 57088.0], [97.1, 57088.0], [97.2, 57088.0], [97.3, 57088.0], [97.4, 57103.0], [97.5, 57103.0], [97.6, 57103.0], [97.7, 57137.0], [97.8, 57137.0], [97.9, 57137.0], [98.0, 57393.0], [98.1, 57393.0], [98.2, 57393.0], [98.3, 57393.0], [98.4, 57410.0], [98.5, 57410.0], [98.6, 57410.0], [98.7, 57741.0], [98.8, 57741.0], [98.9, 57741.0], [99.0, 57964.0], [99.1, 57964.0], [99.2, 57964.0], [99.3, 57964.0], [99.4, 57976.0], [99.5, 57976.0], [99.6, 57976.0], [99.7, 57982.0], [99.8, 57982.0], [99.9, 57982.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[0.0, 322.0], [0.1, 322.0], [0.2, 322.0], [0.3, 322.0], [0.4, 322.0], [0.5, 322.0], [0.6, 322.0], [0.7, 322.0], [0.8, 322.0], [0.9, 322.0], [1.0, 324.0], [1.1, 324.0], [1.2, 324.0], [1.3, 324.0], [1.4, 327.0], [1.5, 327.0], [1.6, 327.0], [1.7, 328.0], [1.8, 328.0], [1.9, 328.0], [2.0, 329.0], [2.1, 329.0], [2.2, 329.0], [2.3, 329.0], [2.4, 332.0], [2.5, 332.0], [2.6, 332.0], [2.7, 332.0], [2.8, 332.0], [2.9, 332.0], [3.0, 332.0], [3.1, 332.0], [3.2, 332.0], [3.3, 332.0], [3.4, 333.0], [3.5, 333.0], [3.6, 333.0], [3.7, 333.0], [3.8, 333.0], [3.9, 333.0], [4.0, 333.0], [4.1, 333.0], [4.2, 333.0], [4.3, 333.0], [4.4, 334.0], [4.5, 334.0], [4.6, 334.0], [4.7, 334.0], [4.8, 334.0], [4.9, 334.0], [5.0, 334.0], [5.1, 334.0], [5.2, 334.0], [5.3, 334.0], [5.4, 334.0], [5.5, 334.0], [5.6, 334.0], [5.7, 335.0], [5.8, 335.0], [5.9, 335.0], [6.0, 335.0], [6.1, 335.0], [6.2, 335.0], [6.3, 335.0], [6.4, 335.0], [6.5, 335.0], [6.6, 335.0], [6.7, 335.0], [6.8, 335.0], [6.9, 335.0], [7.0, 335.0], [7.1, 335.0], [7.2, 335.0], [7.3, 335.0], [7.4, 336.0], [7.5, 336.0], [7.6, 336.0], [7.7, 336.0], [7.8, 336.0], [7.9, 336.0], [8.0, 336.0], [8.1, 336.0], [8.2, 336.0], [8.3, 336.0], [8.4, 336.0], [8.5, 336.0], [8.6, 336.0], [8.7, 337.0], [8.8, 337.0], [8.9, 337.0], [9.0, 337.0], [9.1, 337.0], [9.2, 337.0], [9.3, 337.0], [9.4, 337.0], [9.5, 337.0], [9.6, 337.0], [9.7, 337.0], [9.8, 337.0], [9.9, 337.0], [10.0, 337.0], [10.1, 337.0], [10.2, 337.0], [10.3, 337.0], [10.4, 338.0], [10.5, 338.0], [10.6, 338.0], [10.7, 338.0], [10.8, 338.0], [10.9, 338.0], [11.0, 339.0], [11.1, 339.0], [11.2, 339.0], [11.3, 339.0], [11.4, 339.0], [11.5, 339.0], [11.6, 339.0], [11.7, 340.0], [11.8, 340.0], [11.9, 340.0], [12.0, 340.0], [12.1, 340.0], [12.2, 340.0], [12.3, 340.0], [12.4, 340.0], [12.5, 340.0], [12.6, 340.0], [12.7, 340.0], [12.8, 340.0], [12.9, 340.0], [13.0, 340.0], [13.1, 340.0], [13.2, 340.0], [13.3, 340.0], [13.4, 340.0], [13.5, 340.0], [13.6, 340.0], [13.7, 340.0], [13.8, 340.0], [13.9, 340.0], [14.0, 341.0], [14.1, 341.0], [14.2, 341.0], [14.3, 341.0], [14.4, 341.0], [14.5, 341.0], [14.6, 341.0], [14.7, 341.0], [14.8, 341.0], [14.9, 341.0], [15.0, 341.0], [15.1, 341.0], [15.2, 341.0], [15.3, 341.0], [15.4, 342.0], [15.5, 342.0], [15.6, 342.0], [15.7, 342.0], [15.8, 342.0], [15.9, 342.0], [16.0, 343.0], [16.1, 343.0], [16.2, 343.0], [16.3, 343.0], [16.4, 343.0], [16.5, 343.0], [16.6, 343.0], [16.7, 343.0], [16.8, 343.0], [16.9, 343.0], [17.0, 344.0], [17.1, 344.0], [17.2, 344.0], [17.3, 344.0], [17.4, 344.0], [17.5, 344.0], [17.6, 344.0], [17.7, 345.0], [17.8, 345.0], [17.9, 345.0], [18.0, 346.0], [18.1, 346.0], [18.2, 346.0], [18.3, 346.0], [18.4, 347.0], [18.5, 347.0], [18.6, 347.0], [18.7, 347.0], [18.8, 347.0], [18.9, 347.0], [19.0, 349.0], [19.1, 349.0], [19.2, 349.0], [19.3, 349.0], [19.4, 349.0], [19.5, 349.0], [19.6, 349.0], [19.7, 352.0], [19.8, 352.0], [19.9, 352.0], [20.0, 355.0], [20.1, 355.0], [20.2, 355.0], [20.3, 355.0], [20.4, 356.0], [20.5, 356.0], [20.6, 356.0], [20.7, 357.0], [20.8, 357.0], [20.9, 357.0], [21.0, 363.0], [21.1, 363.0], [21.2, 363.0], [21.3, 363.0], [21.4, 363.0], [21.5, 363.0], [21.6, 363.0], [21.7, 365.0], [21.8, 365.0], [21.9, 365.0], [22.0, 367.0], [22.1, 367.0], [22.2, 367.0], [22.3, 367.0], [22.4, 367.0], [22.5, 367.0], [22.6, 367.0], [22.7, 368.0], [22.8, 368.0], [22.9, 368.0], [23.0, 368.0], [23.1, 368.0], [23.2, 368.0], [23.3, 368.0], [23.4, 368.0], [23.5, 368.0], [23.6, 368.0], [23.7, 368.0], [23.8, 368.0], [23.9, 368.0], [24.0, 369.0], [24.1, 369.0], [24.2, 369.0], [24.3, 369.0], [24.4, 370.0], [24.5, 370.0], [24.6, 370.0], [24.7, 371.0], [24.8, 371.0], [24.9, 371.0], [25.0, 371.0], [25.1, 371.0], [25.2, 371.0], [25.3, 371.0], [25.4, 371.0], [25.5, 371.0], [25.6, 371.0], [25.7, 372.0], [25.8, 372.0], [25.9, 372.0], [26.0, 373.0], [26.1, 373.0], [26.2, 373.0], [26.3, 373.0], [26.4, 374.0], [26.5, 374.0], [26.6, 374.0], [26.7, 375.0], [26.8, 375.0], [26.9, 375.0], [27.0, 375.0], [27.1, 375.0], [27.2, 375.0], [27.3, 375.0], [27.4, 375.0], [27.5, 375.0], [27.6, 375.0], [27.7, 376.0], [27.8, 376.0], [27.9, 376.0], [28.0, 376.0], [28.1, 376.0], [28.2, 376.0], [28.3, 376.0], [28.4, 376.0], [28.5, 376.0], [28.6, 376.0], [28.7, 376.0], [28.8, 376.0], [28.9, 376.0], [29.0, 377.0], [29.1, 377.0], [29.2, 377.0], [29.3, 377.0], [29.4, 378.0], [29.5, 378.0], [29.6, 378.0], [29.7, 378.0], [29.8, 378.0], [29.9, 378.0], [30.0, 379.0], [30.1, 379.0], [30.2, 379.0], [30.3, 379.0], [30.4, 379.0], [30.5, 379.0], [30.6, 379.0], [30.7, 380.0], [30.8, 380.0], [30.9, 380.0], [31.0, 380.0], [31.1, 380.0], [31.2, 380.0], [31.3, 380.0], [31.4, 380.0], [31.5, 380.0], [31.6, 380.0], [31.7, 381.0], [31.8, 381.0], [31.9, 381.0], [32.0, 383.0], [32.1, 383.0], [32.2, 383.0], [32.3, 383.0], [32.4, 383.0], [32.5, 383.0], [32.6, 383.0], [32.7, 383.0], [32.8, 383.0], [32.9, 383.0], [33.0, 383.0], [33.1, 383.0], [33.2, 383.0], [33.3, 383.0], [33.4, 384.0], [33.5, 384.0], [33.6, 384.0], [33.7, 384.0], [33.8, 384.0], [33.9, 384.0], [34.0, 384.0], [34.1, 384.0], [34.2, 384.0], [34.3, 384.0], [34.4, 384.0], [34.5, 384.0], [34.6, 384.0], [34.7, 384.0], [34.8, 384.0], [34.9, 384.0], [35.0, 385.0], [35.1, 385.0], [35.2, 385.0], [35.3, 385.0], [35.4, 385.0], [35.5, 385.0], [35.6, 385.0], [35.7, 385.0], [35.8, 385.0], [35.9, 385.0], [36.0, 385.0], [36.1, 385.0], [36.2, 385.0], [36.3, 385.0], [36.4, 386.0], [36.5, 386.0], [36.6, 386.0], [36.7, 387.0], [36.8, 387.0], [36.9, 387.0], [37.0, 388.0], [37.1, 388.0], [37.2, 388.0], [37.3, 388.0], [37.4, 389.0], [37.5, 389.0], [37.6, 389.0], [37.7, 391.0], [37.8, 391.0], [37.9, 391.0], [38.0, 391.0], [38.1, 391.0], [38.2, 391.0], [38.3, 391.0], [38.4, 391.0], [38.5, 391.0], [38.6, 391.0], [38.7, 393.0], [38.8, 393.0], [38.9, 393.0], [39.0, 393.0], [39.1, 393.0], [39.2, 393.0], [39.3, 393.0], [39.4, 394.0], [39.5, 394.0], [39.6, 394.0], [39.7, 394.0], [39.8, 394.0], [39.9, 394.0], [40.0, 395.0], [40.1, 395.0], [40.2, 395.0], [40.3, 395.0], [40.4, 395.0], [40.5, 395.0], [40.6, 395.0], [40.7, 396.0], [40.8, 396.0], [40.9, 396.0], [41.0, 397.0], [41.1, 397.0], [41.2, 397.0], [41.3, 397.0], [41.4, 397.0], [41.5, 397.0], [41.6, 397.0], [41.7, 400.0], [41.8, 400.0], [41.9, 400.0], [42.0, 400.0], [42.1, 400.0], [42.2, 400.0], [42.3, 400.0], [42.4, 401.0], [42.5, 401.0], [42.6, 401.0], [42.7, 401.0], [42.8, 401.0], [42.9, 401.0], [43.0, 402.0], [43.1, 402.0], [43.2, 402.0], [43.3, 402.0], [43.4, 402.0], [43.5, 402.0], [43.6, 402.0], [43.7, 403.0], [43.8, 403.0], [43.9, 403.0], [44.0, 404.0], [44.1, 404.0], [44.2, 404.0], [44.3, 404.0], [44.4, 404.0], [44.5, 404.0], [44.6, 404.0], [44.7, 407.0], [44.8, 407.0], [44.9, 407.0], [45.0, 408.0], [45.1, 408.0], [45.2, 408.0], [45.3, 408.0], [45.4, 409.0], [45.5, 409.0], [45.6, 409.0], [45.7, 409.0], [45.8, 409.0], [45.9, 409.0], [46.0, 409.0], [46.1, 409.0], [46.2, 409.0], [46.3, 409.0], [46.4, 409.0], [46.5, 409.0], [46.6, 409.0], [46.7, 409.0], [46.8, 409.0], [46.9, 409.0], [47.0, 410.0], [47.1, 410.0], [47.2, 410.0], [47.3, 410.0], [47.4, 411.0], [47.5, 411.0], [47.6, 411.0], [47.7, 412.0], [47.8, 412.0], [47.9, 412.0], [48.0, 413.0], [48.1, 413.0], [48.2, 413.0], [48.3, 413.0], [48.4, 414.0], [48.5, 414.0], [48.6, 414.0], [48.7, 414.0], [48.8, 414.0], [48.9, 414.0], [49.0, 416.0], [49.1, 416.0], [49.2, 416.0], [49.3, 416.0], [49.4, 416.0], [49.5, 416.0], [49.6, 416.0], [49.7, 417.0], [49.8, 417.0], [49.9, 417.0], [50.0, 418.0], [50.1, 418.0], [50.2, 418.0], [50.3, 418.0], [50.4, 418.0], [50.5, 418.0], [50.6, 418.0], [50.7, 420.0], [50.8, 420.0], [50.9, 420.0], [51.0, 420.0], [51.1, 420.0], [51.2, 420.0], [51.3, 420.0], [51.4, 421.0], [51.5, 421.0], [51.6, 421.0], [51.7, 422.0], [51.8, 422.0], [51.9, 422.0], [52.0, 424.0], [52.1, 424.0], [52.2, 424.0], [52.3, 424.0], [52.4, 424.0], [52.5, 424.0], [52.6, 424.0], [52.7, 425.0], [52.8, 425.0], [52.9, 425.0], [53.0, 425.0], [53.1, 425.0], [53.2, 425.0], [53.3, 425.0], [53.4, 427.0], [53.5, 427.0], [53.6, 427.0], [53.7, 428.0], [53.8, 428.0], [53.9, 428.0], [54.0, 429.0], [54.1, 429.0], [54.2, 429.0], [54.3, 429.0], [54.4, 430.0], [54.5, 430.0], [54.6, 430.0], [54.7, 432.0], [54.8, 432.0], [54.9, 432.0], [55.0, 433.0], [55.1, 433.0], [55.2, 433.0], [55.3, 433.0], [55.4, 433.0], [55.5, 433.0], [55.6, 433.0], [55.7, 433.0], [55.8, 433.0], [55.9, 433.0], [56.0, 433.0], [56.1, 433.0], [56.2, 433.0], [56.3, 433.0], [56.4, 434.0], [56.5, 434.0], [56.6, 434.0], [56.7, 434.0], [56.8, 434.0], [56.9, 434.0], [57.0, 437.0], [57.1, 437.0], [57.2, 437.0], [57.3, 437.0], [57.4, 437.0], [57.5, 437.0], [57.6, 437.0], [57.7, 439.0], [57.8, 439.0], [57.9, 439.0], [58.0, 440.0], [58.1, 440.0], [58.2, 440.0], [58.3, 440.0], [58.4, 443.0], [58.5, 443.0], [58.6, 443.0], [58.7, 443.0], [58.8, 443.0], [58.9, 443.0], [59.0, 443.0], [59.1, 443.0], [59.2, 443.0], [59.3, 443.0], [59.4, 444.0], [59.5, 444.0], [59.6, 444.0], [59.7, 445.0], [59.8, 445.0], [59.9, 445.0], [60.0, 445.0], [60.1, 445.0], [60.2, 445.0], [60.3, 445.0], [60.4, 445.0], [60.5, 445.0], [60.6, 445.0], [60.7, 445.0], [60.8, 445.0], [60.9, 445.0], [61.0, 445.0], [61.1, 447.0], [61.2, 447.0], [61.3, 447.0], [61.4, 447.0], [61.5, 447.0], [61.6, 447.0], [61.7, 448.0], [61.8, 448.0], [61.9, 448.0], [62.0, 448.0], [62.1, 449.0], [62.2, 449.0], [62.3, 449.0], [62.4, 450.0], [62.5, 450.0], [62.6, 450.0], [62.7, 451.0], [62.8, 451.0], [62.9, 451.0], [63.0, 451.0], [63.1, 451.0], [63.2, 451.0], [63.3, 451.0], [63.4, 453.0], [63.5, 453.0], [63.6, 453.0], [63.7, 453.0], [63.8, 453.0], [63.9, 453.0], [64.0, 453.0], [64.1, 453.0], [64.2, 453.0], [64.3, 453.0], [64.4, 455.0], [64.5, 455.0], [64.6, 455.0], [64.7, 459.0], [64.8, 459.0], [64.9, 459.0], [65.0, 462.0], [65.1, 462.0], [65.2, 462.0], [65.3, 462.0], [65.4, 465.0], [65.5, 465.0], [65.6, 465.0], [65.7, 465.0], [65.8, 465.0], [65.9, 465.0], [66.0, 466.0], [66.1, 466.0], [66.2, 466.0], [66.3, 466.0], [66.4, 467.0], [66.5, 467.0], [66.6, 467.0], [66.7, 471.0], [66.8, 471.0], [66.9, 471.0], [67.0, 474.0], [67.1, 474.0], [67.2, 474.0], [67.3, 474.0], [67.4, 475.0], [67.5, 475.0], [67.6, 475.0], [67.7, 477.0], [67.8, 477.0], [67.9, 477.0], [68.0, 481.0], [68.1, 481.0], [68.2, 481.0], [68.3, 481.0], [68.4, 481.0], [68.5, 481.0], [68.6, 481.0], [68.7, 482.0], [68.8, 482.0], [68.9, 482.0], [69.0, 483.0], [69.1, 483.0], [69.2, 483.0], [69.3, 483.0], [69.4, 484.0], [69.5, 484.0], [69.6, 484.0], [69.7, 484.0], [69.8, 484.0], [69.9, 484.0], [70.0, 489.0], [70.1, 489.0], [70.2, 489.0], [70.3, 489.0], [70.4, 490.0], [70.5, 490.0], [70.6, 490.0], [70.7, 491.0], [70.8, 491.0], [70.9, 491.0], [71.0, 494.0], [71.1, 494.0], [71.2, 494.0], [71.3, 494.0], [71.4, 500.0], [71.5, 500.0], [71.6, 500.0], [71.7, 503.0], [71.8, 503.0], [71.9, 503.0], [72.0, 503.0], [72.1, 503.0], [72.2, 503.0], [72.3, 503.0], [72.4, 518.0], [72.5, 518.0], [72.6, 518.0], [72.7, 519.0], [72.8, 519.0], [72.9, 519.0], [73.0, 520.0], [73.1, 520.0], [73.2, 520.0], [73.3, 520.0], [73.4, 521.0], [73.5, 521.0], [73.6, 521.0], [73.7, 522.0], [73.8, 522.0], [73.9, 522.0], [74.0, 524.0], [74.1, 524.0], [74.2, 524.0], [74.3, 524.0], [74.4, 526.0], [74.5, 526.0], [74.6, 526.0], [74.7, 534.0], [74.8, 534.0], [74.9, 534.0], [75.0, 535.0], [75.1, 535.0], [75.2, 535.0], [75.3, 535.0], [75.4, 536.0], [75.5, 536.0], [75.6, 536.0], [75.7, 539.0], [75.8, 539.0], [75.9, 539.0], [76.0, 547.0], [76.1, 547.0], [76.2, 547.0], [76.3, 547.0], [76.4, 550.0], [76.5, 550.0], [76.6, 550.0], [76.7, 557.0], [76.8, 557.0], [76.9, 557.0], [77.0, 560.0], [77.1, 560.0], [77.2, 560.0], [77.3, 560.0], [77.4, 562.0], [77.5, 562.0], [77.6, 562.0], [77.7, 566.0], [77.8, 566.0], [77.9, 566.0], [78.0, 568.0], [78.1, 568.0], [78.2, 568.0], [78.3, 568.0], [78.4, 570.0], [78.5, 570.0], [78.6, 570.0], [78.7, 576.0], [78.8, 576.0], [78.9, 576.0], [79.0, 577.0], [79.1, 577.0], [79.2, 577.0], [79.3, 577.0], [79.4, 580.0], [79.5, 580.0], [79.6, 580.0], [79.7, 586.0], [79.8, 586.0], [79.9, 586.0], [80.0, 589.0], [80.1, 589.0], [80.2, 589.0], [80.3, 589.0], [80.4, 589.0], [80.5, 589.0], [80.6, 589.0], [80.7, 591.0], [80.8, 591.0], [80.9, 591.0], [81.0, 592.0], [81.1, 592.0], [81.2, 592.0], [81.3, 592.0], [81.4, 600.0], [81.5, 600.0], [81.6, 600.0], [81.7, 606.0], [81.8, 606.0], [81.9, 606.0], [82.0, 606.0], [82.1, 606.0], [82.2, 606.0], [82.3, 606.0], [82.4, 609.0], [82.5, 609.0], [82.6, 609.0], [82.7, 609.0], [82.8, 609.0], [82.9, 609.0], [83.0, 616.0], [83.1, 616.0], [83.2, 616.0], [83.3, 616.0], [83.4, 617.0], [83.5, 617.0], [83.6, 617.0], [83.7, 618.0], [83.8, 618.0], [83.9, 618.0], [84.0, 622.0], [84.1, 622.0], [84.2, 622.0], [84.3, 622.0], [84.4, 626.0], [84.5, 626.0], [84.6, 626.0], [84.7, 629.0], [84.8, 629.0], [84.9, 629.0], [85.0, 631.0], [85.1, 631.0], [85.2, 631.0], [85.3, 631.0], [85.4, 635.0], [85.5, 635.0], [85.6, 635.0], [85.7, 637.0], [85.8, 637.0], [85.9, 637.0], [86.0, 638.0], [86.1, 638.0], [86.2, 638.0], [86.3, 638.0], [86.4, 642.0], [86.5, 642.0], [86.6, 642.0], [86.7, 649.0], [86.8, 649.0], [86.9, 649.0], [87.0, 649.0], [87.1, 649.0], [87.2, 649.0], [87.3, 649.0], [87.4, 661.0], [87.5, 661.0], [87.6, 661.0], [87.7, 665.0], [87.8, 665.0], [87.9, 665.0], [88.0, 668.0], [88.1, 668.0], [88.2, 668.0], [88.3, 668.0], [88.4, 671.0], [88.5, 671.0], [88.6, 671.0], [88.7, 673.0], [88.8, 673.0], [88.9, 673.0], [89.0, 679.0], [89.1, 679.0], [89.2, 679.0], [89.3, 679.0], [89.4, 686.0], [89.5, 686.0], [89.6, 686.0], [89.7, 687.0], [89.8, 687.0], [89.9, 687.0], [90.0, 687.0], [90.1, 687.0], [90.2, 687.0], [90.3, 687.0], [90.4, 689.0], [90.5, 689.0], [90.6, 689.0], [90.7, 691.0], [90.8, 691.0], [90.9, 691.0], [91.0, 702.0], [91.1, 702.0], [91.2, 702.0], [91.3, 702.0], [91.4, 702.0], [91.5, 702.0], [91.6, 702.0], [91.7, 704.0], [91.8, 704.0], [91.9, 704.0], [92.0, 709.0], [92.1, 709.0], [92.2, 709.0], [92.3, 709.0], [92.4, 718.0], [92.5, 718.0], [92.6, 718.0], [92.7, 728.0], [92.8, 728.0], [92.9, 728.0], [93.0, 835.0], [93.1, 835.0], [93.2, 835.0], [93.3, 835.0], [93.4, 840.0], [93.5, 840.0], [93.6, 840.0], [93.7, 852.0], [93.8, 852.0], [93.9, 852.0], [94.0, 864.0], [94.1, 864.0], [94.2, 864.0], [94.3, 864.0], [94.4, 889.0], [94.5, 889.0], [94.6, 889.0], [94.7, 891.0], [94.8, 891.0], [94.9, 891.0], [95.0, 924.0], [95.1, 924.0], [95.2, 924.0], [95.3, 924.0], [95.4, 956.0], [95.5, 956.0], [95.6, 956.0], [95.7, 959.0], [95.8, 959.0], [95.9, 959.0], [96.0, 1010.0], [96.1, 1010.0], [96.2, 1010.0], [96.3, 1010.0], [96.4, 1060.0], [96.5, 1060.0], [96.6, 1060.0], [96.7, 1130.0], [96.8, 1130.0], [96.9, 1130.0], [97.0, 1170.0], [97.1, 1170.0], [97.2, 1170.0], [97.3, 1170.0], [97.4, 1375.0], [97.5, 1375.0], [97.6, 1375.0], [97.7, 1794.0], [97.8, 1794.0], [97.9, 1794.0], [98.0, 1885.0], [98.1, 1885.0], [98.2, 1885.0], [98.3, 1885.0], [98.4, 1934.0], [98.5, 1934.0], [98.6, 1934.0], [98.7, 1936.0], [98.8, 1936.0], [98.9, 1936.0], [99.0, 2212.0], [99.1, 2212.0], [99.2, 2212.0], [99.3, 2212.0], [99.4, 2240.0], [99.5, 2240.0], [99.6, 2240.0], [99.7, 2697.0], [99.8, 2697.0], [99.9, 2697.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[0.0, 166.0], [0.1, 166.0], [0.2, 166.0], [0.3, 166.0], [0.4, 177.0], [0.5, 177.0], [0.6, 177.0], [0.7, 178.0], [0.8, 178.0], [0.9, 178.0], [1.0, 179.0], [1.1, 179.0], [1.2, 179.0], [1.3, 179.0], [1.4, 180.0], [1.5, 180.0], [1.6, 180.0], [1.7, 181.0], [1.8, 181.0], [1.9, 181.0], [2.0, 181.0], [2.1, 181.0], [2.2, 181.0], [2.3, 181.0], [2.4, 182.0], [2.5, 182.0], [2.6, 182.0], [2.7, 182.0], [2.8, 182.0], [2.9, 182.0], [3.0, 183.0], [3.1, 183.0], [3.2, 183.0], [3.3, 183.0], [3.4, 185.0], [3.5, 185.0], [3.6, 185.0], [3.7, 185.0], [3.8, 185.0], [3.9, 185.0], [4.0, 186.0], [4.1, 186.0], [4.2, 186.0], [4.3, 186.0], [4.4, 187.0], [4.5, 187.0], [4.6, 187.0], [4.7, 187.0], [4.8, 187.0], [4.9, 187.0], [5.0, 188.0], [5.1, 188.0], [5.2, 188.0], [5.3, 188.0], [5.4, 189.0], [5.5, 189.0], [5.6, 189.0], [5.7, 190.0], [5.8, 190.0], [5.9, 190.0], [6.0, 190.0], [6.1, 190.0], [6.2, 190.0], [6.3, 190.0], [6.4, 191.0], [6.5, 191.0], [6.6, 191.0], [6.7, 191.0], [6.8, 191.0], [6.9, 191.0], [7.0, 192.0], [7.1, 192.0], [7.2, 192.0], [7.3, 192.0], [7.4, 192.0], [7.5, 192.0], [7.6, 192.0], [7.7, 192.0], [7.8, 192.0], [7.9, 192.0], [8.0, 192.0], [8.1, 192.0], [8.2, 192.0], [8.3, 192.0], [8.4, 193.0], [8.5, 193.0], [8.6, 193.0], [8.7, 193.0], [8.8, 193.0], [8.9, 193.0], [9.0, 194.0], [9.1, 194.0], [9.2, 194.0], [9.3, 194.0], [9.4, 196.0], [9.5, 196.0], [9.6, 196.0], [9.7, 196.0], [9.8, 196.0], [9.9, 196.0], [10.0, 196.0], [10.1, 196.0], [10.2, 196.0], [10.3, 196.0], [10.4, 196.0], [10.5, 196.0], [10.6, 196.0], [10.7, 197.0], [10.8, 197.0], [10.9, 197.0], [11.0, 197.0], [11.1, 197.0], [11.2, 197.0], [11.3, 197.0], [11.4, 197.0], [11.5, 197.0], [11.6, 197.0], [11.7, 198.0], [11.8, 198.0], [11.9, 198.0], [12.0, 198.0], [12.1, 199.0], [12.2, 199.0], [12.3, 199.0], [12.4, 200.0], [12.5, 200.0], [12.6, 200.0], [12.7, 201.0], [12.8, 201.0], [12.9, 201.0], [13.0, 201.0], [13.1, 201.0], [13.2, 201.0], [13.3, 201.0], [13.4, 202.0], [13.5, 202.0], [13.6, 202.0], [13.7, 202.0], [13.8, 202.0], [13.9, 202.0], [14.0, 202.0], [14.1, 202.0], [14.2, 202.0], [14.3, 202.0], [14.4, 202.0], [14.5, 202.0], [14.6, 202.0], [14.7, 203.0], [14.8, 203.0], [14.9, 203.0], [15.0, 203.0], [15.1, 203.0], [15.2, 203.0], [15.3, 203.0], [15.4, 206.0], [15.5, 206.0], [15.6, 206.0], [15.7, 206.0], [15.8, 206.0], [15.9, 206.0], [16.0, 206.0], [16.1, 206.0], [16.2, 206.0], [16.3, 206.0], [16.4, 207.0], [16.5, 207.0], [16.6, 207.0], [16.7, 207.0], [16.8, 207.0], [16.9, 207.0], [17.0, 207.0], [17.1, 207.0], [17.2, 207.0], [17.3, 207.0], [17.4, 209.0], [17.5, 209.0], [17.6, 209.0], [17.7, 210.0], [17.8, 210.0], [17.9, 210.0], [18.0, 210.0], [18.1, 210.0], [18.2, 210.0], [18.3, 210.0], [18.4, 210.0], [18.5, 210.0], [18.6, 210.0], [18.7, 211.0], [18.8, 211.0], [18.9, 211.0], [19.0, 212.0], [19.1, 212.0], [19.2, 212.0], [19.3, 212.0], [19.4, 212.0], [19.5, 212.0], [19.6, 212.0], [19.7, 212.0], [19.8, 212.0], [19.9, 212.0], [20.0, 212.0], [20.1, 212.0], [20.2, 212.0], [20.3, 212.0], [20.4, 212.0], [20.5, 212.0], [20.6, 212.0], [20.7, 213.0], [20.8, 213.0], [20.9, 213.0], [21.0, 213.0], [21.1, 213.0], [21.2, 213.0], [21.3, 213.0], [21.4, 213.0], [21.5, 213.0], [21.6, 213.0], [21.7, 213.0], [21.8, 213.0], [21.9, 213.0], [22.0, 214.0], [22.1, 214.0], [22.2, 214.0], [22.3, 214.0], [22.4, 215.0], [22.5, 215.0], [22.6, 215.0], [22.7, 215.0], [22.8, 215.0], [22.9, 215.0], [23.0, 215.0], [23.1, 215.0], [23.2, 215.0], [23.3, 215.0], [23.4, 218.0], [23.5, 218.0], [23.6, 218.0], [23.7, 218.0], [23.8, 218.0], [23.9, 218.0], [24.0, 219.0], [24.1, 219.0], [24.2, 219.0], [24.3, 219.0], [24.4, 220.0], [24.5, 220.0], [24.6, 220.0], [24.7, 220.0], [24.8, 220.0], [24.9, 220.0], [25.0, 220.0], [25.1, 220.0], [25.2, 220.0], [25.3, 220.0], [25.4, 220.0], [25.5, 220.0], [25.6, 220.0], [25.7, 221.0], [25.8, 221.0], [25.9, 221.0], [26.0, 221.0], [26.1, 221.0], [26.2, 221.0], [26.3, 221.0], [26.4, 222.0], [26.5, 222.0], [26.6, 222.0], [26.7, 222.0], [26.8, 222.0], [26.9, 222.0], [27.0, 223.0], [27.1, 223.0], [27.2, 223.0], [27.3, 223.0], [27.4, 223.0], [27.5, 223.0], [27.6, 223.0], [27.7, 224.0], [27.8, 224.0], [27.9, 224.0], [28.0, 224.0], [28.1, 224.0], [28.2, 224.0], [28.3, 224.0], [28.4, 225.0], [28.5, 225.0], [28.6, 225.0], [28.7, 225.0], [28.8, 225.0], [28.9, 225.0], [29.0, 225.0], [29.1, 225.0], [29.2, 225.0], [29.3, 225.0], [29.4, 227.0], [29.5, 227.0], [29.6, 227.0], [29.7, 228.0], [29.8, 228.0], [29.9, 228.0], [30.0, 228.0], [30.1, 228.0], [30.2, 228.0], [30.3, 228.0], [30.4, 228.0], [30.5, 228.0], [30.6, 228.0], [30.7, 228.0], [30.8, 228.0], [30.9, 228.0], [31.0, 228.0], [31.1, 228.0], [31.2, 228.0], [31.3, 228.0], [31.4, 228.0], [31.5, 228.0], [31.6, 228.0], [31.7, 228.0], [31.8, 228.0], [31.9, 228.0], [32.0, 229.0], [32.1, 229.0], [32.2, 229.0], [32.3, 229.0], [32.4, 229.0], [32.5, 229.0], [32.6, 229.0], [32.7, 230.0], [32.8, 230.0], [32.9, 230.0], [33.0, 230.0], [33.1, 230.0], [33.2, 230.0], [33.3, 230.0], [33.4, 230.0], [33.5, 230.0], [33.6, 230.0], [33.7, 230.0], [33.8, 230.0], [33.9, 230.0], [34.0, 230.0], [34.1, 230.0], [34.2, 230.0], [34.3, 230.0], [34.4, 231.0], [34.5, 231.0], [34.6, 231.0], [34.7, 232.0], [34.8, 232.0], [34.9, 232.0], [35.0, 232.0], [35.1, 232.0], [35.2, 232.0], [35.3, 232.0], [35.4, 233.0], [35.5, 233.0], [35.6, 233.0], [35.7, 233.0], [35.8, 233.0], [35.9, 233.0], [36.0, 233.0], [36.1, 233.0], [36.2, 233.0], [36.3, 233.0], [36.4, 233.0], [36.5, 233.0], [36.6, 233.0], [36.7, 233.0], [36.8, 233.0], [36.9, 233.0], [37.0, 234.0], [37.1, 234.0], [37.2, 234.0], [37.3, 234.0], [37.4, 235.0], [37.5, 235.0], [37.6, 235.0], [37.7, 235.0], [37.8, 235.0], [37.9, 235.0], [38.0, 236.0], [38.1, 236.0], [38.2, 236.0], [38.3, 236.0], [38.4, 237.0], [38.5, 237.0], [38.6, 237.0], [38.7, 237.0], [38.8, 237.0], [38.9, 237.0], [39.0, 237.0], [39.1, 237.0], [39.2, 237.0], [39.3, 237.0], [39.4, 237.0], [39.5, 237.0], [39.6, 237.0], [39.7, 237.0], [39.8, 237.0], [39.9, 237.0], [40.0, 237.0], [40.1, 237.0], [40.2, 237.0], [40.3, 237.0], [40.4, 238.0], [40.5, 238.0], [40.6, 238.0], [40.7, 238.0], [40.8, 238.0], [40.9, 238.0], [41.0, 238.0], [41.1, 238.0], [41.2, 238.0], [41.3, 238.0], [41.4, 239.0], [41.5, 239.0], [41.6, 239.0], [41.7, 240.0], [41.8, 240.0], [41.9, 240.0], [42.0, 240.0], [42.1, 240.0], [42.2, 240.0], [42.3, 240.0], [42.4, 240.0], [42.5, 240.0], [42.6, 240.0], [42.7, 240.0], [42.8, 240.0], [42.9, 240.0], [43.0, 241.0], [43.1, 241.0], [43.2, 241.0], [43.3, 241.0], [43.4, 241.0], [43.5, 241.0], [43.6, 241.0], [43.7, 242.0], [43.8, 242.0], [43.9, 242.0], [44.0, 242.0], [44.1, 242.0], [44.2, 242.0], [44.3, 242.0], [44.4, 242.0], [44.5, 242.0], [44.6, 242.0], [44.7, 243.0], [44.8, 243.0], [44.9, 243.0], [45.0, 243.0], [45.1, 243.0], [45.2, 243.0], [45.3, 243.0], [45.4, 243.0], [45.5, 243.0], [45.6, 243.0], [45.7, 244.0], [45.8, 244.0], [45.9, 244.0], [46.0, 245.0], [46.1, 245.0], [46.2, 245.0], [46.3, 245.0], [46.4, 246.0], [46.5, 246.0], [46.6, 246.0], [46.7, 247.0], [46.8, 247.0], [46.9, 247.0], [47.0, 247.0], [47.1, 247.0], [47.2, 247.0], [47.3, 247.0], [47.4, 248.0], [47.5, 248.0], [47.6, 248.0], [47.7, 248.0], [47.8, 248.0], [47.9, 248.0], [48.0, 249.0], [48.1, 249.0], [48.2, 249.0], [48.3, 249.0], [48.4, 249.0], [48.5, 249.0], [48.6, 249.0], [48.7, 250.0], [48.8, 250.0], [48.9, 250.0], [49.0, 250.0], [49.1, 250.0], [49.2, 250.0], [49.3, 250.0], [49.4, 251.0], [49.5, 251.0], [49.6, 251.0], [49.7, 251.0], [49.8, 251.0], [49.9, 251.0], [50.0, 251.0], [50.1, 251.0], [50.2, 251.0], [50.3, 251.0], [50.4, 252.0], [50.5, 252.0], [50.6, 252.0], [50.7, 253.0], [50.8, 253.0], [50.9, 253.0], [51.0, 253.0], [51.1, 253.0], [51.2, 253.0], [51.3, 253.0], [51.4, 254.0], [51.5, 254.0], [51.6, 254.0], [51.7, 255.0], [51.8, 255.0], [51.9, 255.0], [52.0, 256.0], [52.1, 256.0], [52.2, 256.0], [52.3, 256.0], [52.4, 256.0], [52.5, 256.0], [52.6, 256.0], [52.7, 257.0], [52.8, 257.0], [52.9, 257.0], [53.0, 257.0], [53.1, 257.0], [53.2, 257.0], [53.3, 257.0], [53.4, 258.0], [53.5, 258.0], [53.6, 258.0], [53.7, 258.0], [53.8, 258.0], [53.9, 258.0], [54.0, 258.0], [54.1, 258.0], [54.2, 258.0], [54.3, 258.0], [54.4, 259.0], [54.5, 259.0], [54.6, 259.0], [54.7, 259.0], [54.8, 259.0], [54.9, 259.0], [55.0, 259.0], [55.1, 259.0], [55.2, 259.0], [55.3, 259.0], [55.4, 260.0], [55.5, 260.0], [55.6, 260.0], [55.7, 260.0], [55.8, 260.0], [55.9, 260.0], [56.0, 260.0], [56.1, 260.0], [56.2, 260.0], [56.3, 260.0], [56.4, 262.0], [56.5, 262.0], [56.6, 262.0], [56.7, 263.0], [56.8, 263.0], [56.9, 263.0], [57.0, 263.0], [57.1, 263.0], [57.2, 263.0], [57.3, 263.0], [57.4, 264.0], [57.5, 264.0], [57.6, 264.0], [57.7, 265.0], [57.8, 265.0], [57.9, 265.0], [58.0, 265.0], [58.1, 265.0], [58.2, 265.0], [58.3, 265.0], [58.4, 269.0], [58.5, 269.0], [58.6, 269.0], [58.7, 270.0], [58.8, 270.0], [58.9, 270.0], [59.0, 271.0], [59.1, 271.0], [59.2, 271.0], [59.3, 271.0], [59.4, 272.0], [59.5, 272.0], [59.6, 272.0], [59.7, 272.0], [59.8, 272.0], [59.9, 272.0], [60.0, 274.0], [60.1, 274.0], [60.2, 274.0], [60.3, 274.0], [60.4, 274.0], [60.5, 274.0], [60.6, 274.0], [60.7, 275.0], [60.8, 275.0], [60.9, 275.0], [61.0, 278.0], [61.1, 278.0], [61.2, 278.0], [61.3, 278.0], [61.4, 278.0], [61.5, 278.0], [61.6, 278.0], [61.7, 278.0], [61.8, 278.0], [61.9, 278.0], [62.0, 280.0], [62.1, 280.0], [62.2, 280.0], [62.3, 280.0], [62.4, 281.0], [62.5, 281.0], [62.6, 281.0], [62.7, 284.0], [62.8, 284.0], [62.9, 284.0], [63.0, 284.0], [63.1, 286.0], [63.2, 286.0], [63.3, 286.0], [63.4, 290.0], [63.5, 290.0], [63.6, 290.0], [63.7, 291.0], [63.8, 291.0], [63.9, 291.0], [64.0, 291.0], [64.1, 292.0], [64.2, 292.0], [64.3, 292.0], [64.4, 293.0], [64.5, 293.0], [64.6, 293.0], [64.7, 294.0], [64.8, 294.0], [64.9, 294.0], [65.0, 294.0], [65.1, 294.0], [65.2, 294.0], [65.3, 294.0], [65.4, 301.0], [65.5, 301.0], [65.6, 301.0], [65.7, 309.0], [65.8, 309.0], [65.9, 309.0], [66.0, 312.0], [66.1, 312.0], [66.2, 312.0], [66.3, 312.0], [66.4, 334.0], [66.5, 334.0], [66.6, 334.0], [66.7, 338.0], [66.8, 338.0], [66.9, 338.0], [67.0, 338.0], [67.1, 338.0], [67.2, 338.0], [67.3, 338.0], [67.4, 340.0], [67.5, 340.0], [67.6, 340.0], [67.7, 344.0], [67.8, 344.0], [67.9, 344.0], [68.0, 347.0], [68.1, 347.0], [68.2, 347.0], [68.3, 347.0], [68.4, 354.0], [68.5, 354.0], [68.6, 354.0], [68.7, 362.0], [68.8, 362.0], [68.9, 362.0], [69.0, 362.0], [69.1, 362.0], [69.2, 362.0], [69.3, 362.0], [69.4, 365.0], [69.5, 365.0], [69.6, 365.0], [69.7, 367.0], [69.8, 367.0], [69.9, 367.0], [70.0, 377.0], [70.1, 377.0], [70.2, 377.0], [70.3, 377.0], [70.4, 378.0], [70.5, 378.0], [70.6, 378.0], [70.7, 379.0], [70.8, 379.0], [70.9, 379.0], [71.0, 380.0], [71.1, 380.0], [71.2, 380.0], [71.3, 380.0], [71.4, 383.0], [71.5, 383.0], [71.6, 383.0], [71.7, 388.0], [71.8, 388.0], [71.9, 388.0], [72.0, 391.0], [72.1, 391.0], [72.2, 391.0], [72.3, 391.0], [72.4, 404.0], [72.5, 404.0], [72.6, 404.0], [72.7, 406.0], [72.8, 406.0], [72.9, 406.0], [73.0, 408.0], [73.1, 408.0], [73.2, 408.0], [73.3, 408.0], [73.4, 409.0], [73.5, 409.0], [73.6, 409.0], [73.7, 410.0], [73.8, 410.0], [73.9, 410.0], [74.0, 412.0], [74.1, 412.0], [74.2, 412.0], [74.3, 412.0], [74.4, 419.0], [74.5, 419.0], [74.6, 419.0], [74.7, 419.0], [74.8, 419.0], [74.9, 419.0], [75.0, 421.0], [75.1, 421.0], [75.2, 421.0], [75.3, 421.0], [75.4, 423.0], [75.5, 423.0], [75.6, 423.0], [75.7, 424.0], [75.8, 424.0], [75.9, 424.0], [76.0, 424.0], [76.1, 424.0], [76.2, 424.0], [76.3, 424.0], [76.4, 426.0], [76.5, 426.0], [76.6, 426.0], [76.7, 428.0], [76.8, 428.0], [76.9, 428.0], [77.0, 431.0], [77.1, 431.0], [77.2, 431.0], [77.3, 431.0], [77.4, 437.0], [77.5, 437.0], [77.6, 437.0], [77.7, 443.0], [77.8, 443.0], [77.9, 443.0], [78.0, 443.0], [78.1, 443.0], [78.2, 443.0], [78.3, 443.0], [78.4, 443.0], [78.5, 443.0], [78.6, 443.0], [78.7, 444.0], [78.8, 444.0], [78.9, 444.0], [79.0, 453.0], [79.1, 453.0], [79.2, 453.0], [79.3, 453.0], [79.4, 458.0], [79.5, 458.0], [79.6, 458.0], [79.7, 458.0], [79.8, 458.0], [79.9, 458.0], [80.0, 461.0], [80.1, 461.0], [80.2, 461.0], [80.3, 461.0], [80.4, 468.0], [80.5, 468.0], [80.6, 468.0], [80.7, 469.0], [80.8, 469.0], [80.9, 469.0], [81.0, 476.0], [81.1, 476.0], [81.2, 476.0], [81.3, 476.0], [81.4, 477.0], [81.5, 477.0], [81.6, 477.0], [81.7, 486.0], [81.8, 486.0], [81.9, 486.0], [82.0, 488.0], [82.1, 488.0], [82.2, 488.0], [82.3, 488.0], [82.4, 489.0], [82.5, 489.0], [82.6, 489.0], [82.7, 495.0], [82.8, 495.0], [82.9, 495.0], [83.0, 497.0], [83.1, 497.0], [83.2, 497.0], [83.3, 497.0], [83.4, 498.0], [83.5, 498.0], [83.6, 498.0], [83.7, 508.0], [83.8, 508.0], [83.9, 508.0], [84.0, 509.0], [84.1, 509.0], [84.2, 509.0], [84.3, 509.0], [84.4, 512.0], [84.5, 512.0], [84.6, 512.0], [84.7, 516.0], [84.8, 516.0], [84.9, 516.0], [85.0, 516.0], [85.1, 516.0], [85.2, 516.0], [85.3, 516.0], [85.4, 517.0], [85.5, 517.0], [85.6, 517.0], [85.7, 518.0], [85.8, 518.0], [85.9, 518.0], [86.0, 525.0], [86.1, 525.0], [86.2, 525.0], [86.3, 525.0], [86.4, 525.0], [86.5, 525.0], [86.6, 525.0], [86.7, 530.0], [86.8, 530.0], [86.9, 530.0], [87.0, 533.0], [87.1, 533.0], [87.2, 533.0], [87.3, 533.0], [87.4, 534.0], [87.5, 534.0], [87.6, 534.0], [87.7, 537.0], [87.8, 537.0], [87.9, 537.0], [88.0, 540.0], [88.1, 540.0], [88.2, 540.0], [88.3, 540.0], [88.4, 541.0], [88.5, 541.0], [88.6, 541.0], [88.7, 541.0], [88.8, 541.0], [88.9, 541.0], [89.0, 556.0], [89.1, 556.0], [89.2, 556.0], [89.3, 556.0], [89.4, 559.0], [89.5, 559.0], [89.6, 559.0], [89.7, 560.0], [89.8, 560.0], [89.9, 560.0], [90.0, 562.0], [90.1, 562.0], [90.2, 562.0], [90.3, 562.0], [90.4, 564.0], [90.5, 564.0], [90.6, 564.0], [90.7, 566.0], [90.8, 566.0], [90.9, 566.0], [91.0, 567.0], [91.1, 567.0], [91.2, 567.0], [91.3, 567.0], [91.4, 568.0], [91.5, 568.0], [91.6, 568.0], [91.7, 568.0], [91.8, 568.0], [91.9, 568.0], [92.0, 570.0], [92.1, 570.0], [92.2, 570.0], [92.3, 570.0], [92.4, 571.0], [92.5, 571.0], [92.6, 571.0], [92.7, 577.0], [92.8, 577.0], [92.9, 577.0], [93.0, 583.0], [93.1, 583.0], [93.2, 583.0], [93.3, 583.0], [93.4, 587.0], [93.5, 587.0], [93.6, 587.0], [93.7, 594.0], [93.8, 594.0], [93.9, 594.0], [94.0, 595.0], [94.1, 595.0], [94.2, 595.0], [94.3, 595.0], [94.4, 602.0], [94.5, 602.0], [94.6, 602.0], [94.7, 603.0], [94.8, 603.0], [94.9, 603.0], [95.0, 603.0], [95.1, 603.0], [95.2, 603.0], [95.3, 603.0], [95.4, 625.0], [95.5, 625.0], [95.6, 625.0], [95.7, 629.0], [95.8, 629.0], [95.9, 629.0], [96.0, 635.0], [96.1, 635.0], [96.2, 635.0], [96.3, 635.0], [96.4, 642.0], [96.5, 642.0], [96.6, 642.0], [96.7, 650.0], [96.8, 650.0], [96.9, 650.0], [97.0, 651.0], [97.1, 651.0], [97.2, 651.0], [97.3, 651.0], [97.4, 658.0], [97.5, 658.0], [97.6, 658.0], [97.7, 683.0], [97.8, 683.0], [97.9, 683.0], [98.0, 684.0], [98.1, 684.0], [98.2, 684.0], [98.3, 684.0], [98.4, 685.0], [98.5, 685.0], [98.6, 685.0], [98.7, 687.0], [98.8, 687.0], [98.9, 687.0], [99.0, 693.0], [99.1, 693.0], [99.2, 693.0], [99.3, 693.0], [99.4, 693.0], [99.5, 693.0], [99.6, 693.0], [99.7, 710.0], [99.8, 710.0], [99.9, 710.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 260.0, "series": [{"data": [[0.0, 2.0], [300.0, 2.0], [100.0, 260.0], [200.0, 36.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[600.0, 1.0], [800.0, 9.0], [900.0, 17.0], [1000.0, 14.0], [1100.0, 13.0], [1200.0, 8.0], [1300.0, 6.0], [1400.0, 5.0], [1500.0, 5.0], [1600.0, 8.0], [1700.0, 9.0], [1800.0, 2.0], [1900.0, 7.0], [2000.0, 4.0], [2200.0, 2.0], [2300.0, 2.0], [2500.0, 4.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 2.0], [3700.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [4900.0, 3.0], [5000.0, 1.0], [5100.0, 1.0], [5500.0, 3.0], [5700.0, 1.0], [6100.0, 2.0], [6200.0, 2.0], [6300.0, 1.0], [6400.0, 2.0], [6500.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [7000.0, 1.0], [7100.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7600.0, 1.0], [7800.0, 2.0], [7900.0, 2.0], [8100.0, 1.0], [8400.0, 1.0], [8600.0, 2.0], [8700.0, 1.0], [8900.0, 2.0], [9000.0, 1.0], [9300.0, 2.0], [9400.0, 2.0], [9800.0, 1.0], [9900.0, 1.0], [10000.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [10300.0, 2.0], [10600.0, 2.0], [10700.0, 1.0], [10800.0, 1.0], [10900.0, 1.0], [11400.0, 3.0], [11500.0, 2.0], [11600.0, 1.0], [11700.0, 1.0], [12100.0, 3.0], [12200.0, 2.0], [12300.0, 1.0], [12400.0, 1.0], [12500.0, 1.0], [200.0, 1.0], [300.0, 90.0], [400.0, 8.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[41900.0, 2.0], [42100.0, 1.0], [42500.0, 1.0], [42700.0, 1.0], [44700.0, 1.0], [43300.0, 1.0], [44300.0, 1.0], [45700.0, 1.0], [45900.0, 2.0], [46500.0, 1.0], [46300.0, 1.0], [46900.0, 1.0], [47100.0, 1.0], [47500.0, 1.0], [47700.0, 1.0], [48100.0, 1.0], [48300.0, 1.0], [48700.0, 1.0], [48900.0, 1.0], [49500.0, 1.0], [49900.0, 1.0], [50300.0, 2.0], [51100.0, 1.0], [50900.0, 1.0], [51700.0, 1.0], [51500.0, 1.0], [52300.0, 2.0], [52700.0, 3.0], [53100.0, 1.0], [53500.0, 2.0], [53900.0, 2.0], [53700.0, 1.0], [54100.0, 1.0], [54700.0, 2.0], [55100.0, 1.0], [55500.0, 3.0], [56300.0, 1.0], [56700.0, 1.0], [57100.0, 2.0], [57300.0, 1.0], [57700.0, 1.0], [57900.0, 3.0], [400.0, 30.0], [500.0, 68.0], [600.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1200.0, 1.0], [1400.0, 1.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 2.0], [2300.0, 5.0], [2400.0, 7.0], [2500.0, 9.0], [2600.0, 12.0], [2700.0, 15.0], [2800.0, 16.0], [2900.0, 10.0], [3000.0, 6.0], [3100.0, 3.0], [3200.0, 3.0], [41200.0, 1.0], [41400.0, 2.0], [41800.0, 1.0], [42600.0, 1.0], [43000.0, 1.0], [43800.0, 2.0], [43600.0, 3.0], [44200.0, 1.0], [45000.0, 1.0], [44600.0, 1.0], [45200.0, 1.0], [45600.0, 1.0], [46600.0, 1.0], [47000.0, 1.0], [48000.0, 1.0], [49000.0, 1.0], [48400.0, 1.0], [48600.0, 1.0], [48800.0, 1.0], [50800.0, 1.0], [49400.0, 1.0], [49600.0, 1.0], [50400.0, 1.0], [50600.0, 2.0], [51400.0, 1.0], [51200.0, 1.0], [52200.0, 1.0], [52000.0, 2.0], [53000.0, 1.0], [53400.0, 1.0], [54400.0, 2.0], [55400.0, 1.0], [55800.0, 1.0], [56200.0, 2.0], [57000.0, 1.0], [57400.0, 1.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[2200.0, 2.0], [600.0, 29.0], [2600.0, 1.0], [700.0, 6.0], [800.0, 6.0], [900.0, 3.0], [1000.0, 2.0], [1100.0, 2.0], [300.0, 125.0], [1300.0, 1.0], [400.0, 89.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [500.0, 30.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[300.0, 21.0], [600.0, 16.0], [700.0, 1.0], [100.0, 37.0], [200.0, 159.0], [400.0, 34.0], [500.0, 32.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 57900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 275.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 895.0, "series": [{"data": [[0.0, 895.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 275.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 330.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7123007E12, "maxY": 100.0, "series": [{"data": [[1.71230088E12, 9.6078431372549], [1.71230082E12, 10.0]], "isOverall": false, "label": "bbox_10", "isController": false}, {"data": [[1.71230106E12, 100.0], [1.71230094E12, 100.0], [1.71230112E12, 96.85271317829461], [1.712301E12, 100.0], [1.71230118E12, 36.01408450704225]], "isOverall": false, "label": "bbox_100", "isController": false}, {"data": [[1.71230076E12, 1.0], [1.71230082E12, 1.0], [1.7123007E12, 1.0]], "isOverall": false, "label": "bbox_1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230118E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 99.0, "minX": 1.0, "maxY": 49967.38000000001, "series": [{"data": [[2.0, 148.0], [3.0, 173.25], [4.0, 150.42857142857142], [5.0, 173.0], [6.0, 175.16666666666666], [7.0, 160.0], [8.0, 187.73333333333332], [9.0, 166.05882352941174], [10.0, 220.54761904761904], [12.0, 188.0], [13.0, 146.0], [14.0, 123.0], [15.0, 121.0], [16.0, 112.0], [17.0, 172.0], [18.0, 105.0], [19.0, 127.0], [20.0, 125.0], [21.0, 115.0], [22.0, 153.0], [23.0, 126.0], [24.0, 124.0], [25.0, 127.0], [26.0, 118.0], [27.0, 157.0], [28.0, 131.0], [29.0, 116.0], [30.0, 123.0], [31.0, 114.0], [33.0, 114.0], [32.0, 125.0], [35.0, 116.0], [34.0, 111.0], [37.0, 127.0], [36.0, 170.0], [39.0, 163.0], [38.0, 121.0], [41.0, 113.0], [40.0, 131.0], [43.0, 129.0], [42.0, 118.0], [45.0, 153.0], [44.0, 115.0], [47.0, 111.0], [46.0, 114.0], [49.0, 125.0], [48.0, 135.0], [51.0, 112.0], [50.0, 154.0], [53.0, 111.0], [52.0, 112.0], [55.0, 119.0], [54.0, 116.0], [57.0, 116.0], [56.0, 122.0], [59.0, 118.0], [58.0, 145.0], [61.0, 117.0], [60.0, 114.0], [63.0, 119.0], [62.0, 113.0], [67.0, 144.0], [66.0, 172.0], [65.0, 123.0], [64.0, 159.0], [71.0, 113.0], [70.0, 106.0], [69.0, 117.0], [68.0, 163.0], [75.0, 119.0], [74.0, 100.0], [73.0, 149.0], [72.0, 122.0], [79.0, 121.0], [78.0, 110.0], [77.0, 128.0], [76.0, 153.0], [83.0, 126.0], [82.0, 153.0], [81.0, 99.0], [80.0, 127.0], [87.0, 108.0], [86.0, 121.0], [85.0, 168.0], [84.0, 116.0], [91.0, 111.0], [90.0, 131.0], [89.0, 124.0], [88.0, 131.0], [95.0, 164.0], [94.0, 124.0], [93.0, 122.0], [92.0, 147.0], [99.0, 130.0], [98.0, 173.0], [97.0, 160.0], [96.0, 136.0], [100.0, 122.0], [1.0, 156.53921568627447]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[19.90333333333334, 160.57666666666654]], "isOverall": false, "label": "Test_5-Aggregated", "isController": false}, {"data": [[1.0, 365.53999999999996], [10.0, 1335.6100000000001], [100.0, 6860.87]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[37.0, 2854.0066666666667]], "isOverall": false, "label": "Test_1-Aggregated", "isController": false}, {"data": [[1.0, 521.0400000000002], [10.0, 2609.860000000001], [100.0, 49967.38000000001]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[37.0, 17699.426666666666]], "isOverall": false, "label": "Test_2-Aggregated", "isController": false}, {"data": [[1.0, 394.8799999999999], [10.0, 741.3500000000003], [100.0, 381.03999999999996]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[37.0, 505.7566666666669]], "isOverall": false, "label": "Test_3-Aggregated", "isController": false}, {"data": [[1.0, 228.0], [10.0, 499.3000000000003], [100.0, 234.73]], "isOverall": false, "label": "Test_4", "isController": false}, {"data": [[37.0, 320.6766666666665]], "isOverall": false, "label": "Test_4-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 178.68333333333334, "minX": 1.7123007E12, "maxY": 524161.8333333333, "series": [{"data": [[1.71230088E12, 524161.8333333333], [1.71230106E12, 259503.73333333334], [1.71230076E12, 225707.78333333333], [1.71230094E12, 171650.0], [1.71230112E12, 78925.5], [1.71230082E12, 192695.66666666666], [1.712301E12, 77276.26666666666], [1.7123007E12, 246511.38333333333], [1.71230118E12, 7182.833333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71230088E12, 1882.8833333333334], [1.71230106E12, 922.1333333333333], [1.71230076E12, 838.3333333333334], [1.71230094E12, 245.0], [1.71230112E12, 319.65], [1.71230082E12, 692.5166666666667], [1.712301E12, 317.8666666666667], [1.7123007E12, 552.9333333333333], [1.71230118E12, 178.68333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230118E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 130.6478873239437, "minX": 1.7123007E12, "maxY": 52743.3382352941, "series": [{"data": [[1.71230088E12, 193.86999999999983], [1.71230112E12, 130.86206896551727], [1.71230082E12, 157.14999999999995], [1.71230118E12, 130.6478873239437]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230088E12, 1303.457627118644], [1.71230094E12, 6860.87], [1.71230082E12, 1381.8780487804877], [1.7123007E12, 365.53999999999996]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230088E12, 2609.860000000001], [1.71230106E12, 52743.3382352941], [1.71230076E12, 516.2318840579712], [1.712301E12, 44068.46874999999], [1.7123007E12, 531.741935483871]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230088E12, 741.3500000000003], [1.71230106E12, 381.03999999999996], [1.71230076E12, 391.12903225806457], [1.71230082E12, 400.99999999999994]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230088E12, 499.3000000000003], [1.71230112E12, 234.73], [1.71230082E12, 228.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230118E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123007E12, "maxY": 6853.450000000001, "series": [{"data": [[1.71230088E12, 193.83], [1.71230112E12, 130.68965517241378], [1.71230082E12, 157.07000000000002], [1.71230118E12, 130.5492957746479]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230088E12, 1279.016949152542], [1.71230094E12, 6853.450000000001], [1.71230082E12, 1355.170731707317], [1.7123007E12, 327.05000000000007]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230088E12, 0.0], [1.71230106E12, 0.0], [1.71230076E12, 0.0], [1.712301E12, 0.0], [1.7123007E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230088E12, 727.9699999999998], [1.71230106E12, 365.6300000000001], [1.71230076E12, 374.4516129032258], [1.71230082E12, 378.81578947368416]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230088E12, 488.69999999999993], [1.71230112E12, 218.40999999999997], [1.71230082E12, 215.40999999999994]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230118E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123007E12, "maxY": 1.1000000000000005, "series": [{"data": [[1.71230088E12, 0.57], [1.71230112E12, 0.5517241379310345], [1.71230082E12, 0.6200000000000002], [1.71230118E12, 0.6478873239436621]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230088E12, 0.45762711864406785], [1.71230094E12, 0.5499999999999999], [1.71230082E12, 0.48780487804878064], [1.7123007E12, 1.1000000000000005]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230088E12, 0.0], [1.71230106E12, 0.0], [1.71230076E12, 0.0], [1.712301E12, 0.0], [1.7123007E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230088E12, 0.5900000000000002], [1.71230106E12, 0.51], [1.71230076E12, 0.6612903225806452], [1.71230082E12, 0.736842105263158]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230088E12, 0.6399999999999998], [1.71230112E12, 0.55], [1.71230082E12, 0.5100000000000002]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230118E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 98.0, "minX": 1.7123007E12, "maxY": 57982.0, "series": [{"data": [[1.71230088E12, 3251.0], [1.71230106E12, 57982.0], [1.71230076E12, 610.0], [1.71230094E12, 12557.0], [1.71230112E12, 340.0], [1.71230082E12, 2538.0], [1.712301E12, 47068.0], [1.7123007E12, 637.0], [1.71230118E12, 189.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71230088E12, 2722.0], [1.71230106E12, 55549.9], [1.71230076E12, 547.2], [1.71230094E12, 11607.9], [1.71230112E12, 271.0], [1.71230082E12, 1058.0], [1.712301E12, 46632.9], [1.7123007E12, 535.2], [1.71230118E12, 163.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71230088E12, 3183.5999999999995], [1.71230106E12, 57977.86], [1.71230076E12, 602.9600000000002], [1.71230094E12, 12555.97], [1.71230112E12, 339.4], [1.71230082E12, 2275.3999999999983], [1.712301E12, 47068.0], [1.7123007E12, 626.7600000000002], [1.71230118E12, 189.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71230088E12, 2899.0], [1.71230106E12, 57096.25], [1.71230076E12, 563.9999999999999], [1.71230094E12, 12211.05], [1.71230112E12, 293.5], [1.71230082E12, 1503.0], [1.712301E12, 47012.1], [1.7123007E12, 564.8], [1.71230118E12, 178.39999999999986]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71230088E12, 109.0], [1.71230106E12, 322.0], [1.71230076E12, 327.0], [1.71230094E12, 913.0], [1.71230112E12, 99.0], [1.71230082E12, 98.0], [1.712301E12, 41227.0], [1.7123007E12, 293.0], [1.71230118E12, 105.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71230088E12, 603.0], [1.71230106E12, 428.0], [1.71230076E12, 473.0], [1.71230094E12, 6699.0], [1.71230112E12, 215.0], [1.71230082E12, 221.0], [1.712301E12, 43840.5], [1.7123007E12, 367.0], [1.71230118E12, 123.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230118E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 164.0, "minX": 1.0, "maxY": 6905.0, "series": [{"data": [[2.0, 490.0], [8.0, 4930.5], [32.0, 302.5], [9.0, 1964.0], [36.0, 177.5], [10.0, 1085.0], [11.0, 6905.0], [46.0, 190.0], [3.0, 364.0], [12.0, 957.5], [1.0, 502.0], [4.0, 274.5], [16.0, 620.5], [17.0, 556.0], [18.0, 561.0], [19.0, 548.0], [5.0, 335.0], [21.0, 517.0], [22.0, 459.5], [6.0, 164.0], [7.0, 487.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 46.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6901.5, "series": [{"data": [[2.0, 0.0], [8.0, 4928.0], [32.0, 302.5], [9.0, 1891.0], [36.0, 177.5], [10.0, 1072.0], [11.0, 6901.5], [46.0, 190.0], [3.0, 297.0], [12.0, 884.0], [1.0, 0.0], [4.0, 190.5], [16.0, 598.0], [17.0, 547.0], [18.0, 560.0], [19.0, 530.5], [5.0, 190.0], [21.0, 517.0], [22.0, 455.0], [6.0, 164.0], [7.0, 464.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 46.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.1666666666666667, "minX": 1.7123007E12, "maxY": 7.483333333333333, "series": [{"data": [[1.71230088E12, 7.483333333333333], [1.71230106E12, 1.6666666666666667], [1.71230076E12, 2.183333333333333], [1.71230094E12, 1.6666666666666667], [1.71230112E12, 2.1666666666666665], [1.71230082E12, 4.8], [1.712301E12, 1.6666666666666667], [1.7123007E12, 2.2], [1.71230118E12, 1.1666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230118E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.7123007E12, "maxY": 7.65, "series": [{"data": [[1.71230088E12, 7.65], [1.71230106E12, 2.8], [1.71230076E12, 2.183333333333333], [1.71230094E12, 1.6666666666666667], [1.71230112E12, 2.15], [1.71230082E12, 4.65], [1.712301E12, 0.5333333333333333], [1.7123007E12, 2.183333333333333], [1.71230118E12, 1.1833333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230118E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.48333333333333334, "minX": 1.7123007E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.71230088E12, 0.9833333333333333], [1.71230094E12, 1.6666666666666667], [1.71230082E12, 0.6833333333333333], [1.7123007E12, 1.6666666666666667]], "isOverall": false, "label": "Test_1-success", "isController": false}, {"data": [[1.71230088E12, 1.6666666666666667], [1.71230112E12, 0.48333333333333334], [1.71230082E12, 1.6666666666666667], [1.71230118E12, 1.1833333333333333]], "isOverall": false, "label": "Test_5-success", "isController": false}, {"data": [[1.71230088E12, 1.6666666666666667], [1.71230106E12, 1.1333333333333333], [1.71230076E12, 1.15], [1.712301E12, 0.5333333333333333], [1.7123007E12, 0.5166666666666667]], "isOverall": false, "label": "Test_2-success", "isController": false}, {"data": [[1.71230088E12, 1.6666666666666667], [1.71230112E12, 1.6666666666666667], [1.71230082E12, 1.6666666666666667]], "isOverall": false, "label": "Test_4-success", "isController": false}, {"data": [[1.71230088E12, 1.6666666666666667], [1.71230106E12, 1.6666666666666667], [1.71230076E12, 1.0333333333333334], [1.71230082E12, 0.6333333333333333]], "isOverall": false, "label": "Test_3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230118E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5333333333333333, "minX": 1.7123007E12, "maxY": 7.65, "series": [{"data": [[1.71230088E12, 7.65], [1.71230106E12, 2.8], [1.71230076E12, 2.183333333333333], [1.71230094E12, 1.6666666666666667], [1.71230112E12, 2.15], [1.71230082E12, 4.65], [1.712301E12, 0.5333333333333333], [1.7123007E12, 2.183333333333333], [1.71230118E12, 1.1833333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230118E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

