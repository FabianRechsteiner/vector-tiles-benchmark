/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 200.0, "minX": 0.0, "maxY": 43349.0, "series": [{"data": [[0.0, 200.0], [0.1, 200.0], [0.2, 200.0], [0.3, 200.0], [0.4, 200.0], [0.5, 204.0], [0.6, 204.0], [0.7, 204.0], [0.8, 204.0], [0.9, 204.0], [1.0, 206.0], [1.1, 206.0], [1.2, 206.0], [1.3, 206.0], [1.4, 206.0], [1.5, 207.0], [1.6, 207.0], [1.7, 207.0], [1.8, 207.0], [1.9, 207.0], [2.0, 213.0], [2.1, 213.0], [2.2, 213.0], [2.3, 213.0], [2.4, 213.0], [2.5, 214.0], [2.6, 214.0], [2.7, 214.0], [2.8, 214.0], [2.9, 214.0], [3.0, 215.0], [3.1, 215.0], [3.2, 215.0], [3.3, 215.0], [3.4, 215.0], [3.5, 216.0], [3.6, 216.0], [3.7, 216.0], [3.8, 216.0], [3.9, 216.0], [4.0, 219.0], [4.1, 219.0], [4.2, 219.0], [4.3, 219.0], [4.4, 219.0], [4.5, 219.0], [4.6, 219.0], [4.7, 219.0], [4.8, 219.0], [4.9, 219.0], [5.0, 220.0], [5.1, 220.0], [5.2, 220.0], [5.3, 220.0], [5.4, 226.0], [5.5, 226.0], [5.6, 226.0], [5.7, 226.0], [5.8, 226.0], [5.9, 227.0], [6.0, 227.0], [6.1, 227.0], [6.2, 227.0], [6.3, 227.0], [6.4, 232.0], [6.5, 232.0], [6.6, 232.0], [6.7, 232.0], [6.8, 232.0], [6.9, 236.0], [7.0, 236.0], [7.1, 236.0], [7.2, 236.0], [7.3, 236.0], [7.4, 237.0], [7.5, 237.0], [7.6, 237.0], [7.7, 237.0], [7.8, 237.0], [7.9, 239.0], [8.0, 239.0], [8.1, 239.0], [8.2, 239.0], [8.3, 239.0], [8.4, 241.0], [8.5, 241.0], [8.6, 241.0], [8.7, 241.0], [8.8, 241.0], [8.9, 242.0], [9.0, 242.0], [9.1, 242.0], [9.2, 242.0], [9.3, 242.0], [9.4, 242.0], [9.5, 242.0], [9.6, 242.0], [9.7, 242.0], [9.8, 242.0], [9.9, 242.0], [10.0, 242.0], [10.1, 242.0], [10.2, 242.0], [10.3, 243.0], [10.4, 243.0], [10.5, 243.0], [10.6, 243.0], [10.7, 243.0], [10.8, 244.0], [10.9, 244.0], [11.0, 244.0], [11.1, 244.0], [11.2, 244.0], [11.3, 245.0], [11.4, 245.0], [11.5, 245.0], [11.6, 245.0], [11.7, 245.0], [11.8, 246.0], [11.9, 246.0], [12.0, 246.0], [12.1, 246.0], [12.2, 246.0], [12.3, 246.0], [12.4, 246.0], [12.5, 246.0], [12.6, 246.0], [12.7, 246.0], [12.8, 247.0], [12.9, 247.0], [13.0, 247.0], [13.1, 247.0], [13.2, 247.0], [13.3, 247.0], [13.4, 247.0], [13.5, 247.0], [13.6, 247.0], [13.7, 247.0], [13.8, 247.0], [13.9, 247.0], [14.0, 247.0], [14.1, 247.0], [14.2, 247.0], [14.3, 248.0], [14.4, 248.0], [14.5, 248.0], [14.6, 248.0], [14.7, 248.0], [14.8, 248.0], [14.9, 248.0], [15.0, 248.0], [15.1, 248.0], [15.2, 249.0], [15.3, 249.0], [15.4, 249.0], [15.5, 249.0], [15.6, 249.0], [15.7, 249.0], [15.8, 249.0], [15.9, 249.0], [16.0, 249.0], [16.1, 249.0], [16.2, 249.0], [16.3, 249.0], [16.4, 249.0], [16.5, 249.0], [16.6, 249.0], [16.7, 250.0], [16.8, 250.0], [16.9, 250.0], [17.0, 250.0], [17.1, 250.0], [17.2, 250.0], [17.3, 250.0], [17.4, 250.0], [17.5, 250.0], [17.6, 250.0], [17.7, 250.0], [17.8, 250.0], [17.9, 250.0], [18.0, 250.0], [18.1, 250.0], [18.2, 250.0], [18.3, 250.0], [18.4, 250.0], [18.5, 250.0], [18.6, 250.0], [18.7, 250.0], [18.8, 250.0], [18.9, 250.0], [19.0, 250.0], [19.1, 250.0], [19.2, 251.0], [19.3, 251.0], [19.4, 251.0], [19.5, 251.0], [19.6, 251.0], [19.7, 251.0], [19.8, 251.0], [19.9, 251.0], [20.0, 251.0], [20.1, 251.0], [20.2, 251.0], [20.3, 251.0], [20.4, 251.0], [20.5, 251.0], [20.6, 251.0], [20.7, 251.0], [20.8, 251.0], [20.9, 251.0], [21.0, 251.0], [21.1, 251.0], [21.2, 251.0], [21.3, 251.0], [21.4, 251.0], [21.5, 251.0], [21.6, 252.0], [21.7, 252.0], [21.8, 252.0], [21.9, 252.0], [22.0, 252.0], [22.1, 252.0], [22.2, 252.0], [22.3, 252.0], [22.4, 252.0], [22.5, 252.0], [22.6, 252.0], [22.7, 252.0], [22.8, 252.0], [22.9, 252.0], [23.0, 252.0], [23.1, 252.0], [23.2, 252.0], [23.3, 252.0], [23.4, 252.0], [23.5, 252.0], [23.6, 252.0], [23.7, 252.0], [23.8, 252.0], [23.9, 252.0], [24.0, 252.0], [24.1, 253.0], [24.2, 253.0], [24.3, 253.0], [24.4, 253.0], [24.5, 253.0], [24.6, 253.0], [24.7, 253.0], [24.8, 253.0], [24.9, 253.0], [25.0, 253.0], [25.1, 253.0], [25.2, 253.0], [25.3, 253.0], [25.4, 253.0], [25.5, 254.0], [25.6, 254.0], [25.7, 254.0], [25.8, 254.0], [25.9, 254.0], [26.0, 254.0], [26.1, 254.0], [26.2, 254.0], [26.3, 254.0], [26.4, 254.0], [26.5, 254.0], [26.6, 254.0], [26.7, 254.0], [26.8, 254.0], [26.9, 254.0], [27.0, 255.0], [27.1, 255.0], [27.2, 255.0], [27.3, 255.0], [27.4, 255.0], [27.5, 255.0], [27.6, 255.0], [27.7, 255.0], [27.8, 255.0], [27.9, 255.0], [28.0, 256.0], [28.1, 256.0], [28.2, 256.0], [28.3, 256.0], [28.4, 256.0], [28.5, 258.0], [28.6, 258.0], [28.7, 258.0], [28.8, 258.0], [28.9, 258.0], [29.0, 258.0], [29.1, 258.0], [29.2, 258.0], [29.3, 258.0], [29.4, 258.0], [29.5, 258.0], [29.6, 258.0], [29.7, 258.0], [29.8, 258.0], [29.9, 258.0], [30.0, 259.0], [30.1, 259.0], [30.2, 259.0], [30.3, 259.0], [30.4, 260.0], [30.5, 260.0], [30.6, 260.0], [30.7, 260.0], [30.8, 260.0], [30.9, 260.0], [31.0, 260.0], [31.1, 260.0], [31.2, 260.0], [31.3, 260.0], [31.4, 260.0], [31.5, 260.0], [31.6, 260.0], [31.7, 260.0], [31.8, 260.0], [31.9, 260.0], [32.0, 260.0], [32.1, 260.0], [32.2, 260.0], [32.3, 260.0], [32.4, 261.0], [32.5, 261.0], [32.6, 261.0], [32.7, 261.0], [32.8, 261.0], [32.9, 261.0], [33.0, 261.0], [33.1, 261.0], [33.2, 261.0], [33.3, 261.0], [33.4, 261.0], [33.5, 261.0], [33.6, 261.0], [33.7, 261.0], [33.8, 261.0], [33.9, 262.0], [34.0, 262.0], [34.1, 262.0], [34.2, 262.0], [34.3, 262.0], [34.4, 262.0], [34.5, 262.0], [34.6, 262.0], [34.7, 262.0], [34.8, 262.0], [34.9, 262.0], [35.0, 262.0], [35.1, 262.0], [35.2, 262.0], [35.3, 262.0], [35.4, 262.0], [35.5, 262.0], [35.6, 262.0], [35.7, 262.0], [35.8, 262.0], [35.9, 262.0], [36.0, 262.0], [36.1, 262.0], [36.2, 262.0], [36.3, 263.0], [36.4, 263.0], [36.5, 263.0], [36.6, 263.0], [36.7, 263.0], [36.8, 263.0], [36.9, 263.0], [37.0, 263.0], [37.1, 263.0], [37.2, 263.0], [37.3, 263.0], [37.4, 263.0], [37.5, 263.0], [37.6, 263.0], [37.7, 263.0], [37.8, 264.0], [37.9, 264.0], [38.0, 264.0], [38.1, 264.0], [38.2, 264.0], [38.3, 264.0], [38.4, 264.0], [38.5, 264.0], [38.6, 264.0], [38.7, 264.0], [38.8, 265.0], [38.9, 265.0], [39.0, 265.0], [39.1, 265.0], [39.2, 265.0], [39.3, 266.0], [39.4, 266.0], [39.5, 266.0], [39.6, 266.0], [39.7, 266.0], [39.8, 266.0], [39.9, 266.0], [40.0, 266.0], [40.1, 266.0], [40.2, 267.0], [40.3, 267.0], [40.4, 267.0], [40.5, 267.0], [40.6, 267.0], [40.7, 267.0], [40.8, 267.0], [40.9, 267.0], [41.0, 267.0], [41.1, 267.0], [41.2, 268.0], [41.3, 268.0], [41.4, 268.0], [41.5, 268.0], [41.6, 268.0], [41.7, 268.0], [41.8, 268.0], [41.9, 268.0], [42.0, 268.0], [42.1, 268.0], [42.2, 268.0], [42.3, 268.0], [42.4, 268.0], [42.5, 268.0], [42.6, 268.0], [42.7, 269.0], [42.8, 269.0], [42.9, 269.0], [43.0, 269.0], [43.1, 269.0], [43.2, 270.0], [43.3, 270.0], [43.4, 270.0], [43.5, 270.0], [43.6, 270.0], [43.7, 272.0], [43.8, 272.0], [43.9, 272.0], [44.0, 272.0], [44.1, 272.0], [44.2, 273.0], [44.3, 273.0], [44.4, 273.0], [44.5, 273.0], [44.6, 273.0], [44.7, 274.0], [44.8, 274.0], [44.9, 274.0], [45.0, 274.0], [45.1, 274.0], [45.2, 274.0], [45.3, 274.0], [45.4, 274.0], [45.5, 274.0], [45.6, 276.0], [45.7, 276.0], [45.8, 276.0], [45.9, 276.0], [46.0, 276.0], [46.1, 276.0], [46.2, 276.0], [46.3, 276.0], [46.4, 276.0], [46.5, 276.0], [46.6, 277.0], [46.7, 277.0], [46.8, 277.0], [46.9, 277.0], [47.0, 277.0], [47.1, 277.0], [47.2, 277.0], [47.3, 277.0], [47.4, 277.0], [47.5, 277.0], [47.6, 278.0], [47.7, 278.0], [47.8, 278.0], [47.9, 278.0], [48.0, 278.0], [48.1, 278.0], [48.2, 278.0], [48.3, 278.0], [48.4, 278.0], [48.5, 278.0], [48.6, 278.0], [48.7, 278.0], [48.8, 278.0], [48.9, 278.0], [49.0, 278.0], [49.1, 278.0], [49.2, 278.0], [49.3, 278.0], [49.4, 278.0], [49.5, 278.0], [49.6, 278.0], [49.7, 278.0], [49.8, 278.0], [49.9, 278.0], [50.0, 279.0], [50.1, 279.0], [50.2, 279.0], [50.3, 279.0], [50.4, 279.0], [50.5, 282.0], [50.6, 282.0], [50.7, 282.0], [50.8, 282.0], [50.9, 282.0], [51.0, 283.0], [51.1, 283.0], [51.2, 283.0], [51.3, 283.0], [51.4, 283.0], [51.5, 283.0], [51.6, 283.0], [51.7, 283.0], [51.8, 283.0], [51.9, 283.0], [52.0, 288.0], [52.1, 288.0], [52.2, 288.0], [52.3, 288.0], [52.4, 288.0], [52.5, 290.0], [52.6, 290.0], [52.7, 290.0], [52.8, 290.0], [52.9, 290.0], [53.0, 290.0], [53.1, 290.0], [53.2, 290.0], [53.3, 290.0], [53.4, 290.0], [53.5, 291.0], [53.6, 291.0], [53.7, 291.0], [53.8, 291.0], [53.9, 291.0], [54.0, 294.0], [54.1, 294.0], [54.2, 294.0], [54.3, 294.0], [54.4, 294.0], [54.5, 295.0], [54.6, 295.0], [54.7, 295.0], [54.8, 295.0], [54.9, 295.0], [55.0, 295.0], [55.1, 295.0], [55.2, 295.0], [55.3, 295.0], [55.4, 296.0], [55.5, 296.0], [55.6, 296.0], [55.7, 296.0], [55.8, 296.0], [55.9, 297.0], [56.0, 297.0], [56.1, 297.0], [56.2, 297.0], [56.3, 297.0], [56.4, 297.0], [56.5, 297.0], [56.6, 297.0], [56.7, 297.0], [56.8, 297.0], [56.9, 301.0], [57.0, 301.0], [57.1, 301.0], [57.2, 301.0], [57.3, 301.0], [57.4, 304.0], [57.5, 304.0], [57.6, 304.0], [57.7, 304.0], [57.8, 304.0], [57.9, 305.0], [58.0, 305.0], [58.1, 305.0], [58.2, 305.0], [58.3, 305.0], [58.4, 312.0], [58.5, 312.0], [58.6, 312.0], [58.7, 312.0], [58.8, 312.0], [58.9, 312.0], [59.0, 312.0], [59.1, 312.0], [59.2, 312.0], [59.3, 312.0], [59.4, 316.0], [59.5, 316.0], [59.6, 316.0], [59.7, 316.0], [59.8, 316.0], [59.9, 318.0], [60.0, 318.0], [60.1, 318.0], [60.2, 318.0], [60.3, 320.0], [60.4, 320.0], [60.5, 320.0], [60.6, 320.0], [60.7, 320.0], [60.8, 321.0], [60.9, 321.0], [61.0, 321.0], [61.1, 321.0], [61.2, 321.0], [61.3, 322.0], [61.4, 322.0], [61.5, 322.0], [61.6, 322.0], [61.7, 322.0], [61.8, 323.0], [61.9, 323.0], [62.0, 323.0], [62.1, 323.0], [62.2, 323.0], [62.3, 327.0], [62.4, 327.0], [62.5, 327.0], [62.6, 327.0], [62.7, 327.0], [62.8, 328.0], [62.9, 328.0], [63.0, 328.0], [63.1, 328.0], [63.2, 328.0], [63.3, 328.0], [63.4, 328.0], [63.5, 328.0], [63.6, 328.0], [63.7, 328.0], [63.8, 330.0], [63.9, 330.0], [64.0, 330.0], [64.1, 330.0], [64.2, 330.0], [64.3, 333.0], [64.4, 333.0], [64.5, 333.0], [64.6, 333.0], [64.7, 333.0], [64.8, 339.0], [64.9, 339.0], [65.0, 339.0], [65.1, 339.0], [65.2, 342.0], [65.3, 342.0], [65.4, 342.0], [65.5, 342.0], [65.6, 342.0], [65.7, 346.0], [65.8, 346.0], [65.9, 346.0], [66.0, 346.0], [66.1, 346.0], [66.2, 349.0], [66.3, 349.0], [66.4, 349.0], [66.5, 349.0], [66.6, 349.0], [66.7, 361.0], [66.8, 361.0], [66.9, 361.0], [67.0, 361.0], [67.1, 361.0], [67.2, 365.0], [67.3, 365.0], [67.4, 365.0], [67.5, 365.0], [67.6, 365.0], [67.7, 388.0], [67.8, 388.0], [67.9, 388.0], [68.0, 388.0], [68.1, 388.0], [68.2, 388.0], [68.3, 388.0], [68.4, 388.0], [68.5, 388.0], [68.6, 388.0], [68.7, 398.0], [68.8, 398.0], [68.9, 398.0], [69.0, 398.0], [69.1, 398.0], [69.2, 401.0], [69.3, 401.0], [69.4, 401.0], [69.5, 401.0], [69.6, 401.0], [69.7, 401.0], [69.8, 401.0], [69.9, 401.0], [70.0, 401.0], [70.1, 409.0], [70.2, 409.0], [70.3, 409.0], [70.4, 409.0], [70.5, 409.0], [70.6, 410.0], [70.7, 410.0], [70.8, 410.0], [70.9, 410.0], [71.0, 410.0], [71.1, 415.0], [71.2, 415.0], [71.3, 415.0], [71.4, 415.0], [71.5, 415.0], [71.6, 415.0], [71.7, 415.0], [71.8, 415.0], [71.9, 415.0], [72.0, 415.0], [72.1, 418.0], [72.2, 418.0], [72.3, 418.0], [72.4, 418.0], [72.5, 418.0], [72.6, 423.0], [72.7, 423.0], [72.8, 423.0], [72.9, 423.0], [73.0, 423.0], [73.1, 424.0], [73.2, 424.0], [73.3, 424.0], [73.4, 424.0], [73.5, 424.0], [73.6, 426.0], [73.7, 426.0], [73.8, 426.0], [73.9, 426.0], [74.0, 426.0], [74.1, 427.0], [74.2, 427.0], [74.3, 427.0], [74.4, 427.0], [74.5, 427.0], [74.6, 428.0], [74.7, 428.0], [74.8, 428.0], [74.9, 428.0], [75.0, 434.0], [75.1, 434.0], [75.2, 434.0], [75.3, 434.0], [75.4, 434.0], [75.5, 434.0], [75.6, 434.0], [75.7, 434.0], [75.8, 434.0], [75.9, 434.0], [76.0, 435.0], [76.1, 435.0], [76.2, 435.0], [76.3, 435.0], [76.4, 435.0], [76.5, 437.0], [76.6, 437.0], [76.7, 437.0], [76.8, 437.0], [76.9, 437.0], [77.0, 439.0], [77.1, 439.0], [77.2, 439.0], [77.3, 439.0], [77.4, 439.0], [77.5, 439.0], [77.6, 439.0], [77.7, 439.0], [77.8, 439.0], [77.9, 439.0], [78.0, 444.0], [78.1, 444.0], [78.2, 444.0], [78.3, 444.0], [78.4, 444.0], [78.5, 444.0], [78.6, 444.0], [78.7, 444.0], [78.8, 444.0], [78.9, 444.0], [79.0, 447.0], [79.1, 447.0], [79.2, 447.0], [79.3, 447.0], [79.4, 447.0], [79.5, 453.0], [79.6, 453.0], [79.7, 453.0], [79.8, 453.0], [79.9, 453.0], [80.0, 458.0], [80.1, 458.0], [80.2, 458.0], [80.3, 458.0], [80.4, 463.0], [80.5, 463.0], [80.6, 463.0], [80.7, 463.0], [80.8, 463.0], [80.9, 468.0], [81.0, 468.0], [81.1, 468.0], [81.2, 468.0], [81.3, 468.0], [81.4, 473.0], [81.5, 473.0], [81.6, 473.0], [81.7, 473.0], [81.8, 473.0], [81.9, 475.0], [82.0, 475.0], [82.1, 475.0], [82.2, 475.0], [82.3, 475.0], [82.4, 476.0], [82.5, 476.0], [82.6, 476.0], [82.7, 476.0], [82.8, 476.0], [82.9, 484.0], [83.0, 484.0], [83.1, 484.0], [83.2, 484.0], [83.3, 484.0], [83.4, 486.0], [83.5, 486.0], [83.6, 486.0], [83.7, 486.0], [83.8, 486.0], [83.9, 489.0], [84.0, 489.0], [84.1, 489.0], [84.2, 489.0], [84.3, 489.0], [84.4, 490.0], [84.5, 490.0], [84.6, 490.0], [84.7, 490.0], [84.8, 490.0], [84.9, 492.0], [85.0, 492.0], [85.1, 492.0], [85.2, 492.0], [85.3, 495.0], [85.4, 495.0], [85.5, 495.0], [85.6, 495.0], [85.7, 495.0], [85.8, 497.0], [85.9, 497.0], [86.0, 497.0], [86.1, 497.0], [86.2, 497.0], [86.3, 503.0], [86.4, 503.0], [86.5, 503.0], [86.6, 503.0], [86.7, 503.0], [86.8, 515.0], [86.9, 515.0], [87.0, 515.0], [87.1, 515.0], [87.2, 515.0], [87.3, 533.0], [87.4, 533.0], [87.5, 533.0], [87.6, 533.0], [87.7, 533.0], [87.8, 536.0], [87.9, 536.0], [88.0, 536.0], [88.1, 536.0], [88.2, 536.0], [88.3, 541.0], [88.4, 541.0], [88.5, 541.0], [88.6, 541.0], [88.7, 541.0], [88.8, 546.0], [88.9, 546.0], [89.0, 546.0], [89.1, 546.0], [89.2, 546.0], [89.3, 548.0], [89.4, 548.0], [89.5, 548.0], [89.6, 548.0], [89.7, 548.0], [89.8, 565.0], [89.9, 565.0], [90.0, 565.0], [90.1, 565.0], [90.2, 568.0], [90.3, 568.0], [90.4, 568.0], [90.5, 568.0], [90.6, 568.0], [90.7, 572.0], [90.8, 572.0], [90.9, 572.0], [91.0, 572.0], [91.1, 572.0], [91.2, 576.0], [91.3, 576.0], [91.4, 576.0], [91.5, 576.0], [91.6, 576.0], [91.7, 581.0], [91.8, 581.0], [91.9, 581.0], [92.0, 581.0], [92.1, 581.0], [92.2, 582.0], [92.3, 582.0], [92.4, 582.0], [92.5, 582.0], [92.6, 582.0], [92.7, 591.0], [92.8, 591.0], [92.9, 591.0], [93.0, 591.0], [93.1, 591.0], [93.2, 604.0], [93.3, 604.0], [93.4, 604.0], [93.5, 604.0], [93.6, 604.0], [93.7, 617.0], [93.8, 617.0], [93.9, 617.0], [94.0, 617.0], [94.1, 617.0], [94.2, 628.0], [94.3, 628.0], [94.4, 628.0], [94.5, 628.0], [94.6, 628.0], [94.7, 632.0], [94.8, 632.0], [94.9, 632.0], [95.0, 632.0], [95.1, 670.0], [95.2, 670.0], [95.3, 670.0], [95.4, 670.0], [95.5, 670.0], [95.6, 690.0], [95.7, 690.0], [95.8, 690.0], [95.9, 690.0], [96.0, 690.0], [96.1, 698.0], [96.2, 698.0], [96.3, 698.0], [96.4, 698.0], [96.5, 698.0], [96.6, 722.0], [96.7, 722.0], [96.8, 722.0], [96.9, 722.0], [97.0, 722.0], [97.1, 743.0], [97.2, 743.0], [97.3, 743.0], [97.4, 743.0], [97.5, 743.0], [97.6, 866.0], [97.7, 866.0], [97.8, 866.0], [97.9, 866.0], [98.0, 866.0], [98.1, 883.0], [98.2, 883.0], [98.3, 883.0], [98.4, 883.0], [98.5, 883.0], [98.6, 901.0], [98.7, 901.0], [98.8, 901.0], [98.9, 901.0], [99.0, 901.0], [99.1, 923.0], [99.2, 923.0], [99.3, 923.0], [99.4, 923.0], [99.5, 923.0], [99.6, 1219.0], [99.7, 1219.0], [99.8, 1219.0], [99.9, 1219.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[0.0, 627.0], [0.1, 627.0], [0.2, 627.0], [0.3, 627.0], [0.4, 637.0], [0.5, 637.0], [0.6, 637.0], [0.7, 638.0], [0.8, 638.0], [0.9, 638.0], [1.0, 644.0], [1.1, 644.0], [1.2, 644.0], [1.3, 644.0], [1.4, 657.0], [1.5, 657.0], [1.6, 657.0], [1.7, 658.0], [1.8, 658.0], [1.9, 658.0], [2.0, 664.0], [2.1, 664.0], [2.2, 664.0], [2.3, 664.0], [2.4, 668.0], [2.5, 668.0], [2.6, 668.0], [2.7, 671.0], [2.8, 671.0], [2.9, 671.0], [3.0, 673.0], [3.1, 673.0], [3.2, 673.0], [3.3, 673.0], [3.4, 674.0], [3.5, 674.0], [3.6, 674.0], [3.7, 682.0], [3.8, 682.0], [3.9, 682.0], [4.0, 688.0], [4.1, 688.0], [4.2, 688.0], [4.3, 688.0], [4.4, 689.0], [4.5, 689.0], [4.6, 689.0], [4.7, 690.0], [4.8, 690.0], [4.9, 690.0], [5.0, 691.0], [5.1, 691.0], [5.2, 691.0], [5.3, 691.0], [5.4, 692.0], [5.5, 692.0], [5.6, 692.0], [5.7, 693.0], [5.8, 693.0], [5.9, 693.0], [6.0, 696.0], [6.1, 696.0], [6.2, 696.0], [6.3, 696.0], [6.4, 698.0], [6.5, 698.0], [6.6, 698.0], [6.7, 698.0], [6.8, 698.0], [6.9, 698.0], [7.0, 698.0], [7.1, 698.0], [7.2, 698.0], [7.3, 698.0], [7.4, 700.0], [7.5, 700.0], [7.6, 700.0], [7.7, 700.0], [7.8, 700.0], [7.9, 700.0], [8.0, 701.0], [8.1, 701.0], [8.2, 701.0], [8.3, 701.0], [8.4, 702.0], [8.5, 702.0], [8.6, 702.0], [8.7, 703.0], [8.8, 703.0], [8.9, 703.0], [9.0, 704.0], [9.1, 704.0], [9.2, 704.0], [9.3, 704.0], [9.4, 704.0], [9.5, 704.0], [9.6, 704.0], [9.7, 704.0], [9.8, 704.0], [9.9, 704.0], [10.0, 704.0], [10.1, 704.0], [10.2, 704.0], [10.3, 704.0], [10.4, 705.0], [10.5, 705.0], [10.6, 705.0], [10.7, 710.0], [10.8, 710.0], [10.9, 710.0], [11.0, 710.0], [11.1, 711.0], [11.2, 711.0], [11.3, 711.0], [11.4, 712.0], [11.5, 712.0], [11.6, 712.0], [11.7, 715.0], [11.8, 715.0], [11.9, 715.0], [12.0, 715.0], [12.1, 717.0], [12.2, 717.0], [12.3, 717.0], [12.4, 718.0], [12.5, 718.0], [12.6, 718.0], [12.7, 719.0], [12.8, 719.0], [12.9, 719.0], [13.0, 719.0], [13.1, 722.0], [13.2, 722.0], [13.3, 722.0], [13.4, 722.0], [13.5, 722.0], [13.6, 722.0], [13.7, 723.0], [13.8, 723.0], [13.9, 723.0], [14.0, 723.0], [14.1, 724.0], [14.2, 724.0], [14.3, 724.0], [14.4, 724.0], [14.5, 724.0], [14.6, 724.0], [14.7, 724.0], [14.8, 724.0], [14.9, 724.0], [15.0, 724.0], [15.1, 728.0], [15.2, 728.0], [15.3, 728.0], [15.4, 728.0], [15.5, 728.0], [15.6, 728.0], [15.7, 728.0], [15.8, 728.0], [15.9, 728.0], [16.0, 728.0], [16.1, 731.0], [16.2, 731.0], [16.3, 731.0], [16.4, 732.0], [16.5, 732.0], [16.6, 732.0], [16.7, 734.0], [16.8, 734.0], [16.9, 734.0], [17.0, 734.0], [17.1, 734.0], [17.2, 734.0], [17.3, 734.0], [17.4, 736.0], [17.5, 736.0], [17.6, 736.0], [17.7, 737.0], [17.8, 737.0], [17.9, 737.0], [18.0, 737.0], [18.1, 737.0], [18.2, 737.0], [18.3, 737.0], [18.4, 741.0], [18.5, 741.0], [18.6, 741.0], [18.7, 742.0], [18.8, 742.0], [18.9, 742.0], [19.0, 742.0], [19.1, 743.0], [19.2, 743.0], [19.3, 743.0], [19.4, 743.0], [19.5, 743.0], [19.6, 743.0], [19.7, 744.0], [19.8, 744.0], [19.9, 744.0], [20.0, 744.0], [20.1, 745.0], [20.2, 745.0], [20.3, 745.0], [20.4, 746.0], [20.5, 746.0], [20.6, 746.0], [20.7, 749.0], [20.8, 749.0], [20.9, 749.0], [21.0, 749.0], [21.1, 749.0], [21.2, 749.0], [21.3, 749.0], [21.4, 751.0], [21.5, 751.0], [21.6, 751.0], [21.7, 752.0], [21.8, 752.0], [21.9, 752.0], [22.0, 752.0], [22.1, 752.0], [22.2, 752.0], [22.3, 752.0], [22.4, 755.0], [22.5, 755.0], [22.6, 755.0], [22.7, 756.0], [22.8, 756.0], [22.9, 756.0], [23.0, 756.0], [23.1, 756.0], [23.2, 756.0], [23.3, 756.0], [23.4, 757.0], [23.5, 757.0], [23.6, 757.0], [23.7, 760.0], [23.8, 760.0], [23.9, 760.0], [24.0, 763.0], [24.1, 763.0], [24.2, 763.0], [24.3, 763.0], [24.4, 763.0], [24.5, 763.0], [24.6, 763.0], [24.7, 763.0], [24.8, 763.0], [24.9, 763.0], [25.0, 764.0], [25.1, 764.0], [25.2, 764.0], [25.3, 764.0], [25.4, 767.0], [25.5, 767.0], [25.6, 767.0], [25.7, 771.0], [25.8, 771.0], [25.9, 771.0], [26.0, 772.0], [26.1, 772.0], [26.2, 772.0], [26.3, 772.0], [26.4, 772.0], [26.5, 772.0], [26.6, 772.0], [26.7, 774.0], [26.8, 774.0], [26.9, 774.0], [27.0, 775.0], [27.1, 775.0], [27.2, 775.0], [27.3, 775.0], [27.4, 778.0], [27.5, 778.0], [27.6, 778.0], [27.7, 779.0], [27.8, 779.0], [27.9, 779.0], [28.0, 786.0], [28.1, 786.0], [28.2, 786.0], [28.3, 786.0], [28.4, 787.0], [28.5, 787.0], [28.6, 787.0], [28.7, 791.0], [28.8, 791.0], [28.9, 791.0], [29.0, 791.0], [29.1, 791.0], [29.2, 791.0], [29.3, 791.0], [29.4, 792.0], [29.5, 792.0], [29.6, 792.0], [29.7, 794.0], [29.8, 794.0], [29.9, 794.0], [30.0, 802.0], [30.1, 802.0], [30.2, 802.0], [30.3, 802.0], [30.4, 807.0], [30.5, 807.0], [30.6, 807.0], [30.7, 812.0], [30.8, 812.0], [30.9, 812.0], [31.0, 822.0], [31.1, 822.0], [31.2, 822.0], [31.3, 822.0], [31.4, 823.0], [31.5, 823.0], [31.6, 823.0], [31.7, 829.0], [31.8, 829.0], [31.9, 829.0], [32.0, 837.0], [32.1, 837.0], [32.2, 837.0], [32.3, 837.0], [32.4, 844.0], [32.5, 844.0], [32.6, 844.0], [32.7, 851.0], [32.8, 851.0], [32.9, 851.0], [33.0, 863.0], [33.1, 863.0], [33.2, 863.0], [33.3, 863.0], [33.4, 872.0], [33.5, 872.0], [33.6, 872.0], [33.7, 875.0], [33.8, 875.0], [33.9, 875.0], [34.0, 879.0], [34.1, 879.0], [34.2, 879.0], [34.3, 879.0], [34.4, 918.0], [34.5, 918.0], [34.6, 918.0], [34.7, 1639.0], [34.8, 1639.0], [34.9, 1639.0], [35.0, 1737.0], [35.1, 1737.0], [35.2, 1737.0], [35.3, 1737.0], [35.4, 1761.0], [35.5, 1761.0], [35.6, 1761.0], [35.7, 1781.0], [35.8, 1781.0], [35.9, 1781.0], [36.0, 1781.0], [36.1, 1789.0], [36.2, 1789.0], [36.3, 1789.0], [36.4, 1789.0], [36.5, 1789.0], [36.6, 1789.0], [36.7, 1799.0], [36.8, 1799.0], [36.9, 1799.0], [37.0, 1799.0], [37.1, 1800.0], [37.2, 1800.0], [37.3, 1800.0], [37.4, 1834.0], [37.5, 1834.0], [37.6, 1834.0], [37.7, 1840.0], [37.8, 1840.0], [37.9, 1840.0], [38.0, 1840.0], [38.1, 1842.0], [38.2, 1842.0], [38.3, 1842.0], [38.4, 1852.0], [38.5, 1852.0], [38.6, 1852.0], [38.7, 1872.0], [38.8, 1872.0], [38.9, 1872.0], [39.0, 1872.0], [39.1, 1878.0], [39.2, 1878.0], [39.3, 1878.0], [39.4, 1880.0], [39.5, 1880.0], [39.6, 1880.0], [39.7, 1900.0], [39.8, 1900.0], [39.9, 1900.0], [40.0, 1900.0], [40.1, 1908.0], [40.2, 1908.0], [40.3, 1908.0], [40.4, 1923.0], [40.5, 1923.0], [40.6, 1923.0], [40.7, 1924.0], [40.8, 1924.0], [40.9, 1924.0], [41.0, 1924.0], [41.1, 1934.0], [41.2, 1934.0], [41.3, 1934.0], [41.4, 1936.0], [41.5, 1936.0], [41.6, 1936.0], [41.7, 1943.0], [41.8, 1943.0], [41.9, 1943.0], [42.0, 1943.0], [42.1, 1950.0], [42.2, 1950.0], [42.3, 1950.0], [42.4, 1951.0], [42.5, 1951.0], [42.6, 1951.0], [42.7, 1954.0], [42.8, 1954.0], [42.9, 1954.0], [43.0, 1954.0], [43.1, 1962.0], [43.2, 1962.0], [43.3, 1962.0], [43.4, 1972.0], [43.5, 1972.0], [43.6, 1972.0], [43.7, 1992.0], [43.8, 1992.0], [43.9, 1992.0], [44.0, 1992.0], [44.1, 2001.0], [44.2, 2001.0], [44.3, 2001.0], [44.4, 2021.0], [44.5, 2021.0], [44.6, 2021.0], [44.7, 2038.0], [44.8, 2038.0], [44.9, 2038.0], [45.0, 2038.0], [45.1, 2048.0], [45.2, 2048.0], [45.3, 2048.0], [45.4, 2095.0], [45.5, 2095.0], [45.6, 2095.0], [45.7, 2134.0], [45.8, 2134.0], [45.9, 2134.0], [46.0, 2134.0], [46.1, 2172.0], [46.2, 2172.0], [46.3, 2172.0], [46.4, 2188.0], [46.5, 2188.0], [46.6, 2188.0], [46.7, 2229.0], [46.8, 2229.0], [46.9, 2229.0], [47.0, 2229.0], [47.1, 2275.0], [47.2, 2275.0], [47.3, 2275.0], [47.4, 2279.0], [47.5, 2279.0], [47.6, 2279.0], [47.7, 2302.0], [47.8, 2302.0], [47.9, 2302.0], [48.0, 2302.0], [48.1, 2314.0], [48.2, 2314.0], [48.3, 2314.0], [48.4, 2338.0], [48.5, 2338.0], [48.6, 2338.0], [48.7, 2344.0], [48.8, 2344.0], [48.9, 2344.0], [49.0, 2344.0], [49.1, 2367.0], [49.2, 2367.0], [49.3, 2367.0], [49.4, 2379.0], [49.5, 2379.0], [49.6, 2379.0], [49.7, 2383.0], [49.8, 2383.0], [49.9, 2383.0], [50.0, 2383.0], [50.1, 2406.0], [50.2, 2406.0], [50.3, 2406.0], [50.4, 2449.0], [50.5, 2449.0], [50.6, 2449.0], [50.7, 2688.0], [50.8, 2688.0], [50.9, 2688.0], [51.0, 2688.0], [51.1, 2699.0], [51.2, 2699.0], [51.3, 2699.0], [51.4, 2869.0], [51.5, 2869.0], [51.6, 2869.0], [51.7, 2885.0], [51.8, 2885.0], [51.9, 2885.0], [52.0, 2885.0], [52.1, 2936.0], [52.2, 2936.0], [52.3, 2936.0], [52.4, 3048.0], [52.5, 3048.0], [52.6, 3048.0], [52.7, 3059.0], [52.8, 3059.0], [52.9, 3059.0], [53.0, 3059.0], [53.1, 3127.0], [53.2, 3127.0], [53.3, 3127.0], [53.4, 3165.0], [53.5, 3165.0], [53.6, 3165.0], [53.7, 3166.0], [53.8, 3166.0], [53.9, 3166.0], [54.0, 3166.0], [54.1, 3204.0], [54.2, 3204.0], [54.3, 3204.0], [54.4, 3227.0], [54.5, 3227.0], [54.6, 3227.0], [54.7, 3234.0], [54.8, 3234.0], [54.9, 3234.0], [55.0, 3234.0], [55.1, 3235.0], [55.2, 3235.0], [55.3, 3235.0], [55.4, 3236.0], [55.5, 3236.0], [55.6, 3236.0], [55.7, 3296.0], [55.8, 3296.0], [55.9, 3296.0], [56.0, 3296.0], [56.1, 3326.0], [56.2, 3326.0], [56.3, 3326.0], [56.4, 3333.0], [56.5, 3333.0], [56.6, 3333.0], [56.7, 3344.0], [56.8, 3344.0], [56.9, 3344.0], [57.0, 3344.0], [57.1, 3345.0], [57.2, 3345.0], [57.3, 3345.0], [57.4, 3366.0], [57.5, 3366.0], [57.6, 3366.0], [57.7, 3385.0], [57.8, 3385.0], [57.9, 3385.0], [58.0, 3385.0], [58.1, 3390.0], [58.2, 3390.0], [58.3, 3390.0], [58.4, 3479.0], [58.5, 3479.0], [58.6, 3479.0], [58.7, 3483.0], [58.8, 3483.0], [58.9, 3483.0], [59.0, 3483.0], [59.1, 3579.0], [59.2, 3579.0], [59.3, 3579.0], [59.4, 3654.0], [59.5, 3654.0], [59.6, 3654.0], [59.7, 3665.0], [59.8, 3665.0], [59.9, 3665.0], [60.0, 3665.0], [60.1, 3692.0], [60.2, 3692.0], [60.3, 3692.0], [60.4, 3715.0], [60.5, 3715.0], [60.6, 3715.0], [60.7, 3734.0], [60.8, 3734.0], [60.9, 3734.0], [61.0, 3734.0], [61.1, 3778.0], [61.2, 3778.0], [61.3, 3778.0], [61.4, 3792.0], [61.5, 3792.0], [61.6, 3792.0], [61.7, 3798.0], [61.8, 3798.0], [61.9, 3798.0], [62.0, 3798.0], [62.1, 3901.0], [62.2, 3901.0], [62.3, 3901.0], [62.4, 4031.0], [62.5, 4031.0], [62.6, 4031.0], [62.7, 4047.0], [62.8, 4047.0], [62.9, 4047.0], [63.0, 4047.0], [63.1, 4065.0], [63.2, 4065.0], [63.3, 4065.0], [63.4, 4087.0], [63.5, 4087.0], [63.6, 4087.0], [63.7, 4117.0], [63.8, 4117.0], [63.9, 4117.0], [64.0, 4117.0], [64.1, 4200.0], [64.2, 4200.0], [64.3, 4200.0], [64.4, 4270.0], [64.5, 4270.0], [64.6, 4270.0], [64.7, 4688.0], [64.8, 4688.0], [64.9, 4688.0], [65.0, 4688.0], [65.1, 5364.0], [65.2, 5364.0], [65.3, 5364.0], [65.4, 5543.0], [65.5, 5543.0], [65.6, 5543.0], [65.7, 5562.0], [65.8, 5562.0], [65.9, 5562.0], [66.0, 5562.0], [66.1, 5661.0], [66.2, 5661.0], [66.3, 5661.0], [66.4, 5761.0], [66.5, 5761.0], [66.6, 5761.0], [66.7, 5762.0], [66.8, 5762.0], [66.9, 5762.0], [67.0, 5762.0], [67.1, 5764.0], [67.2, 5764.0], [67.3, 5764.0], [67.4, 5764.0], [67.5, 5764.0], [67.6, 5764.0], [67.7, 5770.0], [67.8, 5770.0], [67.9, 5770.0], [68.0, 5770.0], [68.1, 5785.0], [68.2, 5785.0], [68.3, 5785.0], [68.4, 5803.0], [68.5, 5803.0], [68.6, 5803.0], [68.7, 5808.0], [68.8, 5808.0], [68.9, 5808.0], [69.0, 5808.0], [69.1, 5822.0], [69.2, 5822.0], [69.3, 5822.0], [69.4, 5831.0], [69.5, 5831.0], [69.6, 5831.0], [69.7, 5837.0], [69.8, 5837.0], [69.9, 5837.0], [70.0, 5837.0], [70.1, 5837.0], [70.2, 5837.0], [70.3, 5837.0], [70.4, 5838.0], [70.5, 5838.0], [70.6, 5838.0], [70.7, 5841.0], [70.8, 5841.0], [70.9, 5841.0], [71.0, 5841.0], [71.1, 5848.0], [71.2, 5848.0], [71.3, 5848.0], [71.4, 5854.0], [71.5, 5854.0], [71.6, 5854.0], [71.7, 5857.0], [71.8, 5857.0], [71.9, 5857.0], [72.0, 5857.0], [72.1, 5859.0], [72.2, 5859.0], [72.3, 5859.0], [72.4, 5862.0], [72.5, 5862.0], [72.6, 5862.0], [72.7, 5874.0], [72.8, 5874.0], [72.9, 5874.0], [73.0, 5874.0], [73.1, 5882.0], [73.2, 5882.0], [73.3, 5882.0], [73.4, 5897.0], [73.5, 5897.0], [73.6, 5897.0], [73.7, 5905.0], [73.8, 5905.0], [73.9, 5905.0], [74.0, 5905.0], [74.1, 5928.0], [74.2, 5928.0], [74.3, 5928.0], [74.4, 5946.0], [74.5, 5946.0], [74.6, 5946.0], [74.7, 5958.0], [74.8, 5958.0], [74.9, 5958.0], [75.0, 5958.0], [75.1, 5962.0], [75.2, 5962.0], [75.3, 5962.0], [75.4, 5970.0], [75.5, 5970.0], [75.6, 5970.0], [75.7, 5993.0], [75.8, 5993.0], [75.9, 5993.0], [76.0, 5993.0], [76.1, 6000.0], [76.2, 6000.0], [76.3, 6000.0], [76.4, 6008.0], [76.5, 6008.0], [76.6, 6008.0], [76.7, 6011.0], [76.8, 6011.0], [76.9, 6011.0], [77.0, 6011.0], [77.1, 6023.0], [77.2, 6023.0], [77.3, 6023.0], [77.4, 6032.0], [77.5, 6032.0], [77.6, 6032.0], [77.7, 6038.0], [77.8, 6038.0], [77.9, 6038.0], [78.0, 6038.0], [78.1, 6052.0], [78.2, 6052.0], [78.3, 6052.0], [78.4, 6052.0], [78.5, 6052.0], [78.6, 6052.0], [78.7, 6055.0], [78.8, 6055.0], [78.9, 6055.0], [79.0, 6055.0], [79.1, 6057.0], [79.2, 6057.0], [79.3, 6057.0], [79.4, 6062.0], [79.5, 6062.0], [79.6, 6062.0], [79.7, 6065.0], [79.8, 6065.0], [79.9, 6065.0], [80.0, 6065.0], [80.1, 6069.0], [80.2, 6069.0], [80.3, 6069.0], [80.4, 6076.0], [80.5, 6076.0], [80.6, 6076.0], [80.7, 6086.0], [80.8, 6086.0], [80.9, 6086.0], [81.0, 6092.0], [81.1, 6092.0], [81.2, 6092.0], [81.3, 6092.0], [81.4, 6099.0], [81.5, 6099.0], [81.6, 6099.0], [81.7, 6101.0], [81.8, 6101.0], [81.9, 6101.0], [82.0, 6110.0], [82.1, 6110.0], [82.2, 6110.0], [82.3, 6110.0], [82.4, 6112.0], [82.5, 6112.0], [82.6, 6112.0], [82.7, 6128.0], [82.8, 6128.0], [82.9, 6128.0], [83.0, 6137.0], [83.1, 6137.0], [83.2, 6137.0], [83.3, 6137.0], [83.4, 6140.0], [83.5, 6140.0], [83.6, 6140.0], [83.7, 6146.0], [83.8, 6146.0], [83.9, 6146.0], [84.0, 6156.0], [84.1, 6156.0], [84.2, 6156.0], [84.3, 6156.0], [84.4, 6179.0], [84.5, 6179.0], [84.6, 6179.0], [84.7, 6334.0], [84.8, 6334.0], [84.9, 6334.0], [85.0, 6394.0], [85.1, 6394.0], [85.2, 6394.0], [85.3, 6394.0], [85.4, 6438.0], [85.5, 6438.0], [85.6, 6438.0], [85.7, 7360.0], [85.8, 7360.0], [85.9, 7360.0], [86.0, 8485.0], [86.1, 8485.0], [86.2, 8485.0], [86.3, 8485.0], [86.4, 8498.0], [86.5, 8498.0], [86.6, 8498.0], [86.7, 8701.0], [86.8, 8701.0], [86.9, 8701.0], [87.0, 9613.0], [87.1, 9613.0], [87.2, 9613.0], [87.3, 9613.0], [87.4, 10061.0], [87.5, 10061.0], [87.6, 10061.0], [87.7, 10145.0], [87.8, 10145.0], [87.9, 10145.0], [88.0, 10152.0], [88.1, 10152.0], [88.2, 10152.0], [88.3, 10152.0], [88.4, 10153.0], [88.5, 10153.0], [88.6, 10153.0], [88.7, 10154.0], [88.8, 10154.0], [88.9, 10154.0], [89.0, 10154.0], [89.1, 10154.0], [89.2, 10154.0], [89.3, 10154.0], [89.4, 10156.0], [89.5, 10156.0], [89.6, 10156.0], [89.7, 10158.0], [89.8, 10158.0], [89.9, 10158.0], [90.0, 10158.0], [90.1, 10158.0], [90.2, 10158.0], [90.3, 10158.0], [90.4, 10158.0], [90.5, 10158.0], [90.6, 10158.0], [90.7, 10159.0], [90.8, 10159.0], [90.9, 10159.0], [91.0, 10160.0], [91.1, 10160.0], [91.2, 10160.0], [91.3, 10160.0], [91.4, 10160.0], [91.5, 10160.0], [91.6, 10160.0], [91.7, 10161.0], [91.8, 10161.0], [91.9, 10161.0], [92.0, 10162.0], [92.1, 10162.0], [92.2, 10162.0], [92.3, 10162.0], [92.4, 10162.0], [92.5, 10162.0], [92.6, 10162.0], [92.7, 10162.0], [92.8, 10162.0], [92.9, 10162.0], [93.0, 10165.0], [93.1, 10165.0], [93.2, 10165.0], [93.3, 10165.0], [93.4, 10166.0], [93.5, 10166.0], [93.6, 10166.0], [93.7, 10167.0], [93.8, 10167.0], [93.9, 10167.0], [94.0, 10167.0], [94.1, 10167.0], [94.2, 10167.0], [94.3, 10167.0], [94.4, 10168.0], [94.5, 10168.0], [94.6, 10168.0], [94.7, 10169.0], [94.8, 10169.0], [94.9, 10169.0], [95.0, 10169.0], [95.1, 10169.0], [95.2, 10169.0], [95.3, 10169.0], [95.4, 10170.0], [95.5, 10170.0], [95.6, 10170.0], [95.7, 10170.0], [95.8, 10170.0], [95.9, 10170.0], [96.0, 10170.0], [96.1, 10170.0], [96.2, 10170.0], [96.3, 10170.0], [96.4, 10170.0], [96.5, 10170.0], [96.6, 10170.0], [96.7, 10171.0], [96.8, 10171.0], [96.9, 10171.0], [97.0, 10171.0], [97.1, 10171.0], [97.2, 10171.0], [97.3, 10171.0], [97.4, 10171.0], [97.5, 10171.0], [97.6, 10171.0], [97.7, 10173.0], [97.8, 10173.0], [97.9, 10173.0], [98.0, 10175.0], [98.1, 10175.0], [98.2, 10175.0], [98.3, 10175.0], [98.4, 10175.0], [98.5, 10175.0], [98.6, 10175.0], [98.7, 10175.0], [98.8, 10175.0], [98.9, 10175.0], [99.0, 10176.0], [99.1, 10176.0], [99.2, 10176.0], [99.3, 10176.0], [99.4, 10177.0], [99.5, 10177.0], [99.6, 10177.0], [99.7, 10178.0], [99.8, 10178.0], [99.9, 10178.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[0.0, 1139.0], [0.1, 1139.0], [0.2, 1139.0], [0.3, 1139.0], [0.4, 1139.0], [0.5, 1149.0], [0.6, 1149.0], [0.7, 1149.0], [0.8, 1149.0], [0.9, 1149.0], [1.0, 1189.0], [1.1, 1189.0], [1.2, 1189.0], [1.3, 1189.0], [1.4, 1189.0], [1.5, 1194.0], [1.6, 1194.0], [1.7, 1194.0], [1.8, 1194.0], [1.9, 1194.0], [2.0, 1197.0], [2.1, 1197.0], [2.2, 1197.0], [2.3, 1197.0], [2.4, 1197.0], [2.5, 1202.0], [2.6, 1202.0], [2.7, 1202.0], [2.8, 1202.0], [2.9, 1202.0], [3.0, 1203.0], [3.1, 1203.0], [3.2, 1203.0], [3.3, 1203.0], [3.4, 1203.0], [3.5, 1209.0], [3.6, 1209.0], [3.7, 1209.0], [3.8, 1209.0], [3.9, 1209.0], [4.0, 1231.0], [4.1, 1231.0], [4.2, 1231.0], [4.3, 1231.0], [4.4, 1231.0], [4.5, 1239.0], [4.6, 1239.0], [4.7, 1239.0], [4.8, 1239.0], [4.9, 1239.0], [5.0, 1256.0], [5.1, 1256.0], [5.2, 1256.0], [5.3, 1256.0], [5.4, 1257.0], [5.5, 1257.0], [5.6, 1257.0], [5.7, 1257.0], [5.8, 1257.0], [5.9, 1261.0], [6.0, 1261.0], [6.1, 1261.0], [6.2, 1261.0], [6.3, 1261.0], [6.4, 1266.0], [6.5, 1266.0], [6.6, 1266.0], [6.7, 1266.0], [6.8, 1266.0], [6.9, 1267.0], [7.0, 1267.0], [7.1, 1267.0], [7.2, 1267.0], [7.3, 1267.0], [7.4, 1271.0], [7.5, 1271.0], [7.6, 1271.0], [7.7, 1271.0], [7.8, 1271.0], [7.9, 1271.0], [8.0, 1271.0], [8.1, 1271.0], [8.2, 1271.0], [8.3, 1271.0], [8.4, 1276.0], [8.5, 1276.0], [8.6, 1276.0], [8.7, 1276.0], [8.8, 1276.0], [8.9, 1278.0], [9.0, 1278.0], [9.1, 1278.0], [9.2, 1278.0], [9.3, 1278.0], [9.4, 1278.0], [9.5, 1278.0], [9.6, 1278.0], [9.7, 1278.0], [9.8, 1278.0], [9.9, 1280.0], [10.0, 1280.0], [10.1, 1280.0], [10.2, 1280.0], [10.3, 1280.0], [10.4, 1280.0], [10.5, 1280.0], [10.6, 1280.0], [10.7, 1280.0], [10.8, 1281.0], [10.9, 1281.0], [11.0, 1281.0], [11.1, 1281.0], [11.2, 1281.0], [11.3, 1281.0], [11.4, 1281.0], [11.5, 1281.0], [11.6, 1281.0], [11.7, 1281.0], [11.8, 1281.0], [11.9, 1281.0], [12.0, 1281.0], [12.1, 1281.0], [12.2, 1281.0], [12.3, 1283.0], [12.4, 1283.0], [12.5, 1283.0], [12.6, 1283.0], [12.7, 1283.0], [12.8, 1283.0], [12.9, 1283.0], [13.0, 1283.0], [13.1, 1283.0], [13.2, 1283.0], [13.3, 1286.0], [13.4, 1286.0], [13.5, 1286.0], [13.6, 1286.0], [13.7, 1286.0], [13.8, 1290.0], [13.9, 1290.0], [14.0, 1290.0], [14.1, 1290.0], [14.2, 1290.0], [14.3, 1290.0], [14.4, 1290.0], [14.5, 1290.0], [14.6, 1290.0], [14.7, 1290.0], [14.8, 1294.0], [14.9, 1294.0], [15.0, 1294.0], [15.1, 1294.0], [15.2, 1295.0], [15.3, 1295.0], [15.4, 1295.0], [15.5, 1295.0], [15.6, 1295.0], [15.7, 1298.0], [15.8, 1298.0], [15.9, 1298.0], [16.0, 1298.0], [16.1, 1298.0], [16.2, 1298.0], [16.3, 1298.0], [16.4, 1298.0], [16.5, 1298.0], [16.6, 1298.0], [16.7, 1300.0], [16.8, 1300.0], [16.9, 1300.0], [17.0, 1300.0], [17.1, 1300.0], [17.2, 1303.0], [17.3, 1303.0], [17.4, 1303.0], [17.5, 1303.0], [17.6, 1303.0], [17.7, 1304.0], [17.8, 1304.0], [17.9, 1304.0], [18.0, 1304.0], [18.1, 1304.0], [18.2, 1304.0], [18.3, 1304.0], [18.4, 1304.0], [18.5, 1304.0], [18.6, 1304.0], [18.7, 1307.0], [18.8, 1307.0], [18.9, 1307.0], [19.0, 1307.0], [19.1, 1307.0], [19.2, 1308.0], [19.3, 1308.0], [19.4, 1308.0], [19.5, 1308.0], [19.6, 1308.0], [19.7, 1309.0], [19.8, 1309.0], [19.9, 1309.0], [20.0, 1309.0], [20.1, 1310.0], [20.2, 1310.0], [20.3, 1310.0], [20.4, 1310.0], [20.5, 1310.0], [20.6, 1312.0], [20.7, 1312.0], [20.8, 1312.0], [20.9, 1312.0], [21.0, 1312.0], [21.1, 1314.0], [21.2, 1314.0], [21.3, 1314.0], [21.4, 1314.0], [21.5, 1314.0], [21.6, 1314.0], [21.7, 1314.0], [21.8, 1314.0], [21.9, 1314.0], [22.0, 1314.0], [22.1, 1315.0], [22.2, 1315.0], [22.3, 1315.0], [22.4, 1315.0], [22.5, 1315.0], [22.6, 1316.0], [22.7, 1316.0], [22.8, 1316.0], [22.9, 1316.0], [23.0, 1316.0], [23.1, 1317.0], [23.2, 1317.0], [23.3, 1317.0], [23.4, 1317.0], [23.5, 1317.0], [23.6, 1319.0], [23.7, 1319.0], [23.8, 1319.0], [23.9, 1319.0], [24.0, 1319.0], [24.1, 1320.0], [24.2, 1320.0], [24.3, 1320.0], [24.4, 1320.0], [24.5, 1320.0], [24.6, 1328.0], [24.7, 1328.0], [24.8, 1328.0], [24.9, 1328.0], [25.0, 1329.0], [25.1, 1329.0], [25.2, 1329.0], [25.3, 1329.0], [25.4, 1329.0], [25.5, 1330.0], [25.6, 1330.0], [25.7, 1330.0], [25.8, 1330.0], [25.9, 1330.0], [26.0, 1330.0], [26.1, 1330.0], [26.2, 1330.0], [26.3, 1330.0], [26.4, 1330.0], [26.5, 1331.0], [26.6, 1331.0], [26.7, 1331.0], [26.8, 1331.0], [26.9, 1331.0], [27.0, 1332.0], [27.1, 1332.0], [27.2, 1332.0], [27.3, 1332.0], [27.4, 1332.0], [27.5, 1332.0], [27.6, 1332.0], [27.7, 1332.0], [27.8, 1332.0], [27.9, 1332.0], [28.0, 1341.0], [28.1, 1341.0], [28.2, 1341.0], [28.3, 1341.0], [28.4, 1341.0], [28.5, 1341.0], [28.6, 1341.0], [28.7, 1341.0], [28.8, 1341.0], [28.9, 1341.0], [29.0, 1345.0], [29.1, 1345.0], [29.2, 1345.0], [29.3, 1345.0], [29.4, 1345.0], [29.5, 1350.0], [29.6, 1350.0], [29.7, 1350.0], [29.8, 1350.0], [29.9, 1350.0], [30.0, 1350.0], [30.1, 1350.0], [30.2, 1350.0], [30.3, 1350.0], [30.4, 1351.0], [30.5, 1351.0], [30.6, 1351.0], [30.7, 1351.0], [30.8, 1351.0], [30.9, 1351.0], [31.0, 1351.0], [31.1, 1351.0], [31.2, 1351.0], [31.3, 1351.0], [31.4, 1352.0], [31.5, 1352.0], [31.6, 1352.0], [31.7, 1352.0], [31.8, 1352.0], [31.9, 1354.0], [32.0, 1354.0], [32.1, 1354.0], [32.2, 1354.0], [32.3, 1354.0], [32.4, 1354.0], [32.5, 1354.0], [32.6, 1354.0], [32.7, 1354.0], [32.8, 1354.0], [32.9, 1358.0], [33.0, 1358.0], [33.1, 1358.0], [33.2, 1358.0], [33.3, 1358.0], [33.4, 1358.0], [33.5, 1358.0], [33.6, 1358.0], [33.7, 1358.0], [33.8, 1358.0], [33.9, 1364.0], [34.0, 1364.0], [34.1, 1364.0], [34.2, 1364.0], [34.3, 1364.0], [34.4, 1365.0], [34.5, 1365.0], [34.6, 1365.0], [34.7, 1365.0], [34.8, 1365.0], [34.9, 1370.0], [35.0, 1370.0], [35.1, 1370.0], [35.2, 1370.0], [35.3, 1371.0], [35.4, 1371.0], [35.5, 1371.0], [35.6, 1371.0], [35.7, 1371.0], [35.8, 1373.0], [35.9, 1373.0], [36.0, 1373.0], [36.1, 1373.0], [36.2, 1373.0], [36.3, 1377.0], [36.4, 1377.0], [36.5, 1377.0], [36.6, 1377.0], [36.7, 1377.0], [36.8, 1378.0], [36.9, 1378.0], [37.0, 1378.0], [37.1, 1378.0], [37.2, 1378.0], [37.3, 1384.0], [37.4, 1384.0], [37.5, 1384.0], [37.6, 1384.0], [37.7, 1384.0], [37.8, 1385.0], [37.9, 1385.0], [38.0, 1385.0], [38.1, 1385.0], [38.2, 1385.0], [38.3, 1385.0], [38.4, 1385.0], [38.5, 1385.0], [38.6, 1385.0], [38.7, 1385.0], [38.8, 1393.0], [38.9, 1393.0], [39.0, 1393.0], [39.1, 1393.0], [39.2, 1393.0], [39.3, 1394.0], [39.4, 1394.0], [39.5, 1394.0], [39.6, 1394.0], [39.7, 1394.0], [39.8, 1396.0], [39.9, 1396.0], [40.0, 1396.0], [40.1, 1396.0], [40.2, 1397.0], [40.3, 1397.0], [40.4, 1397.0], [40.5, 1397.0], [40.6, 1397.0], [40.7, 1397.0], [40.8, 1397.0], [40.9, 1397.0], [41.0, 1397.0], [41.1, 1397.0], [41.2, 1397.0], [41.3, 1397.0], [41.4, 1397.0], [41.5, 1397.0], [41.6, 1397.0], [41.7, 1400.0], [41.8, 1400.0], [41.9, 1400.0], [42.0, 1400.0], [42.1, 1400.0], [42.2, 1401.0], [42.3, 1401.0], [42.4, 1401.0], [42.5, 1401.0], [42.6, 1401.0], [42.7, 1407.0], [42.8, 1407.0], [42.9, 1407.0], [43.0, 1407.0], [43.1, 1407.0], [43.2, 1413.0], [43.3, 1413.0], [43.4, 1413.0], [43.5, 1413.0], [43.6, 1413.0], [43.7, 1419.0], [43.8, 1419.0], [43.9, 1419.0], [44.0, 1419.0], [44.1, 1419.0], [44.2, 1421.0], [44.3, 1421.0], [44.4, 1421.0], [44.5, 1421.0], [44.6, 1421.0], [44.7, 1425.0], [44.8, 1425.0], [44.9, 1425.0], [45.0, 1425.0], [45.1, 1435.0], [45.2, 1435.0], [45.3, 1435.0], [45.4, 1435.0], [45.5, 1435.0], [45.6, 1437.0], [45.7, 1437.0], [45.8, 1437.0], [45.9, 1437.0], [46.0, 1437.0], [46.1, 1442.0], [46.2, 1442.0], [46.3, 1442.0], [46.4, 1442.0], [46.5, 1442.0], [46.6, 1445.0], [46.7, 1445.0], [46.8, 1445.0], [46.9, 1445.0], [47.0, 1445.0], [47.1, 1454.0], [47.2, 1454.0], [47.3, 1454.0], [47.4, 1454.0], [47.5, 1454.0], [47.6, 1484.0], [47.7, 1484.0], [47.8, 1484.0], [47.9, 1484.0], [48.0, 1484.0], [48.1, 1509.0], [48.2, 1509.0], [48.3, 1509.0], [48.4, 1509.0], [48.5, 1509.0], [48.6, 1625.0], [48.7, 1625.0], [48.8, 1625.0], [48.9, 1625.0], [49.0, 1625.0], [49.1, 3403.0], [49.2, 3403.0], [49.3, 3403.0], [49.4, 3403.0], [49.5, 3403.0], [49.6, 3424.0], [49.7, 3424.0], [49.8, 3424.0], [49.9, 3424.0], [50.0, 3424.0], [50.1, 3523.0], [50.2, 3523.0], [50.3, 3523.0], [50.4, 3523.0], [50.5, 3555.0], [50.6, 3555.0], [50.7, 3555.0], [50.8, 3555.0], [50.9, 3555.0], [51.0, 3672.0], [51.1, 3672.0], [51.2, 3672.0], [51.3, 3672.0], [51.4, 3672.0], [51.5, 3963.0], [51.6, 3963.0], [51.7, 3963.0], [51.8, 3963.0], [51.9, 3963.0], [52.0, 4084.0], [52.1, 4084.0], [52.2, 4084.0], [52.3, 4084.0], [52.4, 4084.0], [52.5, 4324.0], [52.6, 4324.0], [52.7, 4324.0], [52.8, 4324.0], [52.9, 4324.0], [53.0, 4326.0], [53.1, 4326.0], [53.2, 4326.0], [53.3, 4326.0], [53.4, 4326.0], [53.5, 4459.0], [53.6, 4459.0], [53.7, 4459.0], [53.8, 4459.0], [53.9, 4459.0], [54.0, 4531.0], [54.1, 4531.0], [54.2, 4531.0], [54.3, 4531.0], [54.4, 4531.0], [54.5, 4558.0], [54.6, 4558.0], [54.7, 4558.0], [54.8, 4558.0], [54.9, 4558.0], [55.0, 4604.0], [55.1, 4604.0], [55.2, 4604.0], [55.3, 4604.0], [55.4, 4682.0], [55.5, 4682.0], [55.6, 4682.0], [55.7, 4682.0], [55.8, 4682.0], [55.9, 4693.0], [56.0, 4693.0], [56.1, 4693.0], [56.2, 4693.0], [56.3, 4693.0], [56.4, 4702.0], [56.5, 4702.0], [56.6, 4702.0], [56.7, 4702.0], [56.8, 4702.0], [56.9, 4715.0], [57.0, 4715.0], [57.1, 4715.0], [57.2, 4715.0], [57.3, 4715.0], [57.4, 4739.0], [57.5, 4739.0], [57.6, 4739.0], [57.7, 4739.0], [57.8, 4739.0], [57.9, 4749.0], [58.0, 4749.0], [58.1, 4749.0], [58.2, 4749.0], [58.3, 4749.0], [58.4, 4793.0], [58.5, 4793.0], [58.6, 4793.0], [58.7, 4793.0], [58.8, 4793.0], [58.9, 4888.0], [59.0, 4888.0], [59.1, 4888.0], [59.2, 4888.0], [59.3, 4888.0], [59.4, 4921.0], [59.5, 4921.0], [59.6, 4921.0], [59.7, 4921.0], [59.8, 4921.0], [59.9, 5035.0], [60.0, 5035.0], [60.1, 5035.0], [60.2, 5035.0], [60.3, 5185.0], [60.4, 5185.0], [60.5, 5185.0], [60.6, 5185.0], [60.7, 5185.0], [60.8, 5218.0], [60.9, 5218.0], [61.0, 5218.0], [61.1, 5218.0], [61.2, 5218.0], [61.3, 5232.0], [61.4, 5232.0], [61.5, 5232.0], [61.6, 5232.0], [61.7, 5232.0], [61.8, 5442.0], [61.9, 5442.0], [62.0, 5442.0], [62.1, 5442.0], [62.2, 5442.0], [62.3, 5526.0], [62.4, 5526.0], [62.5, 5526.0], [62.6, 5526.0], [62.7, 5526.0], [62.8, 5573.0], [62.9, 5573.0], [63.0, 5573.0], [63.1, 5573.0], [63.2, 5573.0], [63.3, 6018.0], [63.4, 6018.0], [63.5, 6018.0], [63.6, 6018.0], [63.7, 6018.0], [63.8, 6160.0], [63.9, 6160.0], [64.0, 6160.0], [64.1, 6160.0], [64.2, 6160.0], [64.3, 6220.0], [64.4, 6220.0], [64.5, 6220.0], [64.6, 6220.0], [64.7, 6220.0], [64.8, 6263.0], [64.9, 6263.0], [65.0, 6263.0], [65.1, 6263.0], [65.2, 6320.0], [65.3, 6320.0], [65.4, 6320.0], [65.5, 6320.0], [65.6, 6320.0], [65.7, 6333.0], [65.8, 6333.0], [65.9, 6333.0], [66.0, 6333.0], [66.1, 6333.0], [66.2, 6382.0], [66.3, 6382.0], [66.4, 6382.0], [66.5, 6382.0], [66.6, 6382.0], [66.7, 6397.0], [66.8, 6397.0], [66.9, 6397.0], [67.0, 6397.0], [67.1, 6397.0], [67.2, 6398.0], [67.3, 6398.0], [67.4, 6398.0], [67.5, 6398.0], [67.6, 6398.0], [67.7, 6404.0], [67.8, 6404.0], [67.9, 6404.0], [68.0, 6404.0], [68.1, 6404.0], [68.2, 6413.0], [68.3, 6413.0], [68.4, 6413.0], [68.5, 6413.0], [68.6, 6413.0], [68.7, 6419.0], [68.8, 6419.0], [68.9, 6419.0], [69.0, 6419.0], [69.1, 6419.0], [69.2, 6431.0], [69.3, 6431.0], [69.4, 6431.0], [69.5, 6431.0], [69.6, 6431.0], [69.7, 6438.0], [69.8, 6438.0], [69.9, 6438.0], [70.0, 6438.0], [70.1, 6468.0], [70.2, 6468.0], [70.3, 6468.0], [70.4, 6468.0], [70.5, 6468.0], [70.6, 6468.0], [70.7, 6468.0], [70.8, 6468.0], [70.9, 6468.0], [71.0, 6468.0], [71.1, 6530.0], [71.2, 6530.0], [71.3, 6530.0], [71.4, 6530.0], [71.5, 6530.0], [71.6, 6537.0], [71.7, 6537.0], [71.8, 6537.0], [71.9, 6537.0], [72.0, 6537.0], [72.1, 6545.0], [72.2, 6545.0], [72.3, 6545.0], [72.4, 6545.0], [72.5, 6545.0], [72.6, 6552.0], [72.7, 6552.0], [72.8, 6552.0], [72.9, 6552.0], [73.0, 6552.0], [73.1, 6571.0], [73.2, 6571.0], [73.3, 6571.0], [73.4, 6571.0], [73.5, 6571.0], [73.6, 6598.0], [73.7, 6598.0], [73.8, 6598.0], [73.9, 6598.0], [74.0, 6598.0], [74.1, 6659.0], [74.2, 6659.0], [74.3, 6659.0], [74.4, 6659.0], [74.5, 6659.0], [74.6, 6661.0], [74.7, 6661.0], [74.8, 6661.0], [74.9, 6661.0], [75.0, 6700.0], [75.1, 6700.0], [75.2, 6700.0], [75.3, 6700.0], [75.4, 6700.0], [75.5, 6753.0], [75.6, 6753.0], [75.7, 6753.0], [75.8, 6753.0], [75.9, 6753.0], [76.0, 6771.0], [76.1, 6771.0], [76.2, 6771.0], [76.3, 6771.0], [76.4, 6771.0], [76.5, 6791.0], [76.6, 6791.0], [76.7, 6791.0], [76.8, 6791.0], [76.9, 6791.0], [77.0, 6797.0], [77.1, 6797.0], [77.2, 6797.0], [77.3, 6797.0], [77.4, 6797.0], [77.5, 6798.0], [77.6, 6798.0], [77.7, 6798.0], [77.8, 6798.0], [77.9, 6798.0], [78.0, 6815.0], [78.1, 6815.0], [78.2, 6815.0], [78.3, 6815.0], [78.4, 6815.0], [78.5, 6826.0], [78.6, 6826.0], [78.7, 6826.0], [78.8, 6826.0], [78.9, 6826.0], [79.0, 6840.0], [79.1, 6840.0], [79.2, 6840.0], [79.3, 6840.0], [79.4, 6840.0], [79.5, 6842.0], [79.6, 6842.0], [79.7, 6842.0], [79.8, 6842.0], [79.9, 6842.0], [80.0, 6849.0], [80.1, 6849.0], [80.2, 6849.0], [80.3, 6849.0], [80.4, 6854.0], [80.5, 6854.0], [80.6, 6854.0], [80.7, 6854.0], [80.8, 6854.0], [80.9, 6866.0], [81.0, 6866.0], [81.1, 6866.0], [81.2, 6866.0], [81.3, 6866.0], [81.4, 6884.0], [81.5, 6884.0], [81.6, 6884.0], [81.7, 6884.0], [81.8, 6884.0], [81.9, 6899.0], [82.0, 6899.0], [82.1, 6899.0], [82.2, 6899.0], [82.3, 6899.0], [82.4, 6912.0], [82.5, 6912.0], [82.6, 6912.0], [82.7, 6912.0], [82.8, 6912.0], [82.9, 6922.0], [83.0, 6922.0], [83.1, 6922.0], [83.2, 6922.0], [83.3, 6922.0], [83.4, 6927.0], [83.5, 6927.0], [83.6, 6927.0], [83.7, 6927.0], [83.8, 6927.0], [83.9, 6928.0], [84.0, 6928.0], [84.1, 6928.0], [84.2, 6928.0], [84.3, 6928.0], [84.4, 6945.0], [84.5, 6945.0], [84.6, 6945.0], [84.7, 6945.0], [84.8, 6945.0], [84.9, 6959.0], [85.0, 6959.0], [85.1, 6959.0], [85.2, 6959.0], [85.3, 6961.0], [85.4, 6961.0], [85.5, 6961.0], [85.6, 6961.0], [85.7, 6961.0], [85.8, 6974.0], [85.9, 6974.0], [86.0, 6974.0], [86.1, 6974.0], [86.2, 6974.0], [86.3, 6991.0], [86.4, 6991.0], [86.5, 6991.0], [86.6, 6991.0], [86.7, 6991.0], [86.8, 6993.0], [86.9, 6993.0], [87.0, 6993.0], [87.1, 6993.0], [87.2, 6993.0], [87.3, 7054.0], [87.4, 7054.0], [87.5, 7054.0], [87.6, 7054.0], [87.7, 7054.0], [87.8, 7063.0], [87.9, 7063.0], [88.0, 7063.0], [88.1, 7063.0], [88.2, 7063.0], [88.3, 7084.0], [88.4, 7084.0], [88.5, 7084.0], [88.6, 7084.0], [88.7, 7084.0], [88.8, 7102.0], [88.9, 7102.0], [89.0, 7102.0], [89.1, 7102.0], [89.2, 7102.0], [89.3, 7107.0], [89.4, 7107.0], [89.5, 7107.0], [89.6, 7107.0], [89.7, 7107.0], [89.8, 7136.0], [89.9, 7136.0], [90.0, 7136.0], [90.1, 7136.0], [90.2, 7141.0], [90.3, 7141.0], [90.4, 7141.0], [90.5, 7141.0], [90.6, 7141.0], [90.7, 7165.0], [90.8, 7165.0], [90.9, 7165.0], [91.0, 7165.0], [91.1, 7165.0], [91.2, 7165.0], [91.3, 7165.0], [91.4, 7165.0], [91.5, 7165.0], [91.6, 7165.0], [91.7, 7212.0], [91.8, 7212.0], [91.9, 7212.0], [92.0, 7212.0], [92.1, 7212.0], [92.2, 7224.0], [92.3, 7224.0], [92.4, 7224.0], [92.5, 7224.0], [92.6, 7224.0], [92.7, 7248.0], [92.8, 7248.0], [92.9, 7248.0], [93.0, 7248.0], [93.1, 7248.0], [93.2, 7284.0], [93.3, 7284.0], [93.4, 7284.0], [93.5, 7284.0], [93.6, 7284.0], [93.7, 7293.0], [93.8, 7293.0], [93.9, 7293.0], [94.0, 7293.0], [94.1, 7293.0], [94.2, 7354.0], [94.3, 7354.0], [94.4, 7354.0], [94.5, 7354.0], [94.6, 7354.0], [94.7, 7549.0], [94.8, 7549.0], [94.9, 7549.0], [95.0, 7549.0], [95.1, 7561.0], [95.2, 7561.0], [95.3, 7561.0], [95.4, 7561.0], [95.5, 7561.0], [95.6, 7573.0], [95.7, 7573.0], [95.8, 7573.0], [95.9, 7573.0], [96.0, 7573.0], [96.1, 7786.0], [96.2, 7786.0], [96.3, 7786.0], [96.4, 7786.0], [96.5, 7786.0], [96.6, 8142.0], [96.7, 8142.0], [96.8, 8142.0], [96.9, 8142.0], [97.0, 8142.0], [97.1, 8156.0], [97.2, 8156.0], [97.3, 8156.0], [97.4, 8156.0], [97.5, 8156.0], [97.6, 8205.0], [97.7, 8205.0], [97.8, 8205.0], [97.9, 8205.0], [98.0, 8205.0], [98.1, 42530.0], [98.2, 42530.0], [98.3, 42530.0], [98.4, 42530.0], [98.5, 42530.0], [98.6, 42695.0], [98.7, 42695.0], [98.8, 42695.0], [98.9, 42695.0], [99.0, 42695.0], [99.1, 43321.0], [99.2, 43321.0], [99.3, 43321.0], [99.4, 43321.0], [99.5, 43321.0], [99.6, 43349.0], [99.7, 43349.0], [99.8, 43349.0], [99.9, 43349.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[0.0, 318.0], [0.1, 318.0], [0.2, 318.0], [0.3, 318.0], [0.4, 318.0], [0.5, 318.0], [0.6, 318.0], [0.7, 318.0], [0.8, 318.0], [0.9, 318.0], [1.0, 323.0], [1.1, 323.0], [1.2, 323.0], [1.3, 323.0], [1.4, 323.0], [1.5, 323.0], [1.6, 323.0], [1.7, 323.0], [1.8, 323.0], [1.9, 323.0], [2.0, 324.0], [2.1, 324.0], [2.2, 324.0], [2.3, 324.0], [2.4, 324.0], [2.5, 325.0], [2.6, 325.0], [2.7, 325.0], [2.8, 325.0], [2.9, 325.0], [3.0, 326.0], [3.1, 326.0], [3.2, 326.0], [3.3, 326.0], [3.4, 326.0], [3.5, 326.0], [3.6, 326.0], [3.7, 326.0], [3.8, 326.0], [3.9, 326.0], [4.0, 330.0], [4.1, 330.0], [4.2, 330.0], [4.3, 330.0], [4.4, 330.0], [4.5, 330.0], [4.6, 330.0], [4.7, 330.0], [4.8, 330.0], [4.9, 330.0], [5.0, 330.0], [5.1, 330.0], [5.2, 330.0], [5.3, 330.0], [5.4, 331.0], [5.5, 331.0], [5.6, 331.0], [5.7, 331.0], [5.8, 331.0], [5.9, 332.0], [6.0, 332.0], [6.1, 332.0], [6.2, 332.0], [6.3, 332.0], [6.4, 332.0], [6.5, 332.0], [6.6, 332.0], [6.7, 332.0], [6.8, 332.0], [6.9, 332.0], [7.0, 332.0], [7.1, 332.0], [7.2, 332.0], [7.3, 332.0], [7.4, 334.0], [7.5, 334.0], [7.6, 334.0], [7.7, 334.0], [7.8, 334.0], [7.9, 335.0], [8.0, 335.0], [8.1, 335.0], [8.2, 335.0], [8.3, 335.0], [8.4, 336.0], [8.5, 336.0], [8.6, 336.0], [8.7, 336.0], [8.8, 336.0], [8.9, 338.0], [9.0, 338.0], [9.1, 338.0], [9.2, 338.0], [9.3, 338.0], [9.4, 340.0], [9.5, 340.0], [9.6, 340.0], [9.7, 340.0], [9.8, 340.0], [9.9, 342.0], [10.0, 342.0], [10.1, 342.0], [10.2, 342.0], [10.3, 351.0], [10.4, 351.0], [10.5, 351.0], [10.6, 351.0], [10.7, 351.0], [10.8, 352.0], [10.9, 352.0], [11.0, 352.0], [11.1, 352.0], [11.2, 352.0], [11.3, 353.0], [11.4, 353.0], [11.5, 353.0], [11.6, 353.0], [11.7, 353.0], [11.8, 358.0], [11.9, 358.0], [12.0, 358.0], [12.1, 358.0], [12.2, 358.0], [12.3, 358.0], [12.4, 358.0], [12.5, 358.0], [12.6, 358.0], [12.7, 358.0], [12.8, 358.0], [12.9, 358.0], [13.0, 358.0], [13.1, 358.0], [13.2, 358.0], [13.3, 358.0], [13.4, 358.0], [13.5, 358.0], [13.6, 358.0], [13.7, 358.0], [13.8, 359.0], [13.9, 359.0], [14.0, 359.0], [14.1, 359.0], [14.2, 359.0], [14.3, 359.0], [14.4, 359.0], [14.5, 359.0], [14.6, 359.0], [14.7, 359.0], [14.8, 359.0], [14.9, 359.0], [15.0, 359.0], [15.1, 359.0], [15.2, 361.0], [15.3, 361.0], [15.4, 361.0], [15.5, 361.0], [15.6, 361.0], [15.7, 362.0], [15.8, 362.0], [15.9, 362.0], [16.0, 362.0], [16.1, 362.0], [16.2, 363.0], [16.3, 363.0], [16.4, 363.0], [16.5, 363.0], [16.6, 363.0], [16.7, 363.0], [16.8, 363.0], [16.9, 363.0], [17.0, 363.0], [17.1, 363.0], [17.2, 364.0], [17.3, 364.0], [17.4, 364.0], [17.5, 364.0], [17.6, 364.0], [17.7, 364.0], [17.8, 364.0], [17.9, 364.0], [18.0, 364.0], [18.1, 364.0], [18.2, 365.0], [18.3, 365.0], [18.4, 365.0], [18.5, 365.0], [18.6, 365.0], [18.7, 367.0], [18.8, 367.0], [18.9, 367.0], [19.0, 367.0], [19.1, 367.0], [19.2, 367.0], [19.3, 367.0], [19.4, 367.0], [19.5, 367.0], [19.6, 367.0], [19.7, 368.0], [19.8, 368.0], [19.9, 368.0], [20.0, 368.0], [20.1, 368.0], [20.2, 368.0], [20.3, 368.0], [20.4, 368.0], [20.5, 368.0], [20.6, 368.0], [20.7, 368.0], [20.8, 368.0], [20.9, 368.0], [21.0, 368.0], [21.1, 368.0], [21.2, 368.0], [21.3, 368.0], [21.4, 368.0], [21.5, 368.0], [21.6, 369.0], [21.7, 369.0], [21.8, 369.0], [21.9, 369.0], [22.0, 369.0], [22.1, 369.0], [22.2, 369.0], [22.3, 369.0], [22.4, 369.0], [22.5, 369.0], [22.6, 371.0], [22.7, 371.0], [22.8, 371.0], [22.9, 371.0], [23.0, 371.0], [23.1, 372.0], [23.2, 372.0], [23.3, 372.0], [23.4, 372.0], [23.5, 372.0], [23.6, 373.0], [23.7, 373.0], [23.8, 373.0], [23.9, 373.0], [24.0, 373.0], [24.1, 374.0], [24.2, 374.0], [24.3, 374.0], [24.4, 374.0], [24.5, 374.0], [24.6, 374.0], [24.7, 374.0], [24.8, 374.0], [24.9, 374.0], [25.0, 374.0], [25.1, 374.0], [25.2, 374.0], [25.3, 374.0], [25.4, 374.0], [25.5, 374.0], [25.6, 374.0], [25.7, 374.0], [25.8, 374.0], [25.9, 374.0], [26.0, 375.0], [26.1, 375.0], [26.2, 375.0], [26.3, 375.0], [26.4, 375.0], [26.5, 375.0], [26.6, 375.0], [26.7, 375.0], [26.8, 375.0], [26.9, 375.0], [27.0, 376.0], [27.1, 376.0], [27.2, 376.0], [27.3, 376.0], [27.4, 376.0], [27.5, 376.0], [27.6, 376.0], [27.7, 376.0], [27.8, 376.0], [27.9, 376.0], [28.0, 377.0], [28.1, 377.0], [28.2, 377.0], [28.3, 377.0], [28.4, 377.0], [28.5, 379.0], [28.6, 379.0], [28.7, 379.0], [28.8, 379.0], [28.9, 379.0], [29.0, 380.0], [29.1, 380.0], [29.2, 380.0], [29.3, 380.0], [29.4, 380.0], [29.5, 382.0], [29.6, 382.0], [29.7, 382.0], [29.8, 382.0], [29.9, 382.0], [30.0, 382.0], [30.1, 382.0], [30.2, 382.0], [30.3, 382.0], [30.4, 386.0], [30.5, 386.0], [30.6, 386.0], [30.7, 386.0], [30.8, 386.0], [30.9, 388.0], [31.0, 388.0], [31.1, 388.0], [31.2, 388.0], [31.3, 388.0], [31.4, 388.0], [31.5, 388.0], [31.6, 388.0], [31.7, 388.0], [31.8, 388.0], [31.9, 391.0], [32.0, 391.0], [32.1, 391.0], [32.2, 391.0], [32.3, 391.0], [32.4, 392.0], [32.5, 392.0], [32.6, 392.0], [32.7, 392.0], [32.8, 392.0], [32.9, 393.0], [33.0, 393.0], [33.1, 393.0], [33.2, 393.0], [33.3, 393.0], [33.4, 396.0], [33.5, 396.0], [33.6, 396.0], [33.7, 396.0], [33.8, 396.0], [33.9, 396.0], [34.0, 396.0], [34.1, 396.0], [34.2, 396.0], [34.3, 396.0], [34.4, 397.0], [34.5, 397.0], [34.6, 397.0], [34.7, 397.0], [34.8, 397.0], [34.9, 397.0], [35.0, 397.0], [35.1, 397.0], [35.2, 397.0], [35.3, 398.0], [35.4, 398.0], [35.5, 398.0], [35.6, 398.0], [35.7, 398.0], [35.8, 399.0], [35.9, 399.0], [36.0, 399.0], [36.1, 399.0], [36.2, 399.0], [36.3, 399.0], [36.4, 399.0], [36.5, 399.0], [36.6, 399.0], [36.7, 399.0], [36.8, 401.0], [36.9, 401.0], [37.0, 401.0], [37.1, 401.0], [37.2, 401.0], [37.3, 402.0], [37.4, 402.0], [37.5, 402.0], [37.6, 402.0], [37.7, 402.0], [37.8, 403.0], [37.9, 403.0], [38.0, 403.0], [38.1, 403.0], [38.2, 403.0], [38.3, 408.0], [38.4, 408.0], [38.5, 408.0], [38.6, 408.0], [38.7, 408.0], [38.8, 408.0], [38.9, 408.0], [39.0, 408.0], [39.1, 408.0], [39.2, 408.0], [39.3, 411.0], [39.4, 411.0], [39.5, 411.0], [39.6, 411.0], [39.7, 411.0], [39.8, 412.0], [39.9, 412.0], [40.0, 412.0], [40.1, 412.0], [40.2, 414.0], [40.3, 414.0], [40.4, 414.0], [40.5, 414.0], [40.6, 414.0], [40.7, 418.0], [40.8, 418.0], [40.9, 418.0], [41.0, 418.0], [41.1, 418.0], [41.2, 421.0], [41.3, 421.0], [41.4, 421.0], [41.5, 421.0], [41.6, 421.0], [41.7, 421.0], [41.8, 421.0], [41.9, 421.0], [42.0, 421.0], [42.1, 421.0], [42.2, 421.0], [42.3, 421.0], [42.4, 421.0], [42.5, 421.0], [42.6, 421.0], [42.7, 424.0], [42.8, 424.0], [42.9, 424.0], [43.0, 424.0], [43.1, 424.0], [43.2, 425.0], [43.3, 425.0], [43.4, 425.0], [43.5, 425.0], [43.6, 425.0], [43.7, 427.0], [43.8, 427.0], [43.9, 427.0], [44.0, 427.0], [44.1, 427.0], [44.2, 428.0], [44.3, 428.0], [44.4, 428.0], [44.5, 428.0], [44.6, 428.0], [44.7, 428.0], [44.8, 428.0], [44.9, 428.0], [45.0, 428.0], [45.1, 431.0], [45.2, 431.0], [45.3, 431.0], [45.4, 431.0], [45.5, 431.0], [45.6, 435.0], [45.7, 435.0], [45.8, 435.0], [45.9, 435.0], [46.0, 435.0], [46.1, 435.0], [46.2, 435.0], [46.3, 435.0], [46.4, 435.0], [46.5, 435.0], [46.6, 437.0], [46.7, 437.0], [46.8, 437.0], [46.9, 437.0], [47.0, 437.0], [47.1, 440.0], [47.2, 440.0], [47.3, 440.0], [47.4, 440.0], [47.5, 440.0], [47.6, 440.0], [47.7, 440.0], [47.8, 440.0], [47.9, 440.0], [48.0, 440.0], [48.1, 443.0], [48.2, 443.0], [48.3, 443.0], [48.4, 443.0], [48.5, 443.0], [48.6, 448.0], [48.7, 448.0], [48.8, 448.0], [48.9, 448.0], [49.0, 448.0], [49.1, 452.0], [49.2, 452.0], [49.3, 452.0], [49.4, 452.0], [49.5, 452.0], [49.6, 454.0], [49.7, 454.0], [49.8, 454.0], [49.9, 454.0], [50.0, 462.0], [50.1, 462.0], [50.2, 462.0], [50.3, 462.0], [50.4, 462.0], [50.5, 479.0], [50.6, 479.0], [50.7, 479.0], [50.8, 479.0], [50.9, 479.0], [51.0, 482.0], [51.1, 482.0], [51.2, 482.0], [51.3, 482.0], [51.4, 482.0], [51.5, 485.0], [51.6, 485.0], [51.7, 485.0], [51.8, 485.0], [51.9, 485.0], [52.0, 563.0], [52.1, 563.0], [52.2, 563.0], [52.3, 563.0], [52.4, 563.0], [52.5, 572.0], [52.6, 572.0], [52.7, 572.0], [52.8, 572.0], [52.9, 572.0], [53.0, 574.0], [53.1, 574.0], [53.2, 574.0], [53.3, 574.0], [53.4, 574.0], [53.5, 588.0], [53.6, 588.0], [53.7, 588.0], [53.8, 588.0], [53.9, 588.0], [54.0, 622.0], [54.1, 622.0], [54.2, 622.0], [54.3, 622.0], [54.4, 622.0], [54.5, 632.0], [54.6, 632.0], [54.7, 632.0], [54.8, 632.0], [54.9, 632.0], [55.0, 643.0], [55.1, 643.0], [55.2, 643.0], [55.3, 643.0], [55.4, 682.0], [55.5, 682.0], [55.6, 682.0], [55.7, 682.0], [55.8, 682.0], [55.9, 686.0], [56.0, 686.0], [56.1, 686.0], [56.2, 686.0], [56.3, 686.0], [56.4, 688.0], [56.5, 688.0], [56.6, 688.0], [56.7, 688.0], [56.8, 688.0], [56.9, 692.0], [57.0, 692.0], [57.1, 692.0], [57.2, 692.0], [57.3, 692.0], [57.4, 698.0], [57.5, 698.0], [57.6, 698.0], [57.7, 698.0], [57.8, 698.0], [57.9, 706.0], [58.0, 706.0], [58.1, 706.0], [58.2, 706.0], [58.3, 706.0], [58.4, 716.0], [58.5, 716.0], [58.6, 716.0], [58.7, 716.0], [58.8, 716.0], [58.9, 721.0], [59.0, 721.0], [59.1, 721.0], [59.2, 721.0], [59.3, 721.0], [59.4, 722.0], [59.5, 722.0], [59.6, 722.0], [59.7, 722.0], [59.8, 722.0], [59.9, 731.0], [60.0, 731.0], [60.1, 731.0], [60.2, 731.0], [60.3, 743.0], [60.4, 743.0], [60.5, 743.0], [60.6, 743.0], [60.7, 743.0], [60.8, 747.0], [60.9, 747.0], [61.0, 747.0], [61.1, 747.0], [61.2, 747.0], [61.3, 757.0], [61.4, 757.0], [61.5, 757.0], [61.6, 757.0], [61.7, 757.0], [61.8, 759.0], [61.9, 759.0], [62.0, 759.0], [62.1, 759.0], [62.2, 759.0], [62.3, 760.0], [62.4, 760.0], [62.5, 760.0], [62.6, 760.0], [62.7, 760.0], [62.8, 761.0], [62.9, 761.0], [63.0, 761.0], [63.1, 761.0], [63.2, 761.0], [63.3, 763.0], [63.4, 763.0], [63.5, 763.0], [63.6, 763.0], [63.7, 763.0], [63.8, 763.0], [63.9, 763.0], [64.0, 763.0], [64.1, 763.0], [64.2, 763.0], [64.3, 765.0], [64.4, 765.0], [64.5, 765.0], [64.6, 765.0], [64.7, 765.0], [64.8, 768.0], [64.9, 768.0], [65.0, 768.0], [65.1, 768.0], [65.2, 776.0], [65.3, 776.0], [65.4, 776.0], [65.5, 776.0], [65.6, 776.0], [65.7, 778.0], [65.8, 778.0], [65.9, 778.0], [66.0, 778.0], [66.1, 778.0], [66.2, 780.0], [66.3, 780.0], [66.4, 780.0], [66.5, 780.0], [66.6, 780.0], [66.7, 783.0], [66.8, 783.0], [66.9, 783.0], [67.0, 783.0], [67.1, 783.0], [67.2, 788.0], [67.3, 788.0], [67.4, 788.0], [67.5, 788.0], [67.6, 788.0], [67.7, 789.0], [67.8, 789.0], [67.9, 789.0], [68.0, 789.0], [68.1, 789.0], [68.2, 792.0], [68.3, 792.0], [68.4, 792.0], [68.5, 792.0], [68.6, 792.0], [68.7, 801.0], [68.8, 801.0], [68.9, 801.0], [69.0, 801.0], [69.1, 801.0], [69.2, 803.0], [69.3, 803.0], [69.4, 803.0], [69.5, 803.0], [69.6, 803.0], [69.7, 811.0], [69.8, 811.0], [69.9, 811.0], [70.0, 811.0], [70.1, 813.0], [70.2, 813.0], [70.3, 813.0], [70.4, 813.0], [70.5, 813.0], [70.6, 815.0], [70.7, 815.0], [70.8, 815.0], [70.9, 815.0], [71.0, 815.0], [71.1, 818.0], [71.2, 818.0], [71.3, 818.0], [71.4, 818.0], [71.5, 818.0], [71.6, 822.0], [71.7, 822.0], [71.8, 822.0], [71.9, 822.0], [72.0, 822.0], [72.1, 822.0], [72.2, 822.0], [72.3, 822.0], [72.4, 822.0], [72.5, 822.0], [72.6, 845.0], [72.7, 845.0], [72.8, 845.0], [72.9, 845.0], [73.0, 845.0], [73.1, 882.0], [73.2, 882.0], [73.3, 882.0], [73.4, 882.0], [73.5, 882.0], [73.6, 885.0], [73.7, 885.0], [73.8, 885.0], [73.9, 885.0], [74.0, 885.0], [74.1, 891.0], [74.2, 891.0], [74.3, 891.0], [74.4, 891.0], [74.5, 891.0], [74.6, 897.0], [74.7, 897.0], [74.8, 897.0], [74.9, 897.0], [75.0, 899.0], [75.1, 899.0], [75.2, 899.0], [75.3, 899.0], [75.4, 899.0], [75.5, 904.0], [75.6, 904.0], [75.7, 904.0], [75.8, 904.0], [75.9, 904.0], [76.0, 911.0], [76.1, 911.0], [76.2, 911.0], [76.3, 911.0], [76.4, 911.0], [76.5, 928.0], [76.6, 928.0], [76.7, 928.0], [76.8, 928.0], [76.9, 928.0], [77.0, 933.0], [77.1, 933.0], [77.2, 933.0], [77.3, 933.0], [77.4, 933.0], [77.5, 945.0], [77.6, 945.0], [77.7, 945.0], [77.8, 945.0], [77.9, 945.0], [78.0, 963.0], [78.1, 963.0], [78.2, 963.0], [78.3, 963.0], [78.4, 963.0], [78.5, 984.0], [78.6, 984.0], [78.7, 984.0], [78.8, 984.0], [78.9, 984.0], [79.0, 1004.0], [79.1, 1004.0], [79.2, 1004.0], [79.3, 1004.0], [79.4, 1004.0], [79.5, 1017.0], [79.6, 1017.0], [79.7, 1017.0], [79.8, 1017.0], [79.9, 1017.0], [80.0, 1049.0], [80.1, 1049.0], [80.2, 1049.0], [80.3, 1049.0], [80.4, 1051.0], [80.5, 1051.0], [80.6, 1051.0], [80.7, 1051.0], [80.8, 1051.0], [80.9, 1072.0], [81.0, 1072.0], [81.1, 1072.0], [81.2, 1072.0], [81.3, 1072.0], [81.4, 1084.0], [81.5, 1084.0], [81.6, 1084.0], [81.7, 1084.0], [81.8, 1084.0], [81.9, 1131.0], [82.0, 1131.0], [82.1, 1131.0], [82.2, 1131.0], [82.3, 1131.0], [82.4, 1225.0], [82.5, 1225.0], [82.6, 1225.0], [82.7, 1225.0], [82.8, 1225.0], [82.9, 1254.0], [83.0, 1254.0], [83.1, 1254.0], [83.2, 1254.0], [83.3, 1254.0], [83.4, 1261.0], [83.5, 1261.0], [83.6, 1261.0], [83.7, 1261.0], [83.8, 1261.0], [83.9, 1280.0], [84.0, 1280.0], [84.1, 1280.0], [84.2, 1280.0], [84.3, 1280.0], [84.4, 1288.0], [84.5, 1288.0], [84.6, 1288.0], [84.7, 1288.0], [84.8, 1288.0], [84.9, 1300.0], [85.0, 1300.0], [85.1, 1300.0], [85.2, 1300.0], [85.3, 1308.0], [85.4, 1308.0], [85.5, 1308.0], [85.6, 1308.0], [85.7, 1308.0], [85.8, 1365.0], [85.9, 1365.0], [86.0, 1365.0], [86.1, 1365.0], [86.2, 1365.0], [86.3, 1416.0], [86.4, 1416.0], [86.5, 1416.0], [86.6, 1416.0], [86.7, 1416.0], [86.8, 1460.0], [86.9, 1460.0], [87.0, 1460.0], [87.1, 1460.0], [87.2, 1460.0], [87.3, 1462.0], [87.4, 1462.0], [87.5, 1462.0], [87.6, 1462.0], [87.7, 1462.0], [87.8, 1474.0], [87.9, 1474.0], [88.0, 1474.0], [88.1, 1474.0], [88.2, 1474.0], [88.3, 1475.0], [88.4, 1475.0], [88.5, 1475.0], [88.6, 1475.0], [88.7, 1475.0], [88.8, 1483.0], [88.9, 1483.0], [89.0, 1483.0], [89.1, 1483.0], [89.2, 1483.0], [89.3, 1488.0], [89.4, 1488.0], [89.5, 1488.0], [89.6, 1488.0], [89.7, 1488.0], [89.8, 1511.0], [89.9, 1511.0], [90.0, 1511.0], [90.1, 1511.0], [90.2, 1513.0], [90.3, 1513.0], [90.4, 1513.0], [90.5, 1513.0], [90.6, 1513.0], [90.7, 1555.0], [90.8, 1555.0], [90.9, 1555.0], [91.0, 1555.0], [91.1, 1555.0], [91.2, 1586.0], [91.3, 1586.0], [91.4, 1586.0], [91.5, 1586.0], [91.6, 1586.0], [91.7, 1600.0], [91.8, 1600.0], [91.9, 1600.0], [92.0, 1600.0], [92.1, 1600.0], [92.2, 1605.0], [92.3, 1605.0], [92.4, 1605.0], [92.5, 1605.0], [92.6, 1605.0], [92.7, 1612.0], [92.8, 1612.0], [92.9, 1612.0], [93.0, 1612.0], [93.1, 1612.0], [93.2, 1625.0], [93.3, 1625.0], [93.4, 1625.0], [93.5, 1625.0], [93.6, 1625.0], [93.7, 1653.0], [93.8, 1653.0], [93.9, 1653.0], [94.0, 1653.0], [94.1, 1653.0], [94.2, 1654.0], [94.3, 1654.0], [94.4, 1654.0], [94.5, 1654.0], [94.6, 1654.0], [94.7, 1673.0], [94.8, 1673.0], [94.9, 1673.0], [95.0, 1673.0], [95.1, 1681.0], [95.2, 1681.0], [95.3, 1681.0], [95.4, 1681.0], [95.5, 1681.0], [95.6, 1684.0], [95.7, 1684.0], [95.8, 1684.0], [95.9, 1684.0], [96.0, 1684.0], [96.1, 1699.0], [96.2, 1699.0], [96.3, 1699.0], [96.4, 1699.0], [96.5, 1699.0], [96.6, 1722.0], [96.7, 1722.0], [96.8, 1722.0], [96.9, 1722.0], [97.0, 1722.0], [97.1, 1752.0], [97.2, 1752.0], [97.3, 1752.0], [97.4, 1752.0], [97.5, 1752.0], [97.6, 1811.0], [97.7, 1811.0], [97.8, 1811.0], [97.9, 1811.0], [98.0, 1811.0], [98.1, 1823.0], [98.2, 1823.0], [98.3, 1823.0], [98.4, 1823.0], [98.5, 1823.0], [98.6, 1857.0], [98.7, 1857.0], [98.8, 1857.0], [98.9, 1857.0], [99.0, 1857.0], [99.1, 1892.0], [99.2, 1892.0], [99.3, 1892.0], [99.4, 1892.0], [99.5, 1892.0], [99.6, 1968.0], [99.7, 1968.0], [99.8, 1968.0], [99.9, 1968.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[0.0, 366.0], [0.1, 366.0], [0.2, 366.0], [0.3, 366.0], [0.4, 366.0], [0.5, 366.0], [0.6, 366.0], [0.7, 366.0], [0.8, 366.0], [0.9, 366.0], [1.0, 375.0], [1.1, 375.0], [1.2, 375.0], [1.3, 375.0], [1.4, 375.0], [1.5, 389.0], [1.6, 389.0], [1.7, 389.0], [1.8, 389.0], [1.9, 389.0], [2.0, 400.0], [2.1, 400.0], [2.2, 400.0], [2.3, 400.0], [2.4, 400.0], [2.5, 400.0], [2.6, 400.0], [2.7, 400.0], [2.8, 400.0], [2.9, 400.0], [3.0, 404.0], [3.1, 404.0], [3.2, 404.0], [3.3, 404.0], [3.4, 404.0], [3.5, 405.0], [3.6, 405.0], [3.7, 405.0], [3.8, 405.0], [3.9, 405.0], [4.0, 407.0], [4.1, 407.0], [4.2, 407.0], [4.3, 407.0], [4.4, 407.0], [4.5, 408.0], [4.6, 408.0], [4.7, 408.0], [4.8, 408.0], [4.9, 408.0], [5.0, 410.0], [5.1, 410.0], [5.2, 410.0], [5.3, 410.0], [5.4, 415.0], [5.5, 415.0], [5.6, 415.0], [5.7, 415.0], [5.8, 415.0], [5.9, 416.0], [6.0, 416.0], [6.1, 416.0], [6.2, 416.0], [6.3, 416.0], [6.4, 417.0], [6.5, 417.0], [6.6, 417.0], [6.7, 417.0], [6.8, 417.0], [6.9, 420.0], [7.0, 420.0], [7.1, 420.0], [7.2, 420.0], [7.3, 420.0], [7.4, 420.0], [7.5, 420.0], [7.6, 420.0], [7.7, 420.0], [7.8, 420.0], [7.9, 421.0], [8.0, 421.0], [8.1, 421.0], [8.2, 421.0], [8.3, 421.0], [8.4, 421.0], [8.5, 421.0], [8.6, 421.0], [8.7, 421.0], [8.8, 421.0], [8.9, 422.0], [9.0, 422.0], [9.1, 422.0], [9.2, 422.0], [9.3, 422.0], [9.4, 423.0], [9.5, 423.0], [9.6, 423.0], [9.7, 423.0], [9.8, 423.0], [9.9, 424.0], [10.0, 424.0], [10.1, 424.0], [10.2, 424.0], [10.3, 426.0], [10.4, 426.0], [10.5, 426.0], [10.6, 426.0], [10.7, 426.0], [10.8, 427.0], [10.9, 427.0], [11.0, 427.0], [11.1, 427.0], [11.2, 427.0], [11.3, 430.0], [11.4, 430.0], [11.5, 430.0], [11.6, 430.0], [11.7, 430.0], [11.8, 433.0], [11.9, 433.0], [12.0, 433.0], [12.1, 433.0], [12.2, 433.0], [12.3, 437.0], [12.4, 437.0], [12.5, 437.0], [12.6, 437.0], [12.7, 437.0], [12.8, 438.0], [12.9, 438.0], [13.0, 438.0], [13.1, 438.0], [13.2, 438.0], [13.3, 440.0], [13.4, 440.0], [13.5, 440.0], [13.6, 440.0], [13.7, 440.0], [13.8, 443.0], [13.9, 443.0], [14.0, 443.0], [14.1, 443.0], [14.2, 443.0], [14.3, 444.0], [14.4, 444.0], [14.5, 444.0], [14.6, 444.0], [14.7, 444.0], [14.8, 444.0], [14.9, 444.0], [15.0, 444.0], [15.1, 444.0], [15.2, 444.0], [15.3, 444.0], [15.4, 444.0], [15.5, 444.0], [15.6, 444.0], [15.7, 447.0], [15.8, 447.0], [15.9, 447.0], [16.0, 447.0], [16.1, 447.0], [16.2, 448.0], [16.3, 448.0], [16.4, 448.0], [16.5, 448.0], [16.6, 448.0], [16.7, 448.0], [16.8, 448.0], [16.9, 448.0], [17.0, 448.0], [17.1, 448.0], [17.2, 448.0], [17.3, 448.0], [17.4, 448.0], [17.5, 448.0], [17.6, 448.0], [17.7, 449.0], [17.8, 449.0], [17.9, 449.0], [18.0, 449.0], [18.1, 449.0], [18.2, 450.0], [18.3, 450.0], [18.4, 450.0], [18.5, 450.0], [18.6, 450.0], [18.7, 451.0], [18.8, 451.0], [18.9, 451.0], [19.0, 451.0], [19.1, 451.0], [19.2, 452.0], [19.3, 452.0], [19.4, 452.0], [19.5, 452.0], [19.6, 452.0], [19.7, 452.0], [19.8, 452.0], [19.9, 452.0], [20.0, 452.0], [20.1, 453.0], [20.2, 453.0], [20.3, 453.0], [20.4, 453.0], [20.5, 453.0], [20.6, 454.0], [20.7, 454.0], [20.8, 454.0], [20.9, 454.0], [21.0, 454.0], [21.1, 454.0], [21.2, 454.0], [21.3, 454.0], [21.4, 454.0], [21.5, 454.0], [21.6, 456.0], [21.7, 456.0], [21.8, 456.0], [21.9, 456.0], [22.0, 456.0], [22.1, 456.0], [22.2, 456.0], [22.3, 456.0], [22.4, 456.0], [22.5, 456.0], [22.6, 456.0], [22.7, 456.0], [22.8, 456.0], [22.9, 456.0], [23.0, 456.0], [23.1, 457.0], [23.2, 457.0], [23.3, 457.0], [23.4, 457.0], [23.5, 457.0], [23.6, 458.0], [23.7, 458.0], [23.8, 458.0], [23.9, 458.0], [24.0, 458.0], [24.1, 459.0], [24.2, 459.0], [24.3, 459.0], [24.4, 459.0], [24.5, 459.0], [24.6, 460.0], [24.7, 460.0], [24.8, 460.0], [24.9, 460.0], [25.0, 461.0], [25.1, 461.0], [25.2, 461.0], [25.3, 461.0], [25.4, 461.0], [25.5, 463.0], [25.6, 463.0], [25.7, 463.0], [25.8, 463.0], [25.9, 463.0], [26.0, 464.0], [26.1, 464.0], [26.2, 464.0], [26.3, 464.0], [26.4, 464.0], [26.5, 464.0], [26.6, 464.0], [26.7, 464.0], [26.8, 464.0], [26.9, 464.0], [27.0, 465.0], [27.1, 465.0], [27.2, 465.0], [27.3, 465.0], [27.4, 465.0], [27.5, 467.0], [27.6, 467.0], [27.7, 467.0], [27.8, 467.0], [27.9, 467.0], [28.0, 468.0], [28.1, 468.0], [28.2, 468.0], [28.3, 468.0], [28.4, 468.0], [28.5, 468.0], [28.6, 468.0], [28.7, 468.0], [28.8, 468.0], [28.9, 468.0], [29.0, 468.0], [29.1, 468.0], [29.2, 468.0], [29.3, 468.0], [29.4, 468.0], [29.5, 468.0], [29.6, 468.0], [29.7, 468.0], [29.8, 468.0], [29.9, 468.0], [30.0, 472.0], [30.1, 472.0], [30.2, 472.0], [30.3, 472.0], [30.4, 474.0], [30.5, 474.0], [30.6, 474.0], [30.7, 474.0], [30.8, 474.0], [30.9, 474.0], [31.0, 474.0], [31.1, 474.0], [31.2, 474.0], [31.3, 474.0], [31.4, 475.0], [31.5, 475.0], [31.6, 475.0], [31.7, 475.0], [31.8, 475.0], [31.9, 475.0], [32.0, 475.0], [32.1, 475.0], [32.2, 475.0], [32.3, 475.0], [32.4, 476.0], [32.5, 476.0], [32.6, 476.0], [32.7, 476.0], [32.8, 476.0], [32.9, 476.0], [33.0, 476.0], [33.1, 476.0], [33.2, 476.0], [33.3, 476.0], [33.4, 476.0], [33.5, 476.0], [33.6, 476.0], [33.7, 476.0], [33.8, 476.0], [33.9, 480.0], [34.0, 480.0], [34.1, 480.0], [34.2, 480.0], [34.3, 480.0], [34.4, 480.0], [34.5, 480.0], [34.6, 480.0], [34.7, 480.0], [34.8, 480.0], [34.9, 480.0], [35.0, 480.0], [35.1, 480.0], [35.2, 480.0], [35.3, 480.0], [35.4, 480.0], [35.5, 480.0], [35.6, 480.0], [35.7, 480.0], [35.8, 481.0], [35.9, 481.0], [36.0, 481.0], [36.1, 481.0], [36.2, 481.0], [36.3, 484.0], [36.4, 484.0], [36.5, 484.0], [36.6, 484.0], [36.7, 484.0], [36.8, 484.0], [36.9, 484.0], [37.0, 484.0], [37.1, 484.0], [37.2, 484.0], [37.3, 484.0], [37.4, 484.0], [37.5, 484.0], [37.6, 484.0], [37.7, 484.0], [37.8, 484.0], [37.9, 484.0], [38.0, 484.0], [38.1, 484.0], [38.2, 484.0], [38.3, 486.0], [38.4, 486.0], [38.5, 486.0], [38.6, 486.0], [38.7, 486.0], [38.8, 487.0], [38.9, 487.0], [39.0, 487.0], [39.1, 487.0], [39.2, 487.0], [39.3, 487.0], [39.4, 487.0], [39.5, 487.0], [39.6, 487.0], [39.7, 487.0], [39.8, 487.0], [39.9, 487.0], [40.0, 487.0], [40.1, 487.0], [40.2, 488.0], [40.3, 488.0], [40.4, 488.0], [40.5, 488.0], [40.6, 488.0], [40.7, 488.0], [40.8, 488.0], [40.9, 488.0], [41.0, 488.0], [41.1, 488.0], [41.2, 488.0], [41.3, 488.0], [41.4, 488.0], [41.5, 488.0], [41.6, 488.0], [41.7, 489.0], [41.8, 489.0], [41.9, 489.0], [42.0, 489.0], [42.1, 489.0], [42.2, 491.0], [42.3, 491.0], [42.4, 491.0], [42.5, 491.0], [42.6, 491.0], [42.7, 491.0], [42.8, 491.0], [42.9, 491.0], [43.0, 491.0], [43.1, 491.0], [43.2, 492.0], [43.3, 492.0], [43.4, 492.0], [43.5, 492.0], [43.6, 492.0], [43.7, 492.0], [43.8, 492.0], [43.9, 492.0], [44.0, 492.0], [44.1, 492.0], [44.2, 493.0], [44.3, 493.0], [44.4, 493.0], [44.5, 493.0], [44.6, 493.0], [44.7, 498.0], [44.8, 498.0], [44.9, 498.0], [45.0, 498.0], [45.1, 500.0], [45.2, 500.0], [45.3, 500.0], [45.4, 500.0], [45.5, 500.0], [45.6, 507.0], [45.7, 507.0], [45.8, 507.0], [45.9, 507.0], [46.0, 507.0], [46.1, 510.0], [46.2, 510.0], [46.3, 510.0], [46.4, 510.0], [46.5, 510.0], [46.6, 512.0], [46.7, 512.0], [46.8, 512.0], [46.9, 512.0], [47.0, 512.0], [47.1, 521.0], [47.2, 521.0], [47.3, 521.0], [47.4, 521.0], [47.5, 521.0], [47.6, 524.0], [47.7, 524.0], [47.8, 524.0], [47.9, 524.0], [48.0, 524.0], [48.1, 524.0], [48.2, 524.0], [48.3, 524.0], [48.4, 524.0], [48.5, 524.0], [48.6, 539.0], [48.7, 539.0], [48.8, 539.0], [48.9, 539.0], [49.0, 539.0], [49.1, 541.0], [49.2, 541.0], [49.3, 541.0], [49.4, 541.0], [49.5, 541.0], [49.6, 547.0], [49.7, 547.0], [49.8, 547.0], [49.9, 547.0], [50.0, 548.0], [50.1, 548.0], [50.2, 548.0], [50.3, 548.0], [50.4, 548.0], [50.5, 566.0], [50.6, 566.0], [50.7, 566.0], [50.8, 566.0], [50.9, 566.0], [51.0, 599.0], [51.1, 599.0], [51.2, 599.0], [51.3, 599.0], [51.4, 599.0], [51.5, 620.0], [51.6, 620.0], [51.7, 620.0], [51.8, 620.0], [51.9, 620.0], [52.0, 680.0], [52.1, 680.0], [52.2, 680.0], [52.3, 680.0], [52.4, 680.0], [52.5, 700.0], [52.6, 700.0], [52.7, 700.0], [52.8, 700.0], [52.9, 700.0], [53.0, 720.0], [53.1, 720.0], [53.2, 720.0], [53.3, 720.0], [53.4, 720.0], [53.5, 790.0], [53.6, 790.0], [53.7, 790.0], [53.8, 790.0], [53.9, 790.0], [54.0, 796.0], [54.1, 796.0], [54.2, 796.0], [54.3, 796.0], [54.4, 796.0], [54.5, 811.0], [54.6, 811.0], [54.7, 811.0], [54.8, 811.0], [54.9, 811.0], [55.0, 840.0], [55.1, 840.0], [55.2, 840.0], [55.3, 840.0], [55.4, 844.0], [55.5, 844.0], [55.6, 844.0], [55.7, 844.0], [55.8, 844.0], [55.9, 857.0], [56.0, 857.0], [56.1, 857.0], [56.2, 857.0], [56.3, 857.0], [56.4, 858.0], [56.5, 858.0], [56.6, 858.0], [56.7, 858.0], [56.8, 858.0], [56.9, 859.0], [57.0, 859.0], [57.1, 859.0], [57.2, 859.0], [57.3, 859.0], [57.4, 874.0], [57.5, 874.0], [57.6, 874.0], [57.7, 874.0], [57.8, 874.0], [57.9, 881.0], [58.0, 881.0], [58.1, 881.0], [58.2, 881.0], [58.3, 881.0], [58.4, 885.0], [58.5, 885.0], [58.6, 885.0], [58.7, 885.0], [58.8, 885.0], [58.9, 886.0], [59.0, 886.0], [59.1, 886.0], [59.2, 886.0], [59.3, 886.0], [59.4, 895.0], [59.5, 895.0], [59.6, 895.0], [59.7, 895.0], [59.8, 895.0], [59.9, 902.0], [60.0, 902.0], [60.1, 902.0], [60.2, 902.0], [60.3, 905.0], [60.4, 905.0], [60.5, 905.0], [60.6, 905.0], [60.7, 905.0], [60.8, 906.0], [60.9, 906.0], [61.0, 906.0], [61.1, 906.0], [61.2, 906.0], [61.3, 909.0], [61.4, 909.0], [61.5, 909.0], [61.6, 909.0], [61.7, 909.0], [61.8, 911.0], [61.9, 911.0], [62.0, 911.0], [62.1, 911.0], [62.2, 911.0], [62.3, 918.0], [62.4, 918.0], [62.5, 918.0], [62.6, 918.0], [62.7, 918.0], [62.8, 924.0], [62.9, 924.0], [63.0, 924.0], [63.1, 924.0], [63.2, 924.0], [63.3, 927.0], [63.4, 927.0], [63.5, 927.0], [63.6, 927.0], [63.7, 927.0], [63.8, 941.0], [63.9, 941.0], [64.0, 941.0], [64.1, 941.0], [64.2, 941.0], [64.3, 947.0], [64.4, 947.0], [64.5, 947.0], [64.6, 947.0], [64.7, 947.0], [64.8, 952.0], [64.9, 952.0], [65.0, 952.0], [65.1, 952.0], [65.2, 953.0], [65.3, 953.0], [65.4, 953.0], [65.5, 953.0], [65.6, 953.0], [65.7, 962.0], [65.8, 962.0], [65.9, 962.0], [66.0, 962.0], [66.1, 962.0], [66.2, 963.0], [66.3, 963.0], [66.4, 963.0], [66.5, 963.0], [66.6, 963.0], [66.7, 966.0], [66.8, 966.0], [66.9, 966.0], [67.0, 966.0], [67.1, 966.0], [67.2, 966.0], [67.3, 966.0], [67.4, 966.0], [67.5, 966.0], [67.6, 966.0], [67.7, 970.0], [67.8, 970.0], [67.9, 970.0], [68.0, 970.0], [68.1, 970.0], [68.2, 975.0], [68.3, 975.0], [68.4, 975.0], [68.5, 975.0], [68.6, 975.0], [68.7, 975.0], [68.8, 975.0], [68.9, 975.0], [69.0, 975.0], [69.1, 975.0], [69.2, 981.0], [69.3, 981.0], [69.4, 981.0], [69.5, 981.0], [69.6, 981.0], [69.7, 988.0], [69.8, 988.0], [69.9, 988.0], [70.0, 988.0], [70.1, 992.0], [70.2, 992.0], [70.3, 992.0], [70.4, 992.0], [70.5, 992.0], [70.6, 993.0], [70.7, 993.0], [70.8, 993.0], [70.9, 993.0], [71.0, 993.0], [71.1, 996.0], [71.2, 996.0], [71.3, 996.0], [71.4, 996.0], [71.5, 996.0], [71.6, 999.0], [71.7, 999.0], [71.8, 999.0], [71.9, 999.0], [72.0, 999.0], [72.1, 1006.0], [72.2, 1006.0], [72.3, 1006.0], [72.4, 1006.0], [72.5, 1006.0], [72.6, 1007.0], [72.7, 1007.0], [72.8, 1007.0], [72.9, 1007.0], [73.0, 1007.0], [73.1, 1008.0], [73.2, 1008.0], [73.3, 1008.0], [73.4, 1008.0], [73.5, 1008.0], [73.6, 1013.0], [73.7, 1013.0], [73.8, 1013.0], [73.9, 1013.0], [74.0, 1013.0], [74.1, 1016.0], [74.2, 1016.0], [74.3, 1016.0], [74.4, 1016.0], [74.5, 1016.0], [74.6, 1016.0], [74.7, 1016.0], [74.8, 1016.0], [74.9, 1016.0], [75.0, 1021.0], [75.1, 1021.0], [75.2, 1021.0], [75.3, 1021.0], [75.4, 1021.0], [75.5, 1021.0], [75.6, 1021.0], [75.7, 1021.0], [75.8, 1021.0], [75.9, 1021.0], [76.0, 1022.0], [76.1, 1022.0], [76.2, 1022.0], [76.3, 1022.0], [76.4, 1022.0], [76.5, 1024.0], [76.6, 1024.0], [76.7, 1024.0], [76.8, 1024.0], [76.9, 1024.0], [77.0, 1032.0], [77.1, 1032.0], [77.2, 1032.0], [77.3, 1032.0], [77.4, 1032.0], [77.5, 1038.0], [77.6, 1038.0], [77.7, 1038.0], [77.8, 1038.0], [77.9, 1038.0], [78.0, 1039.0], [78.1, 1039.0], [78.2, 1039.0], [78.3, 1039.0], [78.4, 1039.0], [78.5, 1041.0], [78.6, 1041.0], [78.7, 1041.0], [78.8, 1041.0], [78.9, 1041.0], [79.0, 1041.0], [79.1, 1041.0], [79.2, 1041.0], [79.3, 1041.0], [79.4, 1041.0], [79.5, 1043.0], [79.6, 1043.0], [79.7, 1043.0], [79.8, 1043.0], [79.9, 1043.0], [80.0, 1045.0], [80.1, 1045.0], [80.2, 1045.0], [80.3, 1045.0], [80.4, 1046.0], [80.5, 1046.0], [80.6, 1046.0], [80.7, 1046.0], [80.8, 1046.0], [80.9, 1049.0], [81.0, 1049.0], [81.1, 1049.0], [81.2, 1049.0], [81.3, 1049.0], [81.4, 1051.0], [81.5, 1051.0], [81.6, 1051.0], [81.7, 1051.0], [81.8, 1051.0], [81.9, 1052.0], [82.0, 1052.0], [82.1, 1052.0], [82.2, 1052.0], [82.3, 1052.0], [82.4, 1052.0], [82.5, 1052.0], [82.6, 1052.0], [82.7, 1052.0], [82.8, 1052.0], [82.9, 1052.0], [83.0, 1052.0], [83.1, 1052.0], [83.2, 1052.0], [83.3, 1052.0], [83.4, 1052.0], [83.5, 1052.0], [83.6, 1052.0], [83.7, 1052.0], [83.8, 1052.0], [83.9, 1053.0], [84.0, 1053.0], [84.1, 1053.0], [84.2, 1053.0], [84.3, 1053.0], [84.4, 1058.0], [84.5, 1058.0], [84.6, 1058.0], [84.7, 1058.0], [84.8, 1058.0], [84.9, 1060.0], [85.0, 1060.0], [85.1, 1060.0], [85.2, 1060.0], [85.3, 1064.0], [85.4, 1064.0], [85.5, 1064.0], [85.6, 1064.0], [85.7, 1064.0], [85.8, 1065.0], [85.9, 1065.0], [86.0, 1065.0], [86.1, 1065.0], [86.2, 1065.0], [86.3, 1071.0], [86.4, 1071.0], [86.5, 1071.0], [86.6, 1071.0], [86.7, 1071.0], [86.8, 1072.0], [86.9, 1072.0], [87.0, 1072.0], [87.1, 1072.0], [87.2, 1072.0], [87.3, 1076.0], [87.4, 1076.0], [87.5, 1076.0], [87.6, 1076.0], [87.7, 1076.0], [87.8, 1091.0], [87.9, 1091.0], [88.0, 1091.0], [88.1, 1091.0], [88.2, 1091.0], [88.3, 1092.0], [88.4, 1092.0], [88.5, 1092.0], [88.6, 1092.0], [88.7, 1092.0], [88.8, 1092.0], [88.9, 1092.0], [89.0, 1092.0], [89.1, 1092.0], [89.2, 1092.0], [89.3, 1094.0], [89.4, 1094.0], [89.5, 1094.0], [89.6, 1094.0], [89.7, 1094.0], [89.8, 1098.0], [89.9, 1098.0], [90.0, 1098.0], [90.1, 1098.0], [90.2, 1099.0], [90.3, 1099.0], [90.4, 1099.0], [90.5, 1099.0], [90.6, 1099.0], [90.7, 1099.0], [90.8, 1099.0], [90.9, 1099.0], [91.0, 1099.0], [91.1, 1099.0], [91.2, 1100.0], [91.3, 1100.0], [91.4, 1100.0], [91.5, 1100.0], [91.6, 1100.0], [91.7, 1110.0], [91.8, 1110.0], [91.9, 1110.0], [92.0, 1110.0], [92.1, 1110.0], [92.2, 1116.0], [92.3, 1116.0], [92.4, 1116.0], [92.5, 1116.0], [92.6, 1116.0], [92.7, 1121.0], [92.8, 1121.0], [92.9, 1121.0], [93.0, 1121.0], [93.1, 1121.0], [93.2, 1123.0], [93.3, 1123.0], [93.4, 1123.0], [93.5, 1123.0], [93.6, 1123.0], [93.7, 1125.0], [93.8, 1125.0], [93.9, 1125.0], [94.0, 1125.0], [94.1, 1125.0], [94.2, 1133.0], [94.3, 1133.0], [94.4, 1133.0], [94.5, 1133.0], [94.6, 1133.0], [94.7, 1135.0], [94.8, 1135.0], [94.9, 1135.0], [95.0, 1135.0], [95.1, 1148.0], [95.2, 1148.0], [95.3, 1148.0], [95.4, 1148.0], [95.5, 1148.0], [95.6, 1153.0], [95.7, 1153.0], [95.8, 1153.0], [95.9, 1153.0], [96.0, 1153.0], [96.1, 1155.0], [96.2, 1155.0], [96.3, 1155.0], [96.4, 1155.0], [96.5, 1155.0], [96.6, 1169.0], [96.7, 1169.0], [96.8, 1169.0], [96.9, 1169.0], [97.0, 1169.0], [97.1, 1174.0], [97.2, 1174.0], [97.3, 1174.0], [97.4, 1174.0], [97.5, 1174.0], [97.6, 1198.0], [97.7, 1198.0], [97.8, 1198.0], [97.9, 1198.0], [98.0, 1198.0], [98.1, 1208.0], [98.2, 1208.0], [98.3, 1208.0], [98.4, 1208.0], [98.5, 1208.0], [98.6, 1246.0], [98.7, 1246.0], [98.8, 1246.0], [98.9, 1246.0], [99.0, 1246.0], [99.1, 1297.0], [99.2, 1297.0], [99.3, 1297.0], [99.4, 1297.0], [99.5, 1297.0], [99.6, 1482.0], [99.7, 1482.0], [99.8, 1482.0], [99.9, 1482.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 116.0, "series": [{"data": [[300.0, 25.0], [600.0, 7.0], [1200.0, 1.0], [700.0, 2.0], [200.0, 116.0], [400.0, 35.0], [800.0, 2.0], [900.0, 2.0], [500.0, 14.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[8400.0, 2.0], [8700.0, 1.0], [600.0, 22.0], [9600.0, 1.0], [10000.0, 1.0], [10100.0, 37.0], [700.0, 68.0], [800.0, 13.0], [900.0, 1.0], [1600.0, 1.0], [1700.0, 6.0], [1800.0, 8.0], [1900.0, 13.0], [2000.0, 5.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 7.0], [2400.0, 2.0], [2600.0, 2.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 3.0], [3300.0, 7.0], [3200.0, 6.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 5.0], [3600.0, 3.0], [3900.0, 1.0], [4000.0, 4.0], [4200.0, 2.0], [4100.0, 1.0], [4600.0, 1.0], [5300.0, 1.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 16.0], [5700.0, 6.0], [5900.0, 7.0], [6000.0, 17.0], [6100.0, 9.0], [6300.0, 2.0], [6400.0, 1.0], [7300.0, 1.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[8200.0, 1.0], [1100.0, 5.0], [1200.0, 29.0], [1300.0, 51.0], [1400.0, 13.0], [1500.0, 1.0], [1600.0, 1.0], [42600.0, 1.0], [42500.0, 1.0], [43300.0, 2.0], [3400.0, 2.0], [3500.0, 2.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 1.0], [4300.0, 2.0], [4600.0, 3.0], [4400.0, 1.0], [4500.0, 2.0], [4700.0, 5.0], [4800.0, 1.0], [4900.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [5200.0, 2.0], [5500.0, 2.0], [5400.0, 1.0], [6100.0, 1.0], [6000.0, 1.0], [6300.0, 5.0], [6200.0, 2.0], [6600.0, 2.0], [6400.0, 7.0], [6500.0, 6.0], [6900.0, 10.0], [6800.0, 9.0], [6700.0, 6.0], [7100.0, 6.0], [7000.0, 3.0], [7300.0, 1.0], [7200.0, 5.0], [7500.0, 3.0], [7700.0, 1.0], [8100.0, 2.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[600.0, 8.0], [700.0, 22.0], [800.0, 14.0], [900.0, 7.0], [1000.0, 6.0], [1100.0, 1.0], [300.0, 75.0], [1200.0, 5.0], [1300.0, 3.0], [1400.0, 7.0], [1500.0, 4.0], [400.0, 31.0], [1600.0, 10.0], [1700.0, 2.0], [1800.0, 4.0], [1900.0, 1.0], [500.0, 4.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1100.0, 14.0], [300.0, 4.0], [1200.0, 3.0], [600.0, 2.0], [1400.0, 1.0], [700.0, 4.0], [400.0, 88.0], [800.0, 11.0], [900.0, 25.0], [500.0, 13.0], [1000.0, 39.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 43300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 96.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 414.0, "series": [{"data": [[0.0, 375.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 414.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 231.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 96.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7123061E12, "maxY": 52.34999999999996, "series": [{"data": [[1.71230622E12, 1.0], [1.71230634E12, 1.0], [1.71230616E12, 1.0], [1.71230628E12, 1.0], [1.7123061E12, 1.0], [1.7123064E12, 1.0]], "isOverall": false, "label": "pg_tileserv_1", "isController": false}, {"data": [[1.71230652E12, 8.96381578947368], [1.71230646E12, 10.0], [1.7123064E12, 10.0]], "isOverall": false, "label": "pg_tileserv_10", "isController": false}, {"data": [[1.7123067E12, 4.0], [1.71230664E12, 4.0], [1.71230676E12, 3.25], [1.71230658E12, 52.34999999999996]], "isOverall": false, "label": "pg_tileserv_100", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230676E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 256.25, "minX": 1.0, "maxY": 42973.75, "series": [{"data": [[1.0, 287.81372549019613], [8.0, 415.5], [4.0, 256.25], [2.0, 297.5], [9.0, 689.5], [10.0, 570.657894736842], [5.0, 284.2666666666666], [6.0, 307.95652173913044], [3.0, 331.54545454545456], [7.0, 365.3333333333333]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[4.024509803921569, 354.61274509803917]], "isOverall": false, "label": "Test_5-Aggregated", "isController": false}, {"data": [[5.0, 10162.0], [6.0, 10178.0], [7.0, 10176.0], [9.0, 10167.5], [10.0, 3012.420000000001], [11.0, 10175.0], [12.0, 10175.0], [13.0, 10173.0], [15.0, 10153.0], [16.0, 10156.0], [17.0, 10161.5], [19.0, 10171.0], [21.0, 10162.0], [24.0, 10169.666666666666], [25.0, 10154.0], [27.0, 10169.5], [28.0, 10168.0], [29.0, 10167.0], [30.0, 10166.0], [33.0, 10161.0], [32.0, 10166.0], [35.0, 10161.0], [37.0, 10162.0], [38.0, 10152.0], [41.0, 10158.666666666666], [43.0, 6438.0], [42.0, 9071.6], [45.0, 6179.0], [44.0, 6334.0], [47.0, 6146.0], [46.0, 6156.0], [49.0, 6112.0], [48.0, 6137.0], [51.0, 6110.0], [50.0, 6140.0], [53.0, 6128.0], [52.0, 6101.0], [55.0, 6086.0], [54.0, 6092.0], [57.0, 6099.0], [56.0, 6076.0], [59.0, 6057.0], [58.0, 6062.0], [61.0, 6058.5], [63.0, 6055.0], [62.0, 6052.0], [66.0, 6032.0], [65.0, 6011.0], [64.0, 6038.0], [71.0, 5962.0], [70.0, 5985.0], [68.0, 6015.5], [75.0, 5905.0], [74.0, 5928.0], [73.0, 5946.0], [72.0, 5958.0], [79.0, 5857.0], [78.0, 5882.0], [77.0, 5874.0], [76.0, 5897.0], [83.0, 5831.0], [82.0, 5859.0], [81.0, 5855.0], [86.0, 5830.0], [84.0, 5841.0], [91.0, 5785.0], [90.0, 5803.0], [89.0, 5808.0], [88.0, 5837.0], [95.0, 5762.5], [93.0, 5764.0], [92.0, 5770.0], [98.0, 722.0], [97.0, 728.0], [96.0, 5762.0], [100.0, 722.5], [1.0, 741.8099999999998]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[21.11666666666666, 3741.81]], "isOverall": false, "label": "Test_1-Aggregated", "isController": false}, {"data": [[1.0, 1329.8500000000001], [4.0, 42973.75], [10.0, 6191.545454545455], [7.0, 8142.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[5.455882352941175, 4539.142156862746]], "isOverall": false, "label": "Test_2-Aggregated", "isController": false}, {"data": [[1.0, 381.61000000000007], [4.0, 363.5], [10.0, 1069.9300000000005]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[5.470588235294117, 718.6666666666666]], "isOverall": false, "label": "Test_3-Aggregated", "isController": false}, {"data": [[1.0, 460.8100000000001], [8.0, 840.0], [4.0, 462.25], [9.0, 874.0], [10.0, 1025.2282608695655], [6.0, 700.2], [7.0, 844.0]], "isOverall": false, "label": "Test_4", "isController": false}, {"data": [[5.343137254901961, 727.0098039215685]], "isOverall": false, "label": "Test_4-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 10.266666666666667, "minX": 1.7123061E12, "maxY": 247520.83333333334, "series": [{"data": [[1.71230622E12, 108911.73333333334], [1.7123067E12, 3843.0], [1.71230652E12, 247520.83333333334], [1.71230634E12, 148581.3], [1.71230616E12, 126062.05], [1.71230664E12, 9681.183333333332], [1.71230646E12, 217866.66666666666], [1.71230628E12, 127333.46666666666], [1.71230676E12, 5085.966666666666], [1.7123061E12, 135142.25], [1.71230658E12, 8427.166666666666], [1.7123064E12, 210900.41666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71230622E12, 465.0], [1.7123067E12, 10.266666666666667], [1.71230652E12, 894.0], [1.71230634E12, 349.06666666666666], [1.71230616E12, 358.05], [1.71230664E12, 41.333333333333336], [1.71230646E12, 885.75], [1.71230628E12, 448.46666666666664], [1.71230676E12, 20.733333333333334], [1.7123061E12, 175.95], [1.71230658E12, 255.0], [1.7123064E12, 550.3833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230676E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 287.3500000000001, "minX": 1.7123061E12, "maxY": 42973.75, "series": [{"data": [[1.71230652E12, 424.2199999999999], [1.71230676E12, 296.0], [1.7123064E12, 287.3500000000001]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 746.8709677419355], [1.71230646E12, 6334.0], [1.7123061E12, 739.5362318840579], [1.71230658E12, 7471.2], [1.7123064E12, 2837.6000000000013]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 1336.933333333333], [1.71230652E12, 4466.357142857143], [1.71230616E12, 1335.0740740740737], [1.71230664E12, 42973.75], [1.71230646E12, 6581.621951219512], [1.71230628E12, 1313.4285714285713], [1.7123064E12, 4720.75]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123067E12, 363.5], [1.71230652E12, 1000.2777777777776], [1.71230634E12, 382.8421052631579], [1.71230646E12, 1696.8], [1.71230628E12, 380.85483870967744]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230652E12, 1003.8000000000003], [1.71230634E12, 460.90816326530626], [1.71230676E12, 462.25], [1.7123064E12, 456.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230676E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123061E12, "maxY": 7470.819999999999, "series": [{"data": [[1.71230652E12, 422.3999999999998], [1.71230676E12, 296.0], [1.7123064E12, 287.24999999999983]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 716.7096774193549], [1.71230646E12, 6324.8], [1.7123061E12, 709.9275362318841], [1.71230658E12, 7470.819999999999], [1.7123064E12, 2820.81052631579]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 0.0], [1.71230652E12, 0.0], [1.71230616E12, 0.0], [1.71230664E12, 0.0], [1.71230646E12, 0.0], [1.71230628E12, 0.0], [1.7123064E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123067E12, 354.0], [1.71230652E12, 986.2000000000002], [1.71230634E12, 375.36842105263145], [1.71230646E12, 1677.4], [1.71230628E12, 364.54838709677415]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230652E12, 984.8300000000003], [1.71230634E12, 429.79591836734687], [1.71230676E12, 448.5], [1.7123064E12, 430.5]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230676E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123061E12, "maxY": 1.101449275362319, "series": [{"data": [[1.71230652E12, 0.6000000000000003], [1.71230676E12, 1.0], [1.7123064E12, 0.51]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 0.7419354838709677], [1.71230646E12, 0.6], [1.7123061E12, 1.101449275362319], [1.71230658E12, 0.59], [1.7123064E12, 0.6210526315789474]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 0.0], [1.71230652E12, 0.0], [1.71230616E12, 0.0], [1.71230664E12, 0.0], [1.71230646E12, 0.0], [1.71230628E12, 0.0], [1.7123064E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.7123067E12, 0.5], [1.71230652E12, 0.4777777777777777], [1.71230634E12, 0.6052631578947368], [1.71230646E12, 0.7], [1.71230628E12, 0.6612903225806449]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230652E12, 0.49999999999999994], [1.71230634E12, 0.5816326530612247], [1.71230676E12, 1.0], [1.7123064E12, 1.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230676E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 200.0, "minX": 1.7123061E12, "maxY": 43349.0, "series": [{"data": [[1.71230622E12, 1454.0], [1.7123067E12, 398.0], [1.71230652E12, 5526.0], [1.71230634E12, 566.0], [1.71230616E12, 1625.0], [1.71230664E12, 43349.0], [1.71230646E12, 8205.0], [1.71230628E12, 1442.0], [1.71230676E12, 510.0], [1.7123061E12, 918.0], [1.71230658E12, 9613.0], [1.7123064E12, 5661.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71230622E12, 1416.2], [1.7123067E12, 398.0], [1.71230652E12, 1478.0], [1.71230634E12, 492.3], [1.71230616E12, 1384.9], [1.71230664E12, 43349.0], [1.71230646E12, 7305.2], [1.71230628E12, 1340.1000000000001], [1.71230676E12, 510.0], [1.7123061E12, 829.0], [1.71230658E12, 9613.0], [1.7123064E12, 3769.2000000000007]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71230622E12, 1454.0], [1.7123067E12, 398.0], [1.71230652E12, 5216.349999999999], [1.71230634E12, 559.3399999999999], [1.71230616E12, 1625.0], [1.71230664E12, 43349.0], [1.71230646E12, 8205.0], [1.71230628E12, 1442.0], [1.71230676E12, 510.0], [1.7123061E12, 918.0], [1.71230658E12, 9613.0], [1.7123064E12, 5561.62]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71230622E12, 1442.0], [1.7123067E12, 398.0], [1.71230652E12, 1796.25], [1.71230634E12, 524.0], [1.71230616E12, 1485.25], [1.71230664E12, 43349.0], [1.71230646E12, 7594.299999999998], [1.71230628E12, 1396.45], [1.71230676E12, 510.0], [1.7123061E12, 873.5], [1.71230658E12, 9613.0], [1.7123064E12, 4262.999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71230622E12, 1189.0], [1.7123067E12, 331.0], [1.71230652E12, 206.0], [1.71230634E12, 323.0], [1.71230616E12, 657.0], [1.71230664E12, 42530.0], [1.71230646E12, 1365.0], [1.71230628E12, 318.0], [1.71230676E12, 207.0], [1.7123061E12, 627.0], [1.71230658E12, 8485.0], [1.7123064E12, 200.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71230622E12, 1341.0], [1.7123067E12, 362.5], [1.71230652E12, 858.5], [1.71230634E12, 448.0], [1.71230616E12, 837.0], [1.71230664E12, 43008.0], [1.71230646E12, 6661.0], [1.71230628E12, 410.0], [1.71230676E12, 416.5], [1.7123061E12, 732.0], [1.71230658E12, 8599.5], [1.7123064E12, 488.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230676E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 260.0, "minX": 1.0, "maxY": 10175.0, "series": [{"data": [[2.0, 487.0], [8.0, 3235.5], [9.0, 1051.0], [10.0, 1047.5], [11.0, 793.0], [3.0, 411.0], [12.0, 913.0], [13.0, 624.5], [14.0, 932.5], [15.0, 581.5], [1.0, 1304.0], [4.0, 273.0], [17.0, 689.0], [5.0, 1924.0], [21.0, 260.0], [6.0, 3452.5], [7.0, 1962.0], [30.0, 9613.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 725.0], [9.0, 10175.0], [5.0, 6179.0], [49.0, 5958.0], [30.0, 10162.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 49.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 10175.0, "series": [{"data": [[2.0, 443.5], [8.0, 1784.5], [9.0, 1045.0], [10.0, 1042.0], [11.0, 781.0], [3.0, 364.0], [12.0, 891.0], [13.0, 624.0], [14.0, 922.0], [15.0, 581.0], [1.0, 0.0], [4.0, 267.5], [17.0, 619.5], [5.0, 1487.0], [21.0, 260.0], [6.0, 1115.5], [7.0, 452.0], [30.0, 9605.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 725.0], [9.0, 10175.0], [5.0, 6179.0], [49.0, 5958.0], [30.0, 10162.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 49.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7123061E12, "maxY": 4.9, "series": [{"data": [[1.71230622E12, 0.75], [1.7123067E12, 0.06666666666666667], [1.71230652E12, 4.9], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230646E12, 1.6166666666666667], [1.71230628E12, 1.5], [1.71230676E12, 0.13333333333333333], [1.7123061E12, 1.1666666666666667], [1.71230658E12, 1.7333333333333334], [1.7123064E12, 3.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230676E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7123061E12, "maxY": 5.066666666666666, "series": [{"data": [[1.71230622E12, 0.75], [1.7123067E12, 0.06666666666666667], [1.71230652E12, 5.066666666666666], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230664E12, 0.06666666666666667], [1.71230646E12, 1.6166666666666667], [1.71230628E12, 1.5], [1.71230676E12, 0.13333333333333333], [1.7123061E12, 1.15], [1.71230658E12, 0.06666666666666667], [1.7123064E12, 3.35]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71230658E12, 1.6]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71230676E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7123061E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.71230616E12, 0.5166666666666667], [1.71230646E12, 0.08333333333333333], [1.7123061E12, 1.15], [1.71230658E12, 0.06666666666666667], [1.7123064E12, 1.5833333333333333]], "isOverall": false, "label": "Test_1-success", "isController": false}, {"data": [[1.71230658E12, 1.6]], "isOverall": false, "label": "Test_1-failure", "isController": false}, {"data": [[1.71230652E12, 1.6666666666666667], [1.71230676E12, 0.06666666666666667], [1.7123064E12, 1.6666666666666667]], "isOverall": false, "label": "Test_5-success", "isController": false}, {"data": [[1.71230622E12, 0.75], [1.71230652E12, 0.23333333333333334], [1.71230616E12, 0.45], [1.71230664E12, 0.06666666666666667], [1.71230646E12, 1.3666666666666667], [1.71230628E12, 0.4666666666666667], [1.7123064E12, 0.06666666666666667]], "isOverall": false, "label": "Test_2-success", "isController": false}, {"data": [[1.71230652E12, 1.6666666666666667], [1.71230634E12, 1.6333333333333333], [1.71230676E12, 0.06666666666666667], [1.7123064E12, 0.03333333333333333]], "isOverall": false, "label": "Test_4-success", "isController": false}, {"data": [[1.7123067E12, 0.06666666666666667], [1.71230652E12, 1.5], [1.71230634E12, 0.6333333333333333], [1.71230646E12, 0.16666666666666666], [1.71230628E12, 1.0333333333333334]], "isOverall": false, "label": "Test_3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230676E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.7123061E12, "maxY": 5.066666666666666, "series": [{"data": [[1.71230622E12, 0.75], [1.7123067E12, 0.06666666666666667], [1.71230652E12, 5.066666666666666], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230664E12, 0.06666666666666667], [1.71230646E12, 1.6166666666666667], [1.71230628E12, 1.5], [1.71230676E12, 0.13333333333333333], [1.7123061E12, 1.15], [1.71230658E12, 0.06666666666666667], [1.7123064E12, 3.35]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71230658E12, 1.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71230676E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

