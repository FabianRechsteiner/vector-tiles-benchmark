/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 200.0, "minX": 0.0, "maxY": 1625.0, "series": [{"data": [[0.0, 200.0], [0.1, 200.0], [0.2, 200.0], [0.3, 200.0], [0.4, 200.0], [0.5, 200.0], [0.6, 200.0], [0.7, 200.0], [0.8, 200.0], [0.9, 200.0], [1.0, 204.0], [1.1, 204.0], [1.2, 204.0], [1.3, 204.0], [1.4, 204.0], [1.5, 204.0], [1.6, 204.0], [1.7, 204.0], [1.8, 204.0], [1.9, 204.0], [2.0, 213.0], [2.1, 213.0], [2.2, 213.0], [2.3, 213.0], [2.4, 213.0], [2.5, 213.0], [2.6, 213.0], [2.7, 213.0], [2.8, 213.0], [2.9, 213.0], [3.0, 214.0], [3.1, 214.0], [3.2, 214.0], [3.3, 214.0], [3.4, 214.0], [3.5, 214.0], [3.6, 214.0], [3.7, 214.0], [3.8, 214.0], [3.9, 214.0], [4.0, 215.0], [4.1, 215.0], [4.2, 215.0], [4.3, 215.0], [4.4, 215.0], [4.5, 215.0], [4.6, 215.0], [4.7, 215.0], [4.8, 215.0], [4.9, 215.0], [5.0, 219.0], [5.1, 219.0], [5.2, 219.0], [5.3, 219.0], [5.4, 219.0], [5.5, 219.0], [5.6, 219.0], [5.7, 219.0], [5.8, 219.0], [5.9, 219.0], [6.0, 220.0], [6.1, 220.0], [6.2, 220.0], [6.3, 220.0], [6.4, 220.0], [6.5, 220.0], [6.6, 220.0], [6.7, 220.0], [6.8, 220.0], [6.9, 220.0], [7.0, 239.0], [7.1, 239.0], [7.2, 239.0], [7.3, 239.0], [7.4, 239.0], [7.5, 239.0], [7.6, 239.0], [7.7, 239.0], [7.8, 239.0], [7.9, 239.0], [8.0, 241.0], [8.1, 241.0], [8.2, 241.0], [8.3, 241.0], [8.4, 241.0], [8.5, 241.0], [8.6, 241.0], [8.7, 241.0], [8.8, 241.0], [8.9, 241.0], [9.0, 242.0], [9.1, 242.0], [9.2, 242.0], [9.3, 242.0], [9.4, 242.0], [9.5, 242.0], [9.6, 242.0], [9.7, 242.0], [9.8, 242.0], [9.9, 242.0], [10.0, 242.0], [10.1, 242.0], [10.2, 242.0], [10.3, 242.0], [10.4, 242.0], [10.5, 242.0], [10.6, 242.0], [10.7, 242.0], [10.8, 242.0], [10.9, 242.0], [11.0, 242.0], [11.1, 242.0], [11.2, 242.0], [11.3, 242.0], [11.4, 242.0], [11.5, 242.0], [11.6, 242.0], [11.7, 242.0], [11.8, 242.0], [11.9, 242.0], [12.0, 243.0], [12.1, 243.0], [12.2, 243.0], [12.3, 243.0], [12.4, 243.0], [12.5, 243.0], [12.6, 243.0], [12.7, 243.0], [12.8, 243.0], [12.9, 243.0], [13.0, 244.0], [13.1, 244.0], [13.2, 244.0], [13.3, 244.0], [13.4, 244.0], [13.5, 244.0], [13.6, 244.0], [13.7, 244.0], [13.8, 244.0], [13.9, 244.0], [14.0, 245.0], [14.1, 245.0], [14.2, 245.0], [14.3, 245.0], [14.4, 245.0], [14.5, 245.0], [14.6, 245.0], [14.7, 245.0], [14.8, 245.0], [14.9, 245.0], [15.0, 246.0], [15.1, 246.0], [15.2, 246.0], [15.3, 246.0], [15.4, 246.0], [15.5, 246.0], [15.6, 246.0], [15.7, 246.0], [15.8, 246.0], [15.9, 246.0], [16.0, 246.0], [16.1, 246.0], [16.2, 246.0], [16.3, 246.0], [16.4, 246.0], [16.5, 246.0], [16.6, 246.0], [16.7, 246.0], [16.8, 246.0], [16.9, 246.0], [17.0, 247.0], [17.1, 247.0], [17.2, 247.0], [17.3, 247.0], [17.4, 247.0], [17.5, 247.0], [17.6, 247.0], [17.7, 247.0], [17.8, 247.0], [17.9, 247.0], [18.0, 247.0], [18.1, 247.0], [18.2, 247.0], [18.3, 247.0], [18.4, 247.0], [18.5, 247.0], [18.6, 247.0], [18.7, 247.0], [18.8, 247.0], [18.9, 247.0], [19.0, 248.0], [19.1, 248.0], [19.2, 248.0], [19.3, 248.0], [19.4, 248.0], [19.5, 248.0], [19.6, 248.0], [19.7, 248.0], [19.8, 248.0], [19.9, 248.0], [20.0, 248.0], [20.1, 248.0], [20.2, 248.0], [20.3, 248.0], [20.4, 248.0], [20.5, 248.0], [20.6, 248.0], [20.7, 248.0], [20.8, 248.0], [20.9, 248.0], [21.0, 249.0], [21.1, 249.0], [21.2, 249.0], [21.3, 249.0], [21.4, 249.0], [21.5, 249.0], [21.6, 249.0], [21.7, 249.0], [21.8, 249.0], [21.9, 249.0], [22.0, 249.0], [22.1, 249.0], [22.2, 249.0], [22.3, 249.0], [22.4, 249.0], [22.5, 249.0], [22.6, 249.0], [22.7, 249.0], [22.8, 249.0], [22.9, 249.0], [23.0, 250.0], [23.1, 250.0], [23.2, 250.0], [23.3, 250.0], [23.4, 250.0], [23.5, 250.0], [23.6, 250.0], [23.7, 250.0], [23.8, 250.0], [23.9, 250.0], [24.0, 250.0], [24.1, 250.0], [24.2, 250.0], [24.3, 250.0], [24.4, 250.0], [24.5, 250.0], [24.6, 250.0], [24.7, 250.0], [24.8, 250.0], [24.9, 250.0], [25.0, 250.0], [25.1, 250.0], [25.2, 250.0], [25.3, 250.0], [25.4, 250.0], [25.5, 250.0], [25.6, 250.0], [25.7, 250.0], [25.8, 250.0], [25.9, 250.0], [26.0, 251.0], [26.1, 251.0], [26.2, 251.0], [26.3, 251.0], [26.4, 251.0], [26.5, 251.0], [26.6, 251.0], [26.7, 251.0], [26.8, 251.0], [26.9, 251.0], [27.0, 251.0], [27.1, 251.0], [27.2, 251.0], [27.3, 251.0], [27.4, 251.0], [27.5, 251.0], [27.6, 251.0], [27.7, 251.0], [27.8, 251.0], [27.9, 251.0], [28.0, 251.0], [28.1, 251.0], [28.2, 251.0], [28.3, 251.0], [28.4, 251.0], [28.5, 251.0], [28.6, 251.0], [28.7, 251.0], [28.8, 251.0], [28.9, 251.0], [29.0, 252.0], [29.1, 252.0], [29.2, 252.0], [29.3, 252.0], [29.4, 252.0], [29.5, 252.0], [29.6, 252.0], [29.7, 252.0], [29.8, 252.0], [29.9, 252.0], [30.0, 252.0], [30.1, 252.0], [30.2, 252.0], [30.3, 252.0], [30.4, 252.0], [30.5, 252.0], [30.6, 252.0], [30.7, 252.0], [30.8, 252.0], [30.9, 252.0], [31.0, 252.0], [31.1, 252.0], [31.2, 252.0], [31.3, 252.0], [31.4, 252.0], [31.5, 252.0], [31.6, 252.0], [31.7, 252.0], [31.8, 252.0], [31.9, 252.0], [32.0, 252.0], [32.1, 252.0], [32.2, 252.0], [32.3, 252.0], [32.4, 252.0], [32.5, 252.0], [32.6, 252.0], [32.7, 252.0], [32.8, 252.0], [32.9, 252.0], [33.0, 252.0], [33.1, 252.0], [33.2, 252.0], [33.3, 252.0], [33.4, 252.0], [33.5, 252.0], [33.6, 252.0], [33.7, 252.0], [33.8, 252.0], [33.9, 252.0], [34.0, 253.0], [34.1, 253.0], [34.2, 253.0], [34.3, 253.0], [34.4, 253.0], [34.5, 253.0], [34.6, 253.0], [34.7, 253.0], [34.8, 253.0], [34.9, 253.0], [35.0, 253.0], [35.1, 253.0], [35.2, 253.0], [35.3, 253.0], [35.4, 253.0], [35.5, 253.0], [35.6, 253.0], [35.7, 253.0], [35.8, 253.0], [35.9, 253.0], [36.0, 253.0], [36.1, 253.0], [36.2, 253.0], [36.3, 253.0], [36.4, 253.0], [36.5, 253.0], [36.6, 253.0], [36.7, 253.0], [36.8, 253.0], [36.9, 253.0], [37.0, 254.0], [37.1, 254.0], [37.2, 254.0], [37.3, 254.0], [37.4, 254.0], [37.5, 254.0], [37.6, 254.0], [37.7, 254.0], [37.8, 254.0], [37.9, 254.0], [38.0, 254.0], [38.1, 254.0], [38.2, 254.0], [38.3, 254.0], [38.4, 254.0], [38.5, 254.0], [38.6, 254.0], [38.7, 254.0], [38.8, 254.0], [38.9, 254.0], [39.0, 254.0], [39.1, 254.0], [39.2, 254.0], [39.3, 254.0], [39.4, 254.0], [39.5, 254.0], [39.6, 254.0], [39.7, 254.0], [39.8, 254.0], [39.9, 254.0], [40.0, 255.0], [40.1, 255.0], [40.2, 255.0], [40.3, 255.0], [40.4, 255.0], [40.5, 255.0], [40.6, 255.0], [40.7, 255.0], [40.8, 255.0], [40.9, 255.0], [41.0, 255.0], [41.1, 255.0], [41.2, 255.0], [41.3, 255.0], [41.4, 255.0], [41.5, 255.0], [41.6, 255.0], [41.7, 255.0], [41.8, 255.0], [41.9, 255.0], [42.0, 256.0], [42.1, 256.0], [42.2, 256.0], [42.3, 256.0], [42.4, 256.0], [42.5, 256.0], [42.6, 256.0], [42.7, 256.0], [42.8, 256.0], [42.9, 256.0], [43.0, 258.0], [43.1, 258.0], [43.2, 258.0], [43.3, 258.0], [43.4, 258.0], [43.5, 258.0], [43.6, 258.0], [43.7, 258.0], [43.8, 258.0], [43.9, 258.0], [44.0, 258.0], [44.1, 258.0], [44.2, 258.0], [44.3, 258.0], [44.4, 258.0], [44.5, 258.0], [44.6, 258.0], [44.7, 258.0], [44.8, 258.0], [44.9, 258.0], [45.0, 260.0], [45.1, 260.0], [45.2, 260.0], [45.3, 260.0], [45.4, 260.0], [45.5, 260.0], [45.6, 260.0], [45.7, 260.0], [45.8, 260.0], [45.9, 260.0], [46.0, 260.0], [46.1, 260.0], [46.2, 260.0], [46.3, 260.0], [46.4, 260.0], [46.5, 260.0], [46.6, 260.0], [46.7, 260.0], [46.8, 260.0], [46.9, 260.0], [47.0, 261.0], [47.1, 261.0], [47.2, 261.0], [47.3, 261.0], [47.4, 261.0], [47.5, 261.0], [47.6, 261.0], [47.7, 261.0], [47.8, 261.0], [47.9, 261.0], [48.0, 261.0], [48.1, 261.0], [48.2, 261.0], [48.3, 261.0], [48.4, 261.0], [48.5, 261.0], [48.6, 261.0], [48.7, 261.0], [48.8, 261.0], [48.9, 261.0], [49.0, 261.0], [49.1, 261.0], [49.2, 261.0], [49.3, 261.0], [49.4, 261.0], [49.5, 261.0], [49.6, 261.0], [49.7, 261.0], [49.8, 261.0], [49.9, 261.0], [50.0, 262.0], [50.1, 262.0], [50.2, 262.0], [50.3, 262.0], [50.4, 262.0], [50.5, 262.0], [50.6, 262.0], [50.7, 262.0], [50.8, 262.0], [50.9, 262.0], [51.0, 262.0], [51.1, 262.0], [51.2, 262.0], [51.3, 262.0], [51.4, 262.0], [51.5, 262.0], [51.6, 262.0], [51.7, 262.0], [51.8, 262.0], [51.9, 262.0], [52.0, 262.0], [52.1, 262.0], [52.2, 262.0], [52.3, 262.0], [52.4, 262.0], [52.5, 262.0], [52.6, 262.0], [52.7, 262.0], [52.8, 262.0], [52.9, 262.0], [53.0, 262.0], [53.1, 262.0], [53.2, 262.0], [53.3, 262.0], [53.4, 262.0], [53.5, 262.0], [53.6, 262.0], [53.7, 262.0], [53.8, 262.0], [53.9, 262.0], [54.0, 263.0], [54.1, 263.0], [54.2, 263.0], [54.3, 263.0], [54.4, 263.0], [54.5, 263.0], [54.6, 263.0], [54.7, 263.0], [54.8, 263.0], [54.9, 263.0], [55.0, 263.0], [55.1, 263.0], [55.2, 263.0], [55.3, 263.0], [55.4, 263.0], [55.5, 263.0], [55.6, 263.0], [55.7, 263.0], [55.8, 263.0], [55.9, 263.0], [56.0, 264.0], [56.1, 264.0], [56.2, 264.0], [56.3, 264.0], [56.4, 264.0], [56.5, 264.0], [56.6, 264.0], [56.7, 264.0], [56.8, 264.0], [56.9, 264.0], [57.0, 264.0], [57.1, 264.0], [57.2, 264.0], [57.3, 264.0], [57.4, 264.0], [57.5, 264.0], [57.6, 264.0], [57.7, 264.0], [57.8, 264.0], [57.9, 264.0], [58.0, 265.0], [58.1, 265.0], [58.2, 265.0], [58.3, 265.0], [58.4, 265.0], [58.5, 265.0], [58.6, 265.0], [58.7, 265.0], [58.8, 265.0], [58.9, 265.0], [59.0, 266.0], [59.1, 266.0], [59.2, 266.0], [59.3, 266.0], [59.4, 266.0], [59.5, 266.0], [59.6, 266.0], [59.7, 266.0], [59.8, 266.0], [59.9, 266.0], [60.0, 266.0], [60.1, 266.0], [60.2, 266.0], [60.3, 266.0], [60.4, 266.0], [60.5, 266.0], [60.6, 266.0], [60.7, 266.0], [60.8, 266.0], [60.9, 266.0], [61.0, 267.0], [61.1, 267.0], [61.2, 267.0], [61.3, 267.0], [61.4, 267.0], [61.5, 267.0], [61.6, 267.0], [61.7, 267.0], [61.8, 267.0], [61.9, 267.0], [62.0, 267.0], [62.1, 267.0], [62.2, 267.0], [62.3, 267.0], [62.4, 267.0], [62.5, 267.0], [62.6, 267.0], [62.7, 267.0], [62.8, 267.0], [62.9, 267.0], [63.0, 268.0], [63.1, 268.0], [63.2, 268.0], [63.3, 268.0], [63.4, 268.0], [63.5, 268.0], [63.6, 268.0], [63.7, 268.0], [63.8, 268.0], [63.9, 268.0], [64.0, 268.0], [64.1, 268.0], [64.2, 268.0], [64.3, 268.0], [64.4, 268.0], [64.5, 268.0], [64.6, 268.0], [64.7, 268.0], [64.8, 268.0], [64.9, 268.0], [65.0, 269.0], [65.1, 269.0], [65.2, 269.0], [65.3, 269.0], [65.4, 269.0], [65.5, 269.0], [65.6, 269.0], [65.7, 269.0], [65.8, 269.0], [65.9, 269.0], [66.0, 270.0], [66.1, 270.0], [66.2, 270.0], [66.3, 270.0], [66.4, 270.0], [66.5, 270.0], [66.6, 270.0], [66.7, 270.0], [66.8, 270.0], [66.9, 270.0], [67.0, 272.0], [67.1, 272.0], [67.2, 272.0], [67.3, 272.0], [67.4, 272.0], [67.5, 272.0], [67.6, 272.0], [67.7, 272.0], [67.8, 272.0], [67.9, 272.0], [68.0, 274.0], [68.1, 274.0], [68.2, 274.0], [68.3, 274.0], [68.4, 274.0], [68.5, 274.0], [68.6, 274.0], [68.7, 274.0], [68.8, 274.0], [68.9, 274.0], [69.0, 274.0], [69.1, 274.0], [69.2, 274.0], [69.3, 274.0], [69.4, 274.0], [69.5, 274.0], [69.6, 274.0], [69.7, 274.0], [69.8, 274.0], [69.9, 274.0], [70.0, 276.0], [70.1, 276.0], [70.2, 276.0], [70.3, 276.0], [70.4, 276.0], [70.5, 276.0], [70.6, 276.0], [70.7, 276.0], [70.8, 276.0], [70.9, 276.0], [71.0, 277.0], [71.1, 277.0], [71.2, 277.0], [71.3, 277.0], [71.4, 277.0], [71.5, 277.0], [71.6, 277.0], [71.7, 277.0], [71.8, 277.0], [71.9, 277.0], [72.0, 278.0], [72.1, 278.0], [72.2, 278.0], [72.3, 278.0], [72.4, 278.0], [72.5, 278.0], [72.6, 278.0], [72.7, 278.0], [72.8, 278.0], [72.9, 278.0], [73.0, 278.0], [73.1, 278.0], [73.2, 278.0], [73.3, 278.0], [73.4, 278.0], [73.5, 278.0], [73.6, 278.0], [73.7, 278.0], [73.8, 278.0], [73.9, 278.0], [74.0, 283.0], [74.1, 283.0], [74.2, 283.0], [74.3, 283.0], [74.4, 283.0], [74.5, 283.0], [74.6, 283.0], [74.7, 283.0], [74.8, 283.0], [74.9, 283.0], [75.0, 290.0], [75.1, 290.0], [75.2, 290.0], [75.3, 290.0], [75.4, 290.0], [75.5, 290.0], [75.6, 290.0], [75.7, 290.0], [75.8, 290.0], [75.9, 290.0], [76.0, 290.0], [76.1, 290.0], [76.2, 290.0], [76.3, 290.0], [76.4, 290.0], [76.5, 290.0], [76.6, 290.0], [76.7, 290.0], [76.8, 290.0], [76.9, 290.0], [77.0, 291.0], [77.1, 291.0], [77.2, 291.0], [77.3, 291.0], [77.4, 291.0], [77.5, 291.0], [77.6, 291.0], [77.7, 291.0], [77.8, 291.0], [77.9, 291.0], [78.0, 295.0], [78.1, 295.0], [78.2, 295.0], [78.3, 295.0], [78.4, 295.0], [78.5, 295.0], [78.6, 295.0], [78.7, 295.0], [78.8, 295.0], [78.9, 295.0], [79.0, 296.0], [79.1, 296.0], [79.2, 296.0], [79.3, 296.0], [79.4, 296.0], [79.5, 296.0], [79.6, 296.0], [79.7, 296.0], [79.8, 296.0], [79.9, 296.0], [80.0, 304.0], [80.1, 304.0], [80.2, 304.0], [80.3, 304.0], [80.4, 304.0], [80.5, 304.0], [80.6, 304.0], [80.7, 304.0], [80.8, 304.0], [80.9, 304.0], [81.0, 305.0], [81.1, 305.0], [81.2, 305.0], [81.3, 305.0], [81.4, 305.0], [81.5, 305.0], [81.6, 305.0], [81.7, 305.0], [81.8, 305.0], [81.9, 305.0], [82.0, 388.0], [82.1, 388.0], [82.2, 388.0], [82.3, 388.0], [82.4, 388.0], [82.5, 388.0], [82.6, 388.0], [82.7, 388.0], [82.8, 388.0], [82.9, 388.0], [83.0, 398.0], [83.1, 398.0], [83.2, 398.0], [83.3, 398.0], [83.4, 398.0], [83.5, 398.0], [83.6, 398.0], [83.7, 398.0], [83.8, 398.0], [83.9, 398.0], [84.0, 401.0], [84.1, 401.0], [84.2, 401.0], [84.3, 401.0], [84.4, 401.0], [84.5, 401.0], [84.6, 401.0], [84.7, 401.0], [84.8, 401.0], [84.9, 401.0], [85.0, 409.0], [85.1, 409.0], [85.2, 409.0], [85.3, 409.0], [85.4, 409.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 409.0], [85.9, 409.0], [86.0, 410.0], [86.1, 410.0], [86.2, 410.0], [86.3, 410.0], [86.4, 410.0], [86.5, 410.0], [86.6, 410.0], [86.7, 410.0], [86.8, 410.0], [86.9, 410.0], [87.0, 415.0], [87.1, 415.0], [87.2, 415.0], [87.3, 415.0], [87.4, 415.0], [87.5, 415.0], [87.6, 415.0], [87.7, 415.0], [87.8, 415.0], [87.9, 415.0], [88.0, 418.0], [88.1, 418.0], [88.2, 418.0], [88.3, 418.0], [88.4, 418.0], [88.5, 418.0], [88.6, 418.0], [88.7, 418.0], [88.8, 418.0], [88.9, 418.0], [89.0, 423.0], [89.1, 423.0], [89.2, 423.0], [89.3, 423.0], [89.4, 423.0], [89.5, 423.0], [89.6, 423.0], [89.7, 423.0], [89.8, 423.0], [89.9, 423.0], [90.0, 424.0], [90.1, 424.0], [90.2, 424.0], [90.3, 424.0], [90.4, 424.0], [90.5, 424.0], [90.6, 424.0], [90.7, 424.0], [90.8, 424.0], [90.9, 424.0], [91.0, 426.0], [91.1, 426.0], [91.2, 426.0], [91.3, 426.0], [91.4, 426.0], [91.5, 426.0], [91.6, 426.0], [91.7, 426.0], [91.8, 426.0], [91.9, 426.0], [92.0, 434.0], [92.1, 434.0], [92.2, 434.0], [92.3, 434.0], [92.4, 434.0], [92.5, 434.0], [92.6, 434.0], [92.7, 434.0], [92.8, 434.0], [92.9, 434.0], [93.0, 434.0], [93.1, 434.0], [93.2, 434.0], [93.3, 434.0], [93.4, 434.0], [93.5, 434.0], [93.6, 434.0], [93.7, 434.0], [93.8, 434.0], [93.9, 434.0], [94.0, 435.0], [94.1, 435.0], [94.2, 435.0], [94.3, 435.0], [94.4, 435.0], [94.5, 435.0], [94.6, 435.0], [94.7, 435.0], [94.8, 435.0], [94.9, 435.0], [95.0, 437.0], [95.1, 437.0], [95.2, 437.0], [95.3, 437.0], [95.4, 437.0], [95.5, 437.0], [95.6, 437.0], [95.7, 437.0], [95.8, 437.0], [95.9, 437.0], [96.0, 439.0], [96.1, 439.0], [96.2, 439.0], [96.3, 439.0], [96.4, 439.0], [96.5, 439.0], [96.6, 439.0], [96.7, 439.0], [96.8, 439.0], [96.9, 439.0], [97.0, 444.0], [97.1, 444.0], [97.2, 444.0], [97.3, 444.0], [97.4, 444.0], [97.5, 444.0], [97.6, 444.0], [97.7, 444.0], [97.8, 444.0], [97.9, 444.0], [98.0, 447.0], [98.1, 447.0], [98.2, 447.0], [98.3, 447.0], [98.4, 447.0], [98.5, 447.0], [98.6, 447.0], [98.7, 447.0], [98.8, 447.0], [98.9, 447.0], [99.0, 490.0], [99.1, 490.0], [99.2, 490.0], [99.3, 490.0], [99.4, 490.0], [99.5, 490.0], [99.6, 490.0], [99.7, 490.0], [99.8, 490.0], [99.9, 490.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[0.0, 627.0], [0.1, 627.0], [0.2, 627.0], [0.3, 627.0], [0.4, 627.0], [0.5, 627.0], [0.6, 627.0], [0.7, 627.0], [0.8, 627.0], [0.9, 627.0], [1.0, 637.0], [1.1, 637.0], [1.2, 637.0], [1.3, 637.0], [1.4, 637.0], [1.5, 637.0], [1.6, 637.0], [1.7, 637.0], [1.8, 637.0], [1.9, 637.0], [2.0, 638.0], [2.1, 638.0], [2.2, 638.0], [2.3, 638.0], [2.4, 638.0], [2.5, 638.0], [2.6, 638.0], [2.7, 638.0], [2.8, 638.0], [2.9, 638.0], [3.0, 644.0], [3.1, 644.0], [3.2, 644.0], [3.3, 644.0], [3.4, 644.0], [3.5, 644.0], [3.6, 644.0], [3.7, 644.0], [3.8, 644.0], [3.9, 644.0], [4.0, 657.0], [4.1, 657.0], [4.2, 657.0], [4.3, 657.0], [4.4, 657.0], [4.5, 657.0], [4.6, 657.0], [4.7, 657.0], [4.8, 657.0], [4.9, 657.0], [5.0, 658.0], [5.1, 658.0], [5.2, 658.0], [5.3, 658.0], [5.4, 658.0], [5.5, 658.0], [5.6, 658.0], [5.7, 658.0], [5.8, 658.0], [5.9, 658.0], [6.0, 664.0], [6.1, 664.0], [6.2, 664.0], [6.3, 664.0], [6.4, 664.0], [6.5, 664.0], [6.6, 664.0], [6.7, 664.0], [6.8, 664.0], [6.9, 664.0], [7.0, 668.0], [7.1, 668.0], [7.2, 668.0], [7.3, 668.0], [7.4, 668.0], [7.5, 668.0], [7.6, 668.0], [7.7, 668.0], [7.8, 668.0], [7.9, 668.0], [8.0, 671.0], [8.1, 671.0], [8.2, 671.0], [8.3, 671.0], [8.4, 671.0], [8.5, 671.0], [8.6, 671.0], [8.7, 671.0], [8.8, 671.0], [8.9, 671.0], [9.0, 673.0], [9.1, 673.0], [9.2, 673.0], [9.3, 673.0], [9.4, 673.0], [9.5, 673.0], [9.6, 673.0], [9.7, 673.0], [9.8, 673.0], [9.9, 673.0], [10.0, 674.0], [10.1, 674.0], [10.2, 674.0], [10.3, 674.0], [10.4, 674.0], [10.5, 674.0], [10.6, 674.0], [10.7, 674.0], [10.8, 674.0], [10.9, 674.0], [11.0, 682.0], [11.1, 682.0], [11.2, 682.0], [11.3, 682.0], [11.4, 682.0], [11.5, 682.0], [11.6, 682.0], [11.7, 682.0], [11.8, 682.0], [11.9, 682.0], [12.0, 688.0], [12.1, 688.0], [12.2, 688.0], [12.3, 688.0], [12.4, 688.0], [12.5, 688.0], [12.6, 688.0], [12.7, 688.0], [12.8, 688.0], [12.9, 688.0], [13.0, 689.0], [13.1, 689.0], [13.2, 689.0], [13.3, 689.0], [13.4, 689.0], [13.5, 689.0], [13.6, 689.0], [13.7, 689.0], [13.8, 689.0], [13.9, 689.0], [14.0, 690.0], [14.1, 690.0], [14.2, 690.0], [14.3, 690.0], [14.4, 690.0], [14.5, 690.0], [14.6, 690.0], [14.7, 690.0], [14.8, 690.0], [14.9, 690.0], [15.0, 691.0], [15.1, 691.0], [15.2, 691.0], [15.3, 691.0], [15.4, 691.0], [15.5, 691.0], [15.6, 691.0], [15.7, 691.0], [15.8, 691.0], [15.9, 691.0], [16.0, 692.0], [16.1, 692.0], [16.2, 692.0], [16.3, 692.0], [16.4, 692.0], [16.5, 692.0], [16.6, 692.0], [16.7, 692.0], [16.8, 692.0], [16.9, 692.0], [17.0, 693.0], [17.1, 693.0], [17.2, 693.0], [17.3, 693.0], [17.4, 693.0], [17.5, 693.0], [17.6, 693.0], [17.7, 693.0], [17.8, 693.0], [17.9, 693.0], [18.0, 696.0], [18.1, 696.0], [18.2, 696.0], [18.3, 696.0], [18.4, 696.0], [18.5, 696.0], [18.6, 696.0], [18.7, 696.0], [18.8, 696.0], [18.9, 696.0], [19.0, 698.0], [19.1, 698.0], [19.2, 698.0], [19.3, 698.0], [19.4, 698.0], [19.5, 698.0], [19.6, 698.0], [19.7, 698.0], [19.8, 698.0], [19.9, 698.0], [20.0, 698.0], [20.1, 698.0], [20.2, 698.0], [20.3, 698.0], [20.4, 698.0], [20.5, 698.0], [20.6, 698.0], [20.7, 698.0], [20.8, 698.0], [20.9, 698.0], [21.0, 698.0], [21.1, 698.0], [21.2, 698.0], [21.3, 698.0], [21.4, 698.0], [21.5, 698.0], [21.6, 698.0], [21.7, 698.0], [21.8, 698.0], [21.9, 698.0], [22.0, 700.0], [22.1, 700.0], [22.2, 700.0], [22.3, 700.0], [22.4, 700.0], [22.5, 700.0], [22.6, 700.0], [22.7, 700.0], [22.8, 700.0], [22.9, 700.0], [23.0, 700.0], [23.1, 700.0], [23.2, 700.0], [23.3, 700.0], [23.4, 700.0], [23.5, 700.0], [23.6, 700.0], [23.7, 700.0], [23.8, 700.0], [23.9, 700.0], [24.0, 701.0], [24.1, 701.0], [24.2, 701.0], [24.3, 701.0], [24.4, 701.0], [24.5, 701.0], [24.6, 701.0], [24.7, 701.0], [24.8, 701.0], [24.9, 701.0], [25.0, 702.0], [25.1, 702.0], [25.2, 702.0], [25.3, 702.0], [25.4, 702.0], [25.5, 702.0], [25.6, 702.0], [25.7, 702.0], [25.8, 702.0], [25.9, 702.0], [26.0, 703.0], [26.1, 703.0], [26.2, 703.0], [26.3, 703.0], [26.4, 703.0], [26.5, 703.0], [26.6, 703.0], [26.7, 703.0], [26.8, 703.0], [26.9, 703.0], [27.0, 704.0], [27.1, 704.0], [27.2, 704.0], [27.3, 704.0], [27.4, 704.0], [27.5, 704.0], [27.6, 704.0], [27.7, 704.0], [27.8, 704.0], [27.9, 704.0], [28.0, 704.0], [28.1, 704.0], [28.2, 704.0], [28.3, 704.0], [28.4, 704.0], [28.5, 704.0], [28.6, 704.0], [28.7, 704.0], [28.8, 704.0], [28.9, 704.0], [29.0, 704.0], [29.1, 704.0], [29.2, 704.0], [29.3, 704.0], [29.4, 704.0], [29.5, 704.0], [29.6, 704.0], [29.7, 704.0], [29.8, 704.0], [29.9, 704.0], [30.0, 704.0], [30.1, 704.0], [30.2, 704.0], [30.3, 704.0], [30.4, 704.0], [30.5, 704.0], [30.6, 704.0], [30.7, 704.0], [30.8, 704.0], [30.9, 704.0], [31.0, 705.0], [31.1, 705.0], [31.2, 705.0], [31.3, 705.0], [31.4, 705.0], [31.5, 705.0], [31.6, 705.0], [31.7, 705.0], [31.8, 705.0], [31.9, 705.0], [32.0, 710.0], [32.1, 710.0], [32.2, 710.0], [32.3, 710.0], [32.4, 710.0], [32.5, 710.0], [32.6, 710.0], [32.7, 710.0], [32.8, 710.0], [32.9, 710.0], [33.0, 711.0], [33.1, 711.0], [33.2, 711.0], [33.3, 711.0], [33.4, 711.0], [33.5, 711.0], [33.6, 711.0], [33.7, 711.0], [33.8, 711.0], [33.9, 711.0], [34.0, 712.0], [34.1, 712.0], [34.2, 712.0], [34.3, 712.0], [34.4, 712.0], [34.5, 712.0], [34.6, 712.0], [34.7, 712.0], [34.8, 712.0], [34.9, 712.0], [35.0, 715.0], [35.1, 715.0], [35.2, 715.0], [35.3, 715.0], [35.4, 715.0], [35.5, 715.0], [35.6, 715.0], [35.7, 715.0], [35.8, 715.0], [35.9, 715.0], [36.0, 718.0], [36.1, 718.0], [36.2, 718.0], [36.3, 718.0], [36.4, 718.0], [36.5, 718.0], [36.6, 718.0], [36.7, 718.0], [36.8, 718.0], [36.9, 718.0], [37.0, 719.0], [37.1, 719.0], [37.2, 719.0], [37.3, 719.0], [37.4, 719.0], [37.5, 719.0], [37.6, 719.0], [37.7, 719.0], [37.8, 719.0], [37.9, 719.0], [38.0, 722.0], [38.1, 722.0], [38.2, 722.0], [38.3, 722.0], [38.4, 722.0], [38.5, 722.0], [38.6, 722.0], [38.7, 722.0], [38.8, 722.0], [38.9, 722.0], [39.0, 723.0], [39.1, 723.0], [39.2, 723.0], [39.3, 723.0], [39.4, 723.0], [39.5, 723.0], [39.6, 723.0], [39.7, 723.0], [39.8, 723.0], [39.9, 723.0], [40.0, 724.0], [40.1, 724.0], [40.2, 724.0], [40.3, 724.0], [40.4, 724.0], [40.5, 724.0], [40.6, 724.0], [40.7, 724.0], [40.8, 724.0], [40.9, 724.0], [41.0, 724.0], [41.1, 724.0], [41.2, 724.0], [41.3, 724.0], [41.4, 724.0], [41.5, 724.0], [41.6, 724.0], [41.7, 724.0], [41.8, 724.0], [41.9, 724.0], [42.0, 724.0], [42.1, 724.0], [42.2, 724.0], [42.3, 724.0], [42.4, 724.0], [42.5, 724.0], [42.6, 724.0], [42.7, 724.0], [42.8, 724.0], [42.9, 724.0], [43.0, 728.0], [43.1, 728.0], [43.2, 728.0], [43.3, 728.0], [43.4, 728.0], [43.5, 728.0], [43.6, 728.0], [43.7, 728.0], [43.8, 728.0], [43.9, 728.0], [44.0, 731.0], [44.1, 731.0], [44.2, 731.0], [44.3, 731.0], [44.4, 731.0], [44.5, 731.0], [44.6, 731.0], [44.7, 731.0], [44.8, 731.0], [44.9, 731.0], [45.0, 732.0], [45.1, 732.0], [45.2, 732.0], [45.3, 732.0], [45.4, 732.0], [45.5, 732.0], [45.6, 732.0], [45.7, 732.0], [45.8, 732.0], [45.9, 732.0], [46.0, 734.0], [46.1, 734.0], [46.2, 734.0], [46.3, 734.0], [46.4, 734.0], [46.5, 734.0], [46.6, 734.0], [46.7, 734.0], [46.8, 734.0], [46.9, 734.0], [47.0, 734.0], [47.1, 734.0], [47.2, 734.0], [47.3, 734.0], [47.4, 734.0], [47.5, 734.0], [47.6, 734.0], [47.7, 734.0], [47.8, 734.0], [47.9, 734.0], [48.0, 736.0], [48.1, 736.0], [48.2, 736.0], [48.3, 736.0], [48.4, 736.0], [48.5, 736.0], [48.6, 736.0], [48.7, 736.0], [48.8, 736.0], [48.9, 736.0], [49.0, 737.0], [49.1, 737.0], [49.2, 737.0], [49.3, 737.0], [49.4, 737.0], [49.5, 737.0], [49.6, 737.0], [49.7, 737.0], [49.8, 737.0], [49.9, 737.0], [50.0, 737.0], [50.1, 737.0], [50.2, 737.0], [50.3, 737.0], [50.4, 737.0], [50.5, 737.0], [50.6, 737.0], [50.7, 737.0], [50.8, 737.0], [50.9, 737.0], [51.0, 741.0], [51.1, 741.0], [51.2, 741.0], [51.3, 741.0], [51.4, 741.0], [51.5, 741.0], [51.6, 741.0], [51.7, 741.0], [51.8, 741.0], [51.9, 741.0], [52.0, 742.0], [52.1, 742.0], [52.2, 742.0], [52.3, 742.0], [52.4, 742.0], [52.5, 742.0], [52.6, 742.0], [52.7, 742.0], [52.8, 742.0], [52.9, 742.0], [53.0, 743.0], [53.1, 743.0], [53.2, 743.0], [53.3, 743.0], [53.4, 743.0], [53.5, 743.0], [53.6, 743.0], [53.7, 743.0], [53.8, 743.0], [53.9, 743.0], [54.0, 743.0], [54.1, 743.0], [54.2, 743.0], [54.3, 743.0], [54.4, 743.0], [54.5, 743.0], [54.6, 743.0], [54.7, 743.0], [54.8, 743.0], [54.9, 743.0], [55.0, 744.0], [55.1, 744.0], [55.2, 744.0], [55.3, 744.0], [55.4, 744.0], [55.5, 744.0], [55.6, 744.0], [55.7, 744.0], [55.8, 744.0], [55.9, 744.0], [56.0, 745.0], [56.1, 745.0], [56.2, 745.0], [56.3, 745.0], [56.4, 745.0], [56.5, 745.0], [56.6, 745.0], [56.7, 745.0], [56.8, 745.0], [56.9, 745.0], [57.0, 746.0], [57.1, 746.0], [57.2, 746.0], [57.3, 746.0], [57.4, 746.0], [57.5, 746.0], [57.6, 746.0], [57.7, 746.0], [57.8, 746.0], [57.9, 746.0], [58.0, 749.0], [58.1, 749.0], [58.2, 749.0], [58.3, 749.0], [58.4, 749.0], [58.5, 749.0], [58.6, 749.0], [58.7, 749.0], [58.8, 749.0], [58.9, 749.0], [59.0, 749.0], [59.1, 749.0], [59.2, 749.0], [59.3, 749.0], [59.4, 749.0], [59.5, 749.0], [59.6, 749.0], [59.7, 749.0], [59.8, 749.0], [59.9, 749.0], [60.0, 751.0], [60.1, 751.0], [60.2, 751.0], [60.3, 751.0], [60.4, 751.0], [60.5, 751.0], [60.6, 751.0], [60.7, 751.0], [60.8, 751.0], [60.9, 751.0], [61.0, 752.0], [61.1, 752.0], [61.2, 752.0], [61.3, 752.0], [61.4, 752.0], [61.5, 752.0], [61.6, 752.0], [61.7, 752.0], [61.8, 752.0], [61.9, 752.0], [62.0, 752.0], [62.1, 752.0], [62.2, 752.0], [62.3, 752.0], [62.4, 752.0], [62.5, 752.0], [62.6, 752.0], [62.7, 752.0], [62.8, 752.0], [62.9, 752.0], [63.0, 755.0], [63.1, 755.0], [63.2, 755.0], [63.3, 755.0], [63.4, 755.0], [63.5, 755.0], [63.6, 755.0], [63.7, 755.0], [63.8, 755.0], [63.9, 755.0], [64.0, 756.0], [64.1, 756.0], [64.2, 756.0], [64.3, 756.0], [64.4, 756.0], [64.5, 756.0], [64.6, 756.0], [64.7, 756.0], [64.8, 756.0], [64.9, 756.0], [65.0, 756.0], [65.1, 756.0], [65.2, 756.0], [65.3, 756.0], [65.4, 756.0], [65.5, 756.0], [65.6, 756.0], [65.7, 756.0], [65.8, 756.0], [65.9, 756.0], [66.0, 757.0], [66.1, 757.0], [66.2, 757.0], [66.3, 757.0], [66.4, 757.0], [66.5, 757.0], [66.6, 757.0], [66.7, 757.0], [66.8, 757.0], [66.9, 757.0], [67.0, 760.0], [67.1, 760.0], [67.2, 760.0], [67.3, 760.0], [67.4, 760.0], [67.5, 760.0], [67.6, 760.0], [67.7, 760.0], [67.8, 760.0], [67.9, 760.0], [68.0, 763.0], [68.1, 763.0], [68.2, 763.0], [68.3, 763.0], [68.4, 763.0], [68.5, 763.0], [68.6, 763.0], [68.7, 763.0], [68.8, 763.0], [68.9, 763.0], [69.0, 763.0], [69.1, 763.0], [69.2, 763.0], [69.3, 763.0], [69.4, 763.0], [69.5, 763.0], [69.6, 763.0], [69.7, 763.0], [69.8, 763.0], [69.9, 763.0], [70.0, 763.0], [70.1, 763.0], [70.2, 763.0], [70.3, 763.0], [70.4, 763.0], [70.5, 763.0], [70.6, 763.0], [70.7, 763.0], [70.8, 763.0], [70.9, 763.0], [71.0, 764.0], [71.1, 764.0], [71.2, 764.0], [71.3, 764.0], [71.4, 764.0], [71.5, 764.0], [71.6, 764.0], [71.7, 764.0], [71.8, 764.0], [71.9, 764.0], [72.0, 767.0], [72.1, 767.0], [72.2, 767.0], [72.3, 767.0], [72.4, 767.0], [72.5, 767.0], [72.6, 767.0], [72.7, 767.0], [72.8, 767.0], [72.9, 767.0], [73.0, 771.0], [73.1, 771.0], [73.2, 771.0], [73.3, 771.0], [73.4, 771.0], [73.5, 771.0], [73.6, 771.0], [73.7, 771.0], [73.8, 771.0], [73.9, 771.0], [74.0, 772.0], [74.1, 772.0], [74.2, 772.0], [74.3, 772.0], [74.4, 772.0], [74.5, 772.0], [74.6, 772.0], [74.7, 772.0], [74.8, 772.0], [74.9, 772.0], [75.0, 772.0], [75.1, 772.0], [75.2, 772.0], [75.3, 772.0], [75.4, 772.0], [75.5, 772.0], [75.6, 772.0], [75.7, 772.0], [75.8, 772.0], [75.9, 772.0], [76.0, 774.0], [76.1, 774.0], [76.2, 774.0], [76.3, 774.0], [76.4, 774.0], [76.5, 774.0], [76.6, 774.0], [76.7, 774.0], [76.8, 774.0], [76.9, 774.0], [77.0, 775.0], [77.1, 775.0], [77.2, 775.0], [77.3, 775.0], [77.4, 775.0], [77.5, 775.0], [77.6, 775.0], [77.7, 775.0], [77.8, 775.0], [77.9, 775.0], [78.0, 778.0], [78.1, 778.0], [78.2, 778.0], [78.3, 778.0], [78.4, 778.0], [78.5, 778.0], [78.6, 778.0], [78.7, 778.0], [78.8, 778.0], [78.9, 778.0], [79.0, 779.0], [79.1, 779.0], [79.2, 779.0], [79.3, 779.0], [79.4, 779.0], [79.5, 779.0], [79.6, 779.0], [79.7, 779.0], [79.8, 779.0], [79.9, 779.0], [80.0, 786.0], [80.1, 786.0], [80.2, 786.0], [80.3, 786.0], [80.4, 786.0], [80.5, 786.0], [80.6, 786.0], [80.7, 786.0], [80.8, 786.0], [80.9, 786.0], [81.0, 787.0], [81.1, 787.0], [81.2, 787.0], [81.3, 787.0], [81.4, 787.0], [81.5, 787.0], [81.6, 787.0], [81.7, 787.0], [81.8, 787.0], [81.9, 787.0], [82.0, 791.0], [82.1, 791.0], [82.2, 791.0], [82.3, 791.0], [82.4, 791.0], [82.5, 791.0], [82.6, 791.0], [82.7, 791.0], [82.8, 791.0], [82.9, 791.0], [83.0, 791.0], [83.1, 791.0], [83.2, 791.0], [83.3, 791.0], [83.4, 791.0], [83.5, 791.0], [83.6, 791.0], [83.7, 791.0], [83.8, 791.0], [83.9, 791.0], [84.0, 792.0], [84.1, 792.0], [84.2, 792.0], [84.3, 792.0], [84.4, 792.0], [84.5, 792.0], [84.6, 792.0], [84.7, 792.0], [84.8, 792.0], [84.9, 792.0], [85.0, 794.0], [85.1, 794.0], [85.2, 794.0], [85.3, 794.0], [85.4, 794.0], [85.5, 794.0], [85.6, 794.0], [85.7, 794.0], [85.8, 794.0], [85.9, 794.0], [86.0, 802.0], [86.1, 802.0], [86.2, 802.0], [86.3, 802.0], [86.4, 802.0], [86.5, 802.0], [86.6, 802.0], [86.7, 802.0], [86.8, 802.0], [86.9, 802.0], [87.0, 807.0], [87.1, 807.0], [87.2, 807.0], [87.3, 807.0], [87.4, 807.0], [87.5, 807.0], [87.6, 807.0], [87.7, 807.0], [87.8, 807.0], [87.9, 807.0], [88.0, 812.0], [88.1, 812.0], [88.2, 812.0], [88.3, 812.0], [88.4, 812.0], [88.5, 812.0], [88.6, 812.0], [88.7, 812.0], [88.8, 812.0], [88.9, 812.0], [89.0, 822.0], [89.1, 822.0], [89.2, 822.0], [89.3, 822.0], [89.4, 822.0], [89.5, 822.0], [89.6, 822.0], [89.7, 822.0], [89.8, 822.0], [89.9, 822.0], [90.0, 823.0], [90.1, 823.0], [90.2, 823.0], [90.3, 823.0], [90.4, 823.0], [90.5, 823.0], [90.6, 823.0], [90.7, 823.0], [90.8, 823.0], [90.9, 823.0], [91.0, 829.0], [91.1, 829.0], [91.2, 829.0], [91.3, 829.0], [91.4, 829.0], [91.5, 829.0], [91.6, 829.0], [91.7, 829.0], [91.8, 829.0], [91.9, 829.0], [92.0, 837.0], [92.1, 837.0], [92.2, 837.0], [92.3, 837.0], [92.4, 837.0], [92.5, 837.0], [92.6, 837.0], [92.7, 837.0], [92.8, 837.0], [92.9, 837.0], [93.0, 844.0], [93.1, 844.0], [93.2, 844.0], [93.3, 844.0], [93.4, 844.0], [93.5, 844.0], [93.6, 844.0], [93.7, 844.0], [93.8, 844.0], [93.9, 844.0], [94.0, 851.0], [94.1, 851.0], [94.2, 851.0], [94.3, 851.0], [94.4, 851.0], [94.5, 851.0], [94.6, 851.0], [94.7, 851.0], [94.8, 851.0], [94.9, 851.0], [95.0, 863.0], [95.1, 863.0], [95.2, 863.0], [95.3, 863.0], [95.4, 863.0], [95.5, 863.0], [95.6, 863.0], [95.7, 863.0], [95.8, 863.0], [95.9, 863.0], [96.0, 872.0], [96.1, 872.0], [96.2, 872.0], [96.3, 872.0], [96.4, 872.0], [96.5, 872.0], [96.6, 872.0], [96.7, 872.0], [96.8, 872.0], [96.9, 872.0], [97.0, 875.0], [97.1, 875.0], [97.2, 875.0], [97.3, 875.0], [97.4, 875.0], [97.5, 875.0], [97.6, 875.0], [97.7, 875.0], [97.8, 875.0], [97.9, 875.0], [98.0, 879.0], [98.1, 879.0], [98.2, 879.0], [98.3, 879.0], [98.4, 879.0], [98.5, 879.0], [98.6, 879.0], [98.7, 879.0], [98.8, 879.0], [98.9, 879.0], [99.0, 918.0], [99.1, 918.0], [99.2, 918.0], [99.3, 918.0], [99.4, 918.0], [99.5, 918.0], [99.6, 918.0], [99.7, 918.0], [99.8, 918.0], [99.9, 918.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[0.0, 1139.0], [0.1, 1139.0], [0.2, 1139.0], [0.3, 1139.0], [0.4, 1139.0], [0.5, 1139.0], [0.6, 1139.0], [0.7, 1139.0], [0.8, 1139.0], [0.9, 1139.0], [1.0, 1149.0], [1.1, 1149.0], [1.2, 1149.0], [1.3, 1149.0], [1.4, 1149.0], [1.5, 1149.0], [1.6, 1149.0], [1.7, 1149.0], [1.8, 1149.0], [1.9, 1149.0], [2.0, 1189.0], [2.1, 1189.0], [2.2, 1189.0], [2.3, 1189.0], [2.4, 1189.0], [2.5, 1189.0], [2.6, 1189.0], [2.7, 1189.0], [2.8, 1189.0], [2.9, 1189.0], [3.0, 1194.0], [3.1, 1194.0], [3.2, 1194.0], [3.3, 1194.0], [3.4, 1194.0], [3.5, 1194.0], [3.6, 1194.0], [3.7, 1194.0], [3.8, 1194.0], [3.9, 1194.0], [4.0, 1197.0], [4.1, 1197.0], [4.2, 1197.0], [4.3, 1197.0], [4.4, 1197.0], [4.5, 1197.0], [4.6, 1197.0], [4.7, 1197.0], [4.8, 1197.0], [4.9, 1197.0], [5.0, 1202.0], [5.1, 1202.0], [5.2, 1202.0], [5.3, 1202.0], [5.4, 1202.0], [5.5, 1202.0], [5.6, 1202.0], [5.7, 1202.0], [5.8, 1202.0], [5.9, 1202.0], [6.0, 1203.0], [6.1, 1203.0], [6.2, 1203.0], [6.3, 1203.0], [6.4, 1203.0], [6.5, 1203.0], [6.6, 1203.0], [6.7, 1203.0], [6.8, 1203.0], [6.9, 1203.0], [7.0, 1209.0], [7.1, 1209.0], [7.2, 1209.0], [7.3, 1209.0], [7.4, 1209.0], [7.5, 1209.0], [7.6, 1209.0], [7.7, 1209.0], [7.8, 1209.0], [7.9, 1209.0], [8.0, 1231.0], [8.1, 1231.0], [8.2, 1231.0], [8.3, 1231.0], [8.4, 1231.0], [8.5, 1231.0], [8.6, 1231.0], [8.7, 1231.0], [8.8, 1231.0], [8.9, 1231.0], [9.0, 1239.0], [9.1, 1239.0], [9.2, 1239.0], [9.3, 1239.0], [9.4, 1239.0], [9.5, 1239.0], [9.6, 1239.0], [9.7, 1239.0], [9.8, 1239.0], [9.9, 1239.0], [10.0, 1256.0], [10.1, 1256.0], [10.2, 1256.0], [10.3, 1256.0], [10.4, 1256.0], [10.5, 1256.0], [10.6, 1256.0], [10.7, 1256.0], [10.8, 1256.0], [10.9, 1256.0], [11.0, 1257.0], [11.1, 1257.0], [11.2, 1257.0], [11.3, 1257.0], [11.4, 1257.0], [11.5, 1257.0], [11.6, 1257.0], [11.7, 1257.0], [11.8, 1257.0], [11.9, 1257.0], [12.0, 1261.0], [12.1, 1261.0], [12.2, 1261.0], [12.3, 1261.0], [12.4, 1261.0], [12.5, 1261.0], [12.6, 1261.0], [12.7, 1261.0], [12.8, 1261.0], [12.9, 1261.0], [13.0, 1266.0], [13.1, 1266.0], [13.2, 1266.0], [13.3, 1266.0], [13.4, 1266.0], [13.5, 1266.0], [13.6, 1266.0], [13.7, 1266.0], [13.8, 1266.0], [13.9, 1266.0], [14.0, 1267.0], [14.1, 1267.0], [14.2, 1267.0], [14.3, 1267.0], [14.4, 1267.0], [14.5, 1267.0], [14.6, 1267.0], [14.7, 1267.0], [14.8, 1267.0], [14.9, 1267.0], [15.0, 1271.0], [15.1, 1271.0], [15.2, 1271.0], [15.3, 1271.0], [15.4, 1271.0], [15.5, 1271.0], [15.6, 1271.0], [15.7, 1271.0], [15.8, 1271.0], [15.9, 1271.0], [16.0, 1271.0], [16.1, 1271.0], [16.2, 1271.0], [16.3, 1271.0], [16.4, 1271.0], [16.5, 1271.0], [16.6, 1271.0], [16.7, 1271.0], [16.8, 1271.0], [16.9, 1271.0], [17.0, 1276.0], [17.1, 1276.0], [17.2, 1276.0], [17.3, 1276.0], [17.4, 1276.0], [17.5, 1276.0], [17.6, 1276.0], [17.7, 1276.0], [17.8, 1276.0], [17.9, 1276.0], [18.0, 1278.0], [18.1, 1278.0], [18.2, 1278.0], [18.3, 1278.0], [18.4, 1278.0], [18.5, 1278.0], [18.6, 1278.0], [18.7, 1278.0], [18.8, 1278.0], [18.9, 1278.0], [19.0, 1278.0], [19.1, 1278.0], [19.2, 1278.0], [19.3, 1278.0], [19.4, 1278.0], [19.5, 1278.0], [19.6, 1278.0], [19.7, 1278.0], [19.8, 1278.0], [19.9, 1278.0], [20.0, 1280.0], [20.1, 1280.0], [20.2, 1280.0], [20.3, 1280.0], [20.4, 1280.0], [20.5, 1280.0], [20.6, 1280.0], [20.7, 1280.0], [20.8, 1280.0], [20.9, 1280.0], [21.0, 1280.0], [21.1, 1280.0], [21.2, 1280.0], [21.3, 1280.0], [21.4, 1280.0], [21.5, 1280.0], [21.6, 1280.0], [21.7, 1280.0], [21.8, 1280.0], [21.9, 1280.0], [22.0, 1281.0], [22.1, 1281.0], [22.2, 1281.0], [22.3, 1281.0], [22.4, 1281.0], [22.5, 1281.0], [22.6, 1281.0], [22.7, 1281.0], [22.8, 1281.0], [22.9, 1281.0], [23.0, 1281.0], [23.1, 1281.0], [23.2, 1281.0], [23.3, 1281.0], [23.4, 1281.0], [23.5, 1281.0], [23.6, 1281.0], [23.7, 1281.0], [23.8, 1281.0], [23.9, 1281.0], [24.0, 1281.0], [24.1, 1281.0], [24.2, 1281.0], [24.3, 1281.0], [24.4, 1281.0], [24.5, 1281.0], [24.6, 1281.0], [24.7, 1281.0], [24.8, 1281.0], [24.9, 1281.0], [25.0, 1283.0], [25.1, 1283.0], [25.2, 1283.0], [25.3, 1283.0], [25.4, 1283.0], [25.5, 1283.0], [25.6, 1283.0], [25.7, 1283.0], [25.8, 1283.0], [25.9, 1283.0], [26.0, 1283.0], [26.1, 1283.0], [26.2, 1283.0], [26.3, 1283.0], [26.4, 1283.0], [26.5, 1283.0], [26.6, 1283.0], [26.7, 1283.0], [26.8, 1283.0], [26.9, 1283.0], [27.0, 1286.0], [27.1, 1286.0], [27.2, 1286.0], [27.3, 1286.0], [27.4, 1286.0], [27.5, 1286.0], [27.6, 1286.0], [27.7, 1286.0], [27.8, 1286.0], [27.9, 1286.0], [28.0, 1290.0], [28.1, 1290.0], [28.2, 1290.0], [28.3, 1290.0], [28.4, 1290.0], [28.5, 1290.0], [28.6, 1290.0], [28.7, 1290.0], [28.8, 1290.0], [28.9, 1290.0], [29.0, 1290.0], [29.1, 1290.0], [29.2, 1290.0], [29.3, 1290.0], [29.4, 1290.0], [29.5, 1290.0], [29.6, 1290.0], [29.7, 1290.0], [29.8, 1290.0], [29.9, 1290.0], [30.0, 1294.0], [30.1, 1294.0], [30.2, 1294.0], [30.3, 1294.0], [30.4, 1294.0], [30.5, 1294.0], [30.6, 1294.0], [30.7, 1294.0], [30.8, 1294.0], [30.9, 1294.0], [31.0, 1295.0], [31.1, 1295.0], [31.2, 1295.0], [31.3, 1295.0], [31.4, 1295.0], [31.5, 1295.0], [31.6, 1295.0], [31.7, 1295.0], [31.8, 1295.0], [31.9, 1295.0], [32.0, 1298.0], [32.1, 1298.0], [32.2, 1298.0], [32.3, 1298.0], [32.4, 1298.0], [32.5, 1298.0], [32.6, 1298.0], [32.7, 1298.0], [32.8, 1298.0], [32.9, 1298.0], [33.0, 1298.0], [33.1, 1298.0], [33.2, 1298.0], [33.3, 1298.0], [33.4, 1298.0], [33.5, 1298.0], [33.6, 1298.0], [33.7, 1298.0], [33.8, 1298.0], [33.9, 1298.0], [34.0, 1300.0], [34.1, 1300.0], [34.2, 1300.0], [34.3, 1300.0], [34.4, 1300.0], [34.5, 1300.0], [34.6, 1300.0], [34.7, 1300.0], [34.8, 1300.0], [34.9, 1300.0], [35.0, 1303.0], [35.1, 1303.0], [35.2, 1303.0], [35.3, 1303.0], [35.4, 1303.0], [35.5, 1303.0], [35.6, 1303.0], [35.7, 1303.0], [35.8, 1303.0], [35.9, 1303.0], [36.0, 1304.0], [36.1, 1304.0], [36.2, 1304.0], [36.3, 1304.0], [36.4, 1304.0], [36.5, 1304.0], [36.6, 1304.0], [36.7, 1304.0], [36.8, 1304.0], [36.9, 1304.0], [37.0, 1304.0], [37.1, 1304.0], [37.2, 1304.0], [37.3, 1304.0], [37.4, 1304.0], [37.5, 1304.0], [37.6, 1304.0], [37.7, 1304.0], [37.8, 1304.0], [37.9, 1304.0], [38.0, 1307.0], [38.1, 1307.0], [38.2, 1307.0], [38.3, 1307.0], [38.4, 1307.0], [38.5, 1307.0], [38.6, 1307.0], [38.7, 1307.0], [38.8, 1307.0], [38.9, 1307.0], [39.0, 1308.0], [39.1, 1308.0], [39.2, 1308.0], [39.3, 1308.0], [39.4, 1308.0], [39.5, 1308.0], [39.6, 1308.0], [39.7, 1308.0], [39.8, 1308.0], [39.9, 1308.0], [40.0, 1309.0], [40.1, 1309.0], [40.2, 1309.0], [40.3, 1309.0], [40.4, 1309.0], [40.5, 1309.0], [40.6, 1309.0], [40.7, 1309.0], [40.8, 1309.0], [40.9, 1309.0], [41.0, 1310.0], [41.1, 1310.0], [41.2, 1310.0], [41.3, 1310.0], [41.4, 1310.0], [41.5, 1310.0], [41.6, 1310.0], [41.7, 1310.0], [41.8, 1310.0], [41.9, 1310.0], [42.0, 1312.0], [42.1, 1312.0], [42.2, 1312.0], [42.3, 1312.0], [42.4, 1312.0], [42.5, 1312.0], [42.6, 1312.0], [42.7, 1312.0], [42.8, 1312.0], [42.9, 1312.0], [43.0, 1314.0], [43.1, 1314.0], [43.2, 1314.0], [43.3, 1314.0], [43.4, 1314.0], [43.5, 1314.0], [43.6, 1314.0], [43.7, 1314.0], [43.8, 1314.0], [43.9, 1314.0], [44.0, 1314.0], [44.1, 1314.0], [44.2, 1314.0], [44.3, 1314.0], [44.4, 1314.0], [44.5, 1314.0], [44.6, 1314.0], [44.7, 1314.0], [44.8, 1314.0], [44.9, 1314.0], [45.0, 1315.0], [45.1, 1315.0], [45.2, 1315.0], [45.3, 1315.0], [45.4, 1315.0], [45.5, 1315.0], [45.6, 1315.0], [45.7, 1315.0], [45.8, 1315.0], [45.9, 1315.0], [46.0, 1316.0], [46.1, 1316.0], [46.2, 1316.0], [46.3, 1316.0], [46.4, 1316.0], [46.5, 1316.0], [46.6, 1316.0], [46.7, 1316.0], [46.8, 1316.0], [46.9, 1316.0], [47.0, 1317.0], [47.1, 1317.0], [47.2, 1317.0], [47.3, 1317.0], [47.4, 1317.0], [47.5, 1317.0], [47.6, 1317.0], [47.7, 1317.0], [47.8, 1317.0], [47.9, 1317.0], [48.0, 1319.0], [48.1, 1319.0], [48.2, 1319.0], [48.3, 1319.0], [48.4, 1319.0], [48.5, 1319.0], [48.6, 1319.0], [48.7, 1319.0], [48.8, 1319.0], [48.9, 1319.0], [49.0, 1320.0], [49.1, 1320.0], [49.2, 1320.0], [49.3, 1320.0], [49.4, 1320.0], [49.5, 1320.0], [49.6, 1320.0], [49.7, 1320.0], [49.8, 1320.0], [49.9, 1320.0], [50.0, 1328.0], [50.1, 1328.0], [50.2, 1328.0], [50.3, 1328.0], [50.4, 1328.0], [50.5, 1328.0], [50.6, 1328.0], [50.7, 1328.0], [50.8, 1328.0], [50.9, 1328.0], [51.0, 1329.0], [51.1, 1329.0], [51.2, 1329.0], [51.3, 1329.0], [51.4, 1329.0], [51.5, 1329.0], [51.6, 1329.0], [51.7, 1329.0], [51.8, 1329.0], [51.9, 1329.0], [52.0, 1330.0], [52.1, 1330.0], [52.2, 1330.0], [52.3, 1330.0], [52.4, 1330.0], [52.5, 1330.0], [52.6, 1330.0], [52.7, 1330.0], [52.8, 1330.0], [52.9, 1330.0], [53.0, 1330.0], [53.1, 1330.0], [53.2, 1330.0], [53.3, 1330.0], [53.4, 1330.0], [53.5, 1330.0], [53.6, 1330.0], [53.7, 1330.0], [53.8, 1330.0], [53.9, 1330.0], [54.0, 1331.0], [54.1, 1331.0], [54.2, 1331.0], [54.3, 1331.0], [54.4, 1331.0], [54.5, 1331.0], [54.6, 1331.0], [54.7, 1331.0], [54.8, 1331.0], [54.9, 1331.0], [55.0, 1332.0], [55.1, 1332.0], [55.2, 1332.0], [55.3, 1332.0], [55.4, 1332.0], [55.5, 1332.0], [55.6, 1332.0], [55.7, 1332.0], [55.8, 1332.0], [55.9, 1332.0], [56.0, 1332.0], [56.1, 1332.0], [56.2, 1332.0], [56.3, 1332.0], [56.4, 1332.0], [56.5, 1332.0], [56.6, 1332.0], [56.7, 1332.0], [56.8, 1332.0], [56.9, 1332.0], [57.0, 1341.0], [57.1, 1341.0], [57.2, 1341.0], [57.3, 1341.0], [57.4, 1341.0], [57.5, 1341.0], [57.6, 1341.0], [57.7, 1341.0], [57.8, 1341.0], [57.9, 1341.0], [58.0, 1341.0], [58.1, 1341.0], [58.2, 1341.0], [58.3, 1341.0], [58.4, 1341.0], [58.5, 1341.0], [58.6, 1341.0], [58.7, 1341.0], [58.8, 1341.0], [58.9, 1341.0], [59.0, 1345.0], [59.1, 1345.0], [59.2, 1345.0], [59.3, 1345.0], [59.4, 1345.0], [59.5, 1345.0], [59.6, 1345.0], [59.7, 1345.0], [59.8, 1345.0], [59.9, 1345.0], [60.0, 1350.0], [60.1, 1350.0], [60.2, 1350.0], [60.3, 1350.0], [60.4, 1350.0], [60.5, 1350.0], [60.6, 1350.0], [60.7, 1350.0], [60.8, 1350.0], [60.9, 1350.0], [61.0, 1350.0], [61.1, 1350.0], [61.2, 1350.0], [61.3, 1350.0], [61.4, 1350.0], [61.5, 1350.0], [61.6, 1350.0], [61.7, 1350.0], [61.8, 1350.0], [61.9, 1350.0], [62.0, 1351.0], [62.1, 1351.0], [62.2, 1351.0], [62.3, 1351.0], [62.4, 1351.0], [62.5, 1351.0], [62.6, 1351.0], [62.7, 1351.0], [62.8, 1351.0], [62.9, 1351.0], [63.0, 1351.0], [63.1, 1351.0], [63.2, 1351.0], [63.3, 1351.0], [63.4, 1351.0], [63.5, 1351.0], [63.6, 1351.0], [63.7, 1351.0], [63.8, 1351.0], [63.9, 1351.0], [64.0, 1352.0], [64.1, 1352.0], [64.2, 1352.0], [64.3, 1352.0], [64.4, 1352.0], [64.5, 1352.0], [64.6, 1352.0], [64.7, 1352.0], [64.8, 1352.0], [64.9, 1352.0], [65.0, 1354.0], [65.1, 1354.0], [65.2, 1354.0], [65.3, 1354.0], [65.4, 1354.0], [65.5, 1354.0], [65.6, 1354.0], [65.7, 1354.0], [65.8, 1354.0], [65.9, 1354.0], [66.0, 1354.0], [66.1, 1354.0], [66.2, 1354.0], [66.3, 1354.0], [66.4, 1354.0], [66.5, 1354.0], [66.6, 1354.0], [66.7, 1354.0], [66.8, 1354.0], [66.9, 1354.0], [67.0, 1358.0], [67.1, 1358.0], [67.2, 1358.0], [67.3, 1358.0], [67.4, 1358.0], [67.5, 1358.0], [67.6, 1358.0], [67.7, 1358.0], [67.8, 1358.0], [67.9, 1358.0], [68.0, 1358.0], [68.1, 1358.0], [68.2, 1358.0], [68.3, 1358.0], [68.4, 1358.0], [68.5, 1358.0], [68.6, 1358.0], [68.7, 1358.0], [68.8, 1358.0], [68.9, 1358.0], [69.0, 1364.0], [69.1, 1364.0], [69.2, 1364.0], [69.3, 1364.0], [69.4, 1364.0], [69.5, 1364.0], [69.6, 1364.0], [69.7, 1364.0], [69.8, 1364.0], [69.9, 1364.0], [70.0, 1365.0], [70.1, 1365.0], [70.2, 1365.0], [70.3, 1365.0], [70.4, 1365.0], [70.5, 1365.0], [70.6, 1365.0], [70.7, 1365.0], [70.8, 1365.0], [70.9, 1365.0], [71.0, 1370.0], [71.1, 1370.0], [71.2, 1370.0], [71.3, 1370.0], [71.4, 1370.0], [71.5, 1370.0], [71.6, 1370.0], [71.7, 1370.0], [71.8, 1370.0], [71.9, 1370.0], [72.0, 1371.0], [72.1, 1371.0], [72.2, 1371.0], [72.3, 1371.0], [72.4, 1371.0], [72.5, 1371.0], [72.6, 1371.0], [72.7, 1371.0], [72.8, 1371.0], [72.9, 1371.0], [73.0, 1373.0], [73.1, 1373.0], [73.2, 1373.0], [73.3, 1373.0], [73.4, 1373.0], [73.5, 1373.0], [73.6, 1373.0], [73.7, 1373.0], [73.8, 1373.0], [73.9, 1373.0], [74.0, 1377.0], [74.1, 1377.0], [74.2, 1377.0], [74.3, 1377.0], [74.4, 1377.0], [74.5, 1377.0], [74.6, 1377.0], [74.7, 1377.0], [74.8, 1377.0], [74.9, 1377.0], [75.0, 1378.0], [75.1, 1378.0], [75.2, 1378.0], [75.3, 1378.0], [75.4, 1378.0], [75.5, 1378.0], [75.6, 1378.0], [75.7, 1378.0], [75.8, 1378.0], [75.9, 1378.0], [76.0, 1384.0], [76.1, 1384.0], [76.2, 1384.0], [76.3, 1384.0], [76.4, 1384.0], [76.5, 1384.0], [76.6, 1384.0], [76.7, 1384.0], [76.8, 1384.0], [76.9, 1384.0], [77.0, 1385.0], [77.1, 1385.0], [77.2, 1385.0], [77.3, 1385.0], [77.4, 1385.0], [77.5, 1385.0], [77.6, 1385.0], [77.7, 1385.0], [77.8, 1385.0], [77.9, 1385.0], [78.0, 1385.0], [78.1, 1385.0], [78.2, 1385.0], [78.3, 1385.0], [78.4, 1385.0], [78.5, 1385.0], [78.6, 1385.0], [78.7, 1385.0], [78.8, 1385.0], [78.9, 1385.0], [79.0, 1393.0], [79.1, 1393.0], [79.2, 1393.0], [79.3, 1393.0], [79.4, 1393.0], [79.5, 1393.0], [79.6, 1393.0], [79.7, 1393.0], [79.8, 1393.0], [79.9, 1393.0], [80.0, 1394.0], [80.1, 1394.0], [80.2, 1394.0], [80.3, 1394.0], [80.4, 1394.0], [80.5, 1394.0], [80.6, 1394.0], [80.7, 1394.0], [80.8, 1394.0], [80.9, 1394.0], [81.0, 1396.0], [81.1, 1396.0], [81.2, 1396.0], [81.3, 1396.0], [81.4, 1396.0], [81.5, 1396.0], [81.6, 1396.0], [81.7, 1396.0], [81.8, 1396.0], [81.9, 1396.0], [82.0, 1397.0], [82.1, 1397.0], [82.2, 1397.0], [82.3, 1397.0], [82.4, 1397.0], [82.5, 1397.0], [82.6, 1397.0], [82.7, 1397.0], [82.8, 1397.0], [82.9, 1397.0], [83.0, 1397.0], [83.1, 1397.0], [83.2, 1397.0], [83.3, 1397.0], [83.4, 1397.0], [83.5, 1397.0], [83.6, 1397.0], [83.7, 1397.0], [83.8, 1397.0], [83.9, 1397.0], [84.0, 1397.0], [84.1, 1397.0], [84.2, 1397.0], [84.3, 1397.0], [84.4, 1397.0], [84.5, 1397.0], [84.6, 1397.0], [84.7, 1397.0], [84.8, 1397.0], [84.9, 1397.0], [85.0, 1400.0], [85.1, 1400.0], [85.2, 1400.0], [85.3, 1400.0], [85.4, 1400.0], [85.5, 1400.0], [85.6, 1400.0], [85.7, 1400.0], [85.8, 1400.0], [85.9, 1400.0], [86.0, 1401.0], [86.1, 1401.0], [86.2, 1401.0], [86.3, 1401.0], [86.4, 1401.0], [86.5, 1401.0], [86.6, 1401.0], [86.7, 1401.0], [86.8, 1401.0], [86.9, 1401.0], [87.0, 1407.0], [87.1, 1407.0], [87.2, 1407.0], [87.3, 1407.0], [87.4, 1407.0], [87.5, 1407.0], [87.6, 1407.0], [87.7, 1407.0], [87.8, 1407.0], [87.9, 1407.0], [88.0, 1413.0], [88.1, 1413.0], [88.2, 1413.0], [88.3, 1413.0], [88.4, 1413.0], [88.5, 1413.0], [88.6, 1413.0], [88.7, 1413.0], [88.8, 1413.0], [88.9, 1413.0], [89.0, 1419.0], [89.1, 1419.0], [89.2, 1419.0], [89.3, 1419.0], [89.4, 1419.0], [89.5, 1419.0], [89.6, 1419.0], [89.7, 1419.0], [89.8, 1419.0], [89.9, 1419.0], [90.0, 1421.0], [90.1, 1421.0], [90.2, 1421.0], [90.3, 1421.0], [90.4, 1421.0], [90.5, 1421.0], [90.6, 1421.0], [90.7, 1421.0], [90.8, 1421.0], [90.9, 1421.0], [91.0, 1425.0], [91.1, 1425.0], [91.2, 1425.0], [91.3, 1425.0], [91.4, 1425.0], [91.5, 1425.0], [91.6, 1425.0], [91.7, 1425.0], [91.8, 1425.0], [91.9, 1425.0], [92.0, 1435.0], [92.1, 1435.0], [92.2, 1435.0], [92.3, 1435.0], [92.4, 1435.0], [92.5, 1435.0], [92.6, 1435.0], [92.7, 1435.0], [92.8, 1435.0], [92.9, 1435.0], [93.0, 1437.0], [93.1, 1437.0], [93.2, 1437.0], [93.3, 1437.0], [93.4, 1437.0], [93.5, 1437.0], [93.6, 1437.0], [93.7, 1437.0], [93.8, 1437.0], [93.9, 1437.0], [94.0, 1442.0], [94.1, 1442.0], [94.2, 1442.0], [94.3, 1442.0], [94.4, 1442.0], [94.5, 1442.0], [94.6, 1442.0], [94.7, 1442.0], [94.8, 1442.0], [94.9, 1442.0], [95.0, 1445.0], [95.1, 1445.0], [95.2, 1445.0], [95.3, 1445.0], [95.4, 1445.0], [95.5, 1445.0], [95.6, 1445.0], [95.7, 1445.0], [95.8, 1445.0], [95.9, 1445.0], [96.0, 1454.0], [96.1, 1454.0], [96.2, 1454.0], [96.3, 1454.0], [96.4, 1454.0], [96.5, 1454.0], [96.6, 1454.0], [96.7, 1454.0], [96.8, 1454.0], [96.9, 1454.0], [97.0, 1484.0], [97.1, 1484.0], [97.2, 1484.0], [97.3, 1484.0], [97.4, 1484.0], [97.5, 1484.0], [97.6, 1484.0], [97.7, 1484.0], [97.8, 1484.0], [97.9, 1484.0], [98.0, 1509.0], [98.1, 1509.0], [98.2, 1509.0], [98.3, 1509.0], [98.4, 1509.0], [98.5, 1509.0], [98.6, 1509.0], [98.7, 1509.0], [98.8, 1509.0], [98.9, 1509.0], [99.0, 1625.0], [99.1, 1625.0], [99.2, 1625.0], [99.3, 1625.0], [99.4, 1625.0], [99.5, 1625.0], [99.6, 1625.0], [99.7, 1625.0], [99.8, 1625.0], [99.9, 1625.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[0.0, 318.0], [0.1, 318.0], [0.2, 318.0], [0.3, 318.0], [0.4, 318.0], [0.5, 318.0], [0.6, 318.0], [0.7, 318.0], [0.8, 318.0], [0.9, 318.0], [1.0, 318.0], [1.1, 318.0], [1.2, 318.0], [1.3, 318.0], [1.4, 318.0], [1.5, 318.0], [1.6, 318.0], [1.7, 318.0], [1.8, 318.0], [1.9, 318.0], [2.0, 323.0], [2.1, 323.0], [2.2, 323.0], [2.3, 323.0], [2.4, 323.0], [2.5, 323.0], [2.6, 323.0], [2.7, 323.0], [2.8, 323.0], [2.9, 323.0], [3.0, 323.0], [3.1, 323.0], [3.2, 323.0], [3.3, 323.0], [3.4, 323.0], [3.5, 323.0], [3.6, 323.0], [3.7, 323.0], [3.8, 323.0], [3.9, 323.0], [4.0, 324.0], [4.1, 324.0], [4.2, 324.0], [4.3, 324.0], [4.4, 324.0], [4.5, 324.0], [4.6, 324.0], [4.7, 324.0], [4.8, 324.0], [4.9, 324.0], [5.0, 325.0], [5.1, 325.0], [5.2, 325.0], [5.3, 325.0], [5.4, 325.0], [5.5, 325.0], [5.6, 325.0], [5.7, 325.0], [5.8, 325.0], [5.9, 325.0], [6.0, 326.0], [6.1, 326.0], [6.2, 326.0], [6.3, 326.0], [6.4, 326.0], [6.5, 326.0], [6.6, 326.0], [6.7, 326.0], [6.8, 326.0], [6.9, 326.0], [7.0, 326.0], [7.1, 326.0], [7.2, 326.0], [7.3, 326.0], [7.4, 326.0], [7.5, 326.0], [7.6, 326.0], [7.7, 326.0], [7.8, 326.0], [7.9, 326.0], [8.0, 330.0], [8.1, 330.0], [8.2, 330.0], [8.3, 330.0], [8.4, 330.0], [8.5, 330.0], [8.6, 330.0], [8.7, 330.0], [8.8, 330.0], [8.9, 330.0], [9.0, 330.0], [9.1, 330.0], [9.2, 330.0], [9.3, 330.0], [9.4, 330.0], [9.5, 330.0], [9.6, 330.0], [9.7, 330.0], [9.8, 330.0], [9.9, 330.0], [10.0, 330.0], [10.1, 330.0], [10.2, 330.0], [10.3, 330.0], [10.4, 330.0], [10.5, 330.0], [10.6, 330.0], [10.7, 330.0], [10.8, 330.0], [10.9, 330.0], [11.0, 332.0], [11.1, 332.0], [11.2, 332.0], [11.3, 332.0], [11.4, 332.0], [11.5, 332.0], [11.6, 332.0], [11.7, 332.0], [11.8, 332.0], [11.9, 332.0], [12.0, 332.0], [12.1, 332.0], [12.2, 332.0], [12.3, 332.0], [12.4, 332.0], [12.5, 332.0], [12.6, 332.0], [12.7, 332.0], [12.8, 332.0], [12.9, 332.0], [13.0, 334.0], [13.1, 334.0], [13.2, 334.0], [13.3, 334.0], [13.4, 334.0], [13.5, 334.0], [13.6, 334.0], [13.7, 334.0], [13.8, 334.0], [13.9, 334.0], [14.0, 335.0], [14.1, 335.0], [14.2, 335.0], [14.3, 335.0], [14.4, 335.0], [14.5, 335.0], [14.6, 335.0], [14.7, 335.0], [14.8, 335.0], [14.9, 335.0], [15.0, 336.0], [15.1, 336.0], [15.2, 336.0], [15.3, 336.0], [15.4, 336.0], [15.5, 336.0], [15.6, 336.0], [15.7, 336.0], [15.8, 336.0], [15.9, 336.0], [16.0, 338.0], [16.1, 338.0], [16.2, 338.0], [16.3, 338.0], [16.4, 338.0], [16.5, 338.0], [16.6, 338.0], [16.7, 338.0], [16.8, 338.0], [16.9, 338.0], [17.0, 340.0], [17.1, 340.0], [17.2, 340.0], [17.3, 340.0], [17.4, 340.0], [17.5, 340.0], [17.6, 340.0], [17.7, 340.0], [17.8, 340.0], [17.9, 340.0], [18.0, 342.0], [18.1, 342.0], [18.2, 342.0], [18.3, 342.0], [18.4, 342.0], [18.5, 342.0], [18.6, 342.0], [18.7, 342.0], [18.8, 342.0], [18.9, 342.0], [19.0, 351.0], [19.1, 351.0], [19.2, 351.0], [19.3, 351.0], [19.4, 351.0], [19.5, 351.0], [19.6, 351.0], [19.7, 351.0], [19.8, 351.0], [19.9, 351.0], [20.0, 352.0], [20.1, 352.0], [20.2, 352.0], [20.3, 352.0], [20.4, 352.0], [20.5, 352.0], [20.6, 352.0], [20.7, 352.0], [20.8, 352.0], [20.9, 352.0], [21.0, 353.0], [21.1, 353.0], [21.2, 353.0], [21.3, 353.0], [21.4, 353.0], [21.5, 353.0], [21.6, 353.0], [21.7, 353.0], [21.8, 353.0], [21.9, 353.0], [22.0, 358.0], [22.1, 358.0], [22.2, 358.0], [22.3, 358.0], [22.4, 358.0], [22.5, 358.0], [22.6, 358.0], [22.7, 358.0], [22.8, 358.0], [22.9, 358.0], [23.0, 358.0], [23.1, 358.0], [23.2, 358.0], [23.3, 358.0], [23.4, 358.0], [23.5, 358.0], [23.6, 358.0], [23.7, 358.0], [23.8, 358.0], [23.9, 358.0], [24.0, 358.0], [24.1, 358.0], [24.2, 358.0], [24.3, 358.0], [24.4, 358.0], [24.5, 358.0], [24.6, 358.0], [24.7, 358.0], [24.8, 358.0], [24.9, 358.0], [25.0, 358.0], [25.1, 358.0], [25.2, 358.0], [25.3, 358.0], [25.4, 358.0], [25.5, 358.0], [25.6, 358.0], [25.7, 358.0], [25.8, 358.0], [25.9, 358.0], [26.0, 359.0], [26.1, 359.0], [26.2, 359.0], [26.3, 359.0], [26.4, 359.0], [26.5, 359.0], [26.6, 359.0], [26.7, 359.0], [26.8, 359.0], [26.9, 359.0], [27.0, 359.0], [27.1, 359.0], [27.2, 359.0], [27.3, 359.0], [27.4, 359.0], [27.5, 359.0], [27.6, 359.0], [27.7, 359.0], [27.8, 359.0], [27.9, 359.0], [28.0, 359.0], [28.1, 359.0], [28.2, 359.0], [28.3, 359.0], [28.4, 359.0], [28.5, 359.0], [28.6, 359.0], [28.7, 359.0], [28.8, 359.0], [28.9, 359.0], [29.0, 361.0], [29.1, 361.0], [29.2, 361.0], [29.3, 361.0], [29.4, 361.0], [29.5, 361.0], [29.6, 361.0], [29.7, 361.0], [29.8, 361.0], [29.9, 361.0], [30.0, 362.0], [30.1, 362.0], [30.2, 362.0], [30.3, 362.0], [30.4, 362.0], [30.5, 362.0], [30.6, 362.0], [30.7, 362.0], [30.8, 362.0], [30.9, 362.0], [31.0, 363.0], [31.1, 363.0], [31.2, 363.0], [31.3, 363.0], [31.4, 363.0], [31.5, 363.0], [31.6, 363.0], [31.7, 363.0], [31.8, 363.0], [31.9, 363.0], [32.0, 363.0], [32.1, 363.0], [32.2, 363.0], [32.3, 363.0], [32.4, 363.0], [32.5, 363.0], [32.6, 363.0], [32.7, 363.0], [32.8, 363.0], [32.9, 363.0], [33.0, 364.0], [33.1, 364.0], [33.2, 364.0], [33.3, 364.0], [33.4, 364.0], [33.5, 364.0], [33.6, 364.0], [33.7, 364.0], [33.8, 364.0], [33.9, 364.0], [34.0, 364.0], [34.1, 364.0], [34.2, 364.0], [34.3, 364.0], [34.4, 364.0], [34.5, 364.0], [34.6, 364.0], [34.7, 364.0], [34.8, 364.0], [34.9, 364.0], [35.0, 365.0], [35.1, 365.0], [35.2, 365.0], [35.3, 365.0], [35.4, 365.0], [35.5, 365.0], [35.6, 365.0], [35.7, 365.0], [35.8, 365.0], [35.9, 365.0], [36.0, 367.0], [36.1, 367.0], [36.2, 367.0], [36.3, 367.0], [36.4, 367.0], [36.5, 367.0], [36.6, 367.0], [36.7, 367.0], [36.8, 367.0], [36.9, 367.0], [37.0, 367.0], [37.1, 367.0], [37.2, 367.0], [37.3, 367.0], [37.4, 367.0], [37.5, 367.0], [37.6, 367.0], [37.7, 367.0], [37.8, 367.0], [37.9, 367.0], [38.0, 368.0], [38.1, 368.0], [38.2, 368.0], [38.3, 368.0], [38.4, 368.0], [38.5, 368.0], [38.6, 368.0], [38.7, 368.0], [38.8, 368.0], [38.9, 368.0], [39.0, 368.0], [39.1, 368.0], [39.2, 368.0], [39.3, 368.0], [39.4, 368.0], [39.5, 368.0], [39.6, 368.0], [39.7, 368.0], [39.8, 368.0], [39.9, 368.0], [40.0, 368.0], [40.1, 368.0], [40.2, 368.0], [40.3, 368.0], [40.4, 368.0], [40.5, 368.0], [40.6, 368.0], [40.7, 368.0], [40.8, 368.0], [40.9, 368.0], [41.0, 368.0], [41.1, 368.0], [41.2, 368.0], [41.3, 368.0], [41.4, 368.0], [41.5, 368.0], [41.6, 368.0], [41.7, 368.0], [41.8, 368.0], [41.9, 368.0], [42.0, 369.0], [42.1, 369.0], [42.2, 369.0], [42.3, 369.0], [42.4, 369.0], [42.5, 369.0], [42.6, 369.0], [42.7, 369.0], [42.8, 369.0], [42.9, 369.0], [43.0, 369.0], [43.1, 369.0], [43.2, 369.0], [43.3, 369.0], [43.4, 369.0], [43.5, 369.0], [43.6, 369.0], [43.7, 369.0], [43.8, 369.0], [43.9, 369.0], [44.0, 371.0], [44.1, 371.0], [44.2, 371.0], [44.3, 371.0], [44.4, 371.0], [44.5, 371.0], [44.6, 371.0], [44.7, 371.0], [44.8, 371.0], [44.9, 371.0], [45.0, 372.0], [45.1, 372.0], [45.2, 372.0], [45.3, 372.0], [45.4, 372.0], [45.5, 372.0], [45.6, 372.0], [45.7, 372.0], [45.8, 372.0], [45.9, 372.0], [46.0, 373.0], [46.1, 373.0], [46.2, 373.0], [46.3, 373.0], [46.4, 373.0], [46.5, 373.0], [46.6, 373.0], [46.7, 373.0], [46.8, 373.0], [46.9, 373.0], [47.0, 374.0], [47.1, 374.0], [47.2, 374.0], [47.3, 374.0], [47.4, 374.0], [47.5, 374.0], [47.6, 374.0], [47.7, 374.0], [47.8, 374.0], [47.9, 374.0], [48.0, 374.0], [48.1, 374.0], [48.2, 374.0], [48.3, 374.0], [48.4, 374.0], [48.5, 374.0], [48.6, 374.0], [48.7, 374.0], [48.8, 374.0], [48.9, 374.0], [49.0, 374.0], [49.1, 374.0], [49.2, 374.0], [49.3, 374.0], [49.4, 374.0], [49.5, 374.0], [49.6, 374.0], [49.7, 374.0], [49.8, 374.0], [49.9, 374.0], [50.0, 374.0], [50.1, 374.0], [50.2, 374.0], [50.3, 374.0], [50.4, 374.0], [50.5, 374.0], [50.6, 374.0], [50.7, 374.0], [50.8, 374.0], [50.9, 374.0], [51.0, 375.0], [51.1, 375.0], [51.2, 375.0], [51.3, 375.0], [51.4, 375.0], [51.5, 375.0], [51.6, 375.0], [51.7, 375.0], [51.8, 375.0], [51.9, 375.0], [52.0, 375.0], [52.1, 375.0], [52.2, 375.0], [52.3, 375.0], [52.4, 375.0], [52.5, 375.0], [52.6, 375.0], [52.7, 375.0], [52.8, 375.0], [52.9, 375.0], [53.0, 376.0], [53.1, 376.0], [53.2, 376.0], [53.3, 376.0], [53.4, 376.0], [53.5, 376.0], [53.6, 376.0], [53.7, 376.0], [53.8, 376.0], [53.9, 376.0], [54.0, 376.0], [54.1, 376.0], [54.2, 376.0], [54.3, 376.0], [54.4, 376.0], [54.5, 376.0], [54.6, 376.0], [54.7, 376.0], [54.8, 376.0], [54.9, 376.0], [55.0, 377.0], [55.1, 377.0], [55.2, 377.0], [55.3, 377.0], [55.4, 377.0], [55.5, 377.0], [55.6, 377.0], [55.7, 377.0], [55.8, 377.0], [55.9, 377.0], [56.0, 379.0], [56.1, 379.0], [56.2, 379.0], [56.3, 379.0], [56.4, 379.0], [56.5, 379.0], [56.6, 379.0], [56.7, 379.0], [56.8, 379.0], [56.9, 379.0], [57.0, 380.0], [57.1, 380.0], [57.2, 380.0], [57.3, 380.0], [57.4, 380.0], [57.5, 380.0], [57.6, 380.0], [57.7, 380.0], [57.8, 380.0], [57.9, 380.0], [58.0, 382.0], [58.1, 382.0], [58.2, 382.0], [58.3, 382.0], [58.4, 382.0], [58.5, 382.0], [58.6, 382.0], [58.7, 382.0], [58.8, 382.0], [58.9, 382.0], [59.0, 382.0], [59.1, 382.0], [59.2, 382.0], [59.3, 382.0], [59.4, 382.0], [59.5, 382.0], [59.6, 382.0], [59.7, 382.0], [59.8, 382.0], [59.9, 382.0], [60.0, 386.0], [60.1, 386.0], [60.2, 386.0], [60.3, 386.0], [60.4, 386.0], [60.5, 386.0], [60.6, 386.0], [60.7, 386.0], [60.8, 386.0], [60.9, 386.0], [61.0, 388.0], [61.1, 388.0], [61.2, 388.0], [61.3, 388.0], [61.4, 388.0], [61.5, 388.0], [61.6, 388.0], [61.7, 388.0], [61.8, 388.0], [61.9, 388.0], [62.0, 388.0], [62.1, 388.0], [62.2, 388.0], [62.3, 388.0], [62.4, 388.0], [62.5, 388.0], [62.6, 388.0], [62.7, 388.0], [62.8, 388.0], [62.9, 388.0], [63.0, 391.0], [63.1, 391.0], [63.2, 391.0], [63.3, 391.0], [63.4, 391.0], [63.5, 391.0], [63.6, 391.0], [63.7, 391.0], [63.8, 391.0], [63.9, 391.0], [64.0, 392.0], [64.1, 392.0], [64.2, 392.0], [64.3, 392.0], [64.4, 392.0], [64.5, 392.0], [64.6, 392.0], [64.7, 392.0], [64.8, 392.0], [64.9, 392.0], [65.0, 396.0], [65.1, 396.0], [65.2, 396.0], [65.3, 396.0], [65.4, 396.0], [65.5, 396.0], [65.6, 396.0], [65.7, 396.0], [65.8, 396.0], [65.9, 396.0], [66.0, 396.0], [66.1, 396.0], [66.2, 396.0], [66.3, 396.0], [66.4, 396.0], [66.5, 396.0], [66.6, 396.0], [66.7, 396.0], [66.8, 396.0], [66.9, 396.0], [67.0, 397.0], [67.1, 397.0], [67.2, 397.0], [67.3, 397.0], [67.4, 397.0], [67.5, 397.0], [67.6, 397.0], [67.7, 397.0], [67.8, 397.0], [67.9, 397.0], [68.0, 397.0], [68.1, 397.0], [68.2, 397.0], [68.3, 397.0], [68.4, 397.0], [68.5, 397.0], [68.6, 397.0], [68.7, 397.0], [68.8, 397.0], [68.9, 397.0], [69.0, 399.0], [69.1, 399.0], [69.2, 399.0], [69.3, 399.0], [69.4, 399.0], [69.5, 399.0], [69.6, 399.0], [69.7, 399.0], [69.8, 399.0], [69.9, 399.0], [70.0, 399.0], [70.1, 399.0], [70.2, 399.0], [70.3, 399.0], [70.4, 399.0], [70.5, 399.0], [70.6, 399.0], [70.7, 399.0], [70.8, 399.0], [70.9, 399.0], [71.0, 401.0], [71.1, 401.0], [71.2, 401.0], [71.3, 401.0], [71.4, 401.0], [71.5, 401.0], [71.6, 401.0], [71.7, 401.0], [71.8, 401.0], [71.9, 401.0], [72.0, 402.0], [72.1, 402.0], [72.2, 402.0], [72.3, 402.0], [72.4, 402.0], [72.5, 402.0], [72.6, 402.0], [72.7, 402.0], [72.8, 402.0], [72.9, 402.0], [73.0, 403.0], [73.1, 403.0], [73.2, 403.0], [73.3, 403.0], [73.4, 403.0], [73.5, 403.0], [73.6, 403.0], [73.7, 403.0], [73.8, 403.0], [73.9, 403.0], [74.0, 408.0], [74.1, 408.0], [74.2, 408.0], [74.3, 408.0], [74.4, 408.0], [74.5, 408.0], [74.6, 408.0], [74.7, 408.0], [74.8, 408.0], [74.9, 408.0], [75.0, 411.0], [75.1, 411.0], [75.2, 411.0], [75.3, 411.0], [75.4, 411.0], [75.5, 411.0], [75.6, 411.0], [75.7, 411.0], [75.8, 411.0], [75.9, 411.0], [76.0, 412.0], [76.1, 412.0], [76.2, 412.0], [76.3, 412.0], [76.4, 412.0], [76.5, 412.0], [76.6, 412.0], [76.7, 412.0], [76.8, 412.0], [76.9, 412.0], [77.0, 414.0], [77.1, 414.0], [77.2, 414.0], [77.3, 414.0], [77.4, 414.0], [77.5, 414.0], [77.6, 414.0], [77.7, 414.0], [77.8, 414.0], [77.9, 414.0], [78.0, 418.0], [78.1, 418.0], [78.2, 418.0], [78.3, 418.0], [78.4, 418.0], [78.5, 418.0], [78.6, 418.0], [78.7, 418.0], [78.8, 418.0], [78.9, 418.0], [79.0, 421.0], [79.1, 421.0], [79.2, 421.0], [79.3, 421.0], [79.4, 421.0], [79.5, 421.0], [79.6, 421.0], [79.7, 421.0], [79.8, 421.0], [79.9, 421.0], [80.0, 421.0], [80.1, 421.0], [80.2, 421.0], [80.3, 421.0], [80.4, 421.0], [80.5, 421.0], [80.6, 421.0], [80.7, 421.0], [80.8, 421.0], [80.9, 421.0], [81.0, 421.0], [81.1, 421.0], [81.2, 421.0], [81.3, 421.0], [81.4, 421.0], [81.5, 421.0], [81.6, 421.0], [81.7, 421.0], [81.8, 421.0], [81.9, 421.0], [82.0, 424.0], [82.1, 424.0], [82.2, 424.0], [82.3, 424.0], [82.4, 424.0], [82.5, 424.0], [82.6, 424.0], [82.7, 424.0], [82.8, 424.0], [82.9, 424.0], [83.0, 425.0], [83.1, 425.0], [83.2, 425.0], [83.3, 425.0], [83.4, 425.0], [83.5, 425.0], [83.6, 425.0], [83.7, 425.0], [83.8, 425.0], [83.9, 425.0], [84.0, 427.0], [84.1, 427.0], [84.2, 427.0], [84.3, 427.0], [84.4, 427.0], [84.5, 427.0], [84.6, 427.0], [84.7, 427.0], [84.8, 427.0], [84.9, 427.0], [85.0, 428.0], [85.1, 428.0], [85.2, 428.0], [85.3, 428.0], [85.4, 428.0], [85.5, 428.0], [85.6, 428.0], [85.7, 428.0], [85.8, 428.0], [85.9, 428.0], [86.0, 428.0], [86.1, 428.0], [86.2, 428.0], [86.3, 428.0], [86.4, 428.0], [86.5, 428.0], [86.6, 428.0], [86.7, 428.0], [86.8, 428.0], [86.9, 428.0], [87.0, 431.0], [87.1, 431.0], [87.2, 431.0], [87.3, 431.0], [87.4, 431.0], [87.5, 431.0], [87.6, 431.0], [87.7, 431.0], [87.8, 431.0], [87.9, 431.0], [88.0, 435.0], [88.1, 435.0], [88.2, 435.0], [88.3, 435.0], [88.4, 435.0], [88.5, 435.0], [88.6, 435.0], [88.7, 435.0], [88.8, 435.0], [88.9, 435.0], [89.0, 435.0], [89.1, 435.0], [89.2, 435.0], [89.3, 435.0], [89.4, 435.0], [89.5, 435.0], [89.6, 435.0], [89.7, 435.0], [89.8, 435.0], [89.9, 435.0], [90.0, 437.0], [90.1, 437.0], [90.2, 437.0], [90.3, 437.0], [90.4, 437.0], [90.5, 437.0], [90.6, 437.0], [90.7, 437.0], [90.8, 437.0], [90.9, 437.0], [91.0, 440.0], [91.1, 440.0], [91.2, 440.0], [91.3, 440.0], [91.4, 440.0], [91.5, 440.0], [91.6, 440.0], [91.7, 440.0], [91.8, 440.0], [91.9, 440.0], [92.0, 440.0], [92.1, 440.0], [92.2, 440.0], [92.3, 440.0], [92.4, 440.0], [92.5, 440.0], [92.6, 440.0], [92.7, 440.0], [92.8, 440.0], [92.9, 440.0], [93.0, 443.0], [93.1, 443.0], [93.2, 443.0], [93.3, 443.0], [93.4, 443.0], [93.5, 443.0], [93.6, 443.0], [93.7, 443.0], [93.8, 443.0], [93.9, 443.0], [94.0, 448.0], [94.1, 448.0], [94.2, 448.0], [94.3, 448.0], [94.4, 448.0], [94.5, 448.0], [94.6, 448.0], [94.7, 448.0], [94.8, 448.0], [94.9, 448.0], [95.0, 452.0], [95.1, 452.0], [95.2, 452.0], [95.3, 452.0], [95.4, 452.0], [95.5, 452.0], [95.6, 452.0], [95.7, 452.0], [95.8, 452.0], [95.9, 452.0], [96.0, 454.0], [96.1, 454.0], [96.2, 454.0], [96.3, 454.0], [96.4, 454.0], [96.5, 454.0], [96.6, 454.0], [96.7, 454.0], [96.8, 454.0], [96.9, 454.0], [97.0, 462.0], [97.1, 462.0], [97.2, 462.0], [97.3, 462.0], [97.4, 462.0], [97.5, 462.0], [97.6, 462.0], [97.7, 462.0], [97.8, 462.0], [97.9, 462.0], [98.0, 479.0], [98.1, 479.0], [98.2, 479.0], [98.3, 479.0], [98.4, 479.0], [98.5, 479.0], [98.6, 479.0], [98.7, 479.0], [98.8, 479.0], [98.9, 479.0], [99.0, 485.0], [99.1, 485.0], [99.2, 485.0], [99.3, 485.0], [99.4, 485.0], [99.5, 485.0], [99.6, 485.0], [99.7, 485.0], [99.8, 485.0], [99.9, 485.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[0.0, 366.0], [0.1, 366.0], [0.2, 366.0], [0.3, 366.0], [0.4, 366.0], [0.5, 366.0], [0.6, 366.0], [0.7, 366.0], [0.8, 366.0], [0.9, 366.0], [1.0, 366.0], [1.1, 366.0], [1.2, 366.0], [1.3, 366.0], [1.4, 366.0], [1.5, 366.0], [1.6, 366.0], [1.7, 366.0], [1.8, 366.0], [1.9, 366.0], [2.0, 375.0], [2.1, 375.0], [2.2, 375.0], [2.3, 375.0], [2.4, 375.0], [2.5, 375.0], [2.6, 375.0], [2.7, 375.0], [2.8, 375.0], [2.9, 375.0], [3.0, 400.0], [3.1, 400.0], [3.2, 400.0], [3.3, 400.0], [3.4, 400.0], [3.5, 400.0], [3.6, 400.0], [3.7, 400.0], [3.8, 400.0], [3.9, 400.0], [4.0, 400.0], [4.1, 400.0], [4.2, 400.0], [4.3, 400.0], [4.4, 400.0], [4.5, 400.0], [4.6, 400.0], [4.7, 400.0], [4.8, 400.0], [4.9, 400.0], [5.0, 404.0], [5.1, 404.0], [5.2, 404.0], [5.3, 404.0], [5.4, 404.0], [5.5, 404.0], [5.6, 404.0], [5.7, 404.0], [5.8, 404.0], [5.9, 404.0], [6.0, 405.0], [6.1, 405.0], [6.2, 405.0], [6.3, 405.0], [6.4, 405.0], [6.5, 405.0], [6.6, 405.0], [6.7, 405.0], [6.8, 405.0], [6.9, 405.0], [7.0, 407.0], [7.1, 407.0], [7.2, 407.0], [7.3, 407.0], [7.4, 407.0], [7.5, 407.0], [7.6, 407.0], [7.7, 407.0], [7.8, 407.0], [7.9, 407.0], [8.0, 408.0], [8.1, 408.0], [8.2, 408.0], [8.3, 408.0], [8.4, 408.0], [8.5, 408.0], [8.6, 408.0], [8.7, 408.0], [8.8, 408.0], [8.9, 408.0], [9.0, 410.0], [9.1, 410.0], [9.2, 410.0], [9.3, 410.0], [9.4, 410.0], [9.5, 410.0], [9.6, 410.0], [9.7, 410.0], [9.8, 410.0], [9.9, 410.0], [10.0, 415.0], [10.1, 415.0], [10.2, 415.0], [10.3, 415.0], [10.4, 415.0], [10.5, 415.0], [10.6, 415.0], [10.7, 415.0], [10.8, 415.0], [10.9, 415.0], [11.0, 416.0], [11.1, 416.0], [11.2, 416.0], [11.3, 416.0], [11.4, 416.0], [11.5, 416.0], [11.6, 416.0], [11.7, 416.0], [11.8, 416.0], [11.9, 416.0], [12.0, 417.0], [12.1, 417.0], [12.2, 417.0], [12.3, 417.0], [12.4, 417.0], [12.5, 417.0], [12.6, 417.0], [12.7, 417.0], [12.8, 417.0], [12.9, 417.0], [13.0, 420.0], [13.1, 420.0], [13.2, 420.0], [13.3, 420.0], [13.4, 420.0], [13.5, 420.0], [13.6, 420.0], [13.7, 420.0], [13.8, 420.0], [13.9, 420.0], [14.0, 420.0], [14.1, 420.0], [14.2, 420.0], [14.3, 420.0], [14.4, 420.0], [14.5, 420.0], [14.6, 420.0], [14.7, 420.0], [14.8, 420.0], [14.9, 420.0], [15.0, 421.0], [15.1, 421.0], [15.2, 421.0], [15.3, 421.0], [15.4, 421.0], [15.5, 421.0], [15.6, 421.0], [15.7, 421.0], [15.8, 421.0], [15.9, 421.0], [16.0, 421.0], [16.1, 421.0], [16.2, 421.0], [16.3, 421.0], [16.4, 421.0], [16.5, 421.0], [16.6, 421.0], [16.7, 421.0], [16.8, 421.0], [16.9, 421.0], [17.0, 422.0], [17.1, 422.0], [17.2, 422.0], [17.3, 422.0], [17.4, 422.0], [17.5, 422.0], [17.6, 422.0], [17.7, 422.0], [17.8, 422.0], [17.9, 422.0], [18.0, 423.0], [18.1, 423.0], [18.2, 423.0], [18.3, 423.0], [18.4, 423.0], [18.5, 423.0], [18.6, 423.0], [18.7, 423.0], [18.8, 423.0], [18.9, 423.0], [19.0, 424.0], [19.1, 424.0], [19.2, 424.0], [19.3, 424.0], [19.4, 424.0], [19.5, 424.0], [19.6, 424.0], [19.7, 424.0], [19.8, 424.0], [19.9, 424.0], [20.0, 426.0], [20.1, 426.0], [20.2, 426.0], [20.3, 426.0], [20.4, 426.0], [20.5, 426.0], [20.6, 426.0], [20.7, 426.0], [20.8, 426.0], [20.9, 426.0], [21.0, 427.0], [21.1, 427.0], [21.2, 427.0], [21.3, 427.0], [21.4, 427.0], [21.5, 427.0], [21.6, 427.0], [21.7, 427.0], [21.8, 427.0], [21.9, 427.0], [22.0, 430.0], [22.1, 430.0], [22.2, 430.0], [22.3, 430.0], [22.4, 430.0], [22.5, 430.0], [22.6, 430.0], [22.7, 430.0], [22.8, 430.0], [22.9, 430.0], [23.0, 433.0], [23.1, 433.0], [23.2, 433.0], [23.3, 433.0], [23.4, 433.0], [23.5, 433.0], [23.6, 433.0], [23.7, 433.0], [23.8, 433.0], [23.9, 433.0], [24.0, 437.0], [24.1, 437.0], [24.2, 437.0], [24.3, 437.0], [24.4, 437.0], [24.5, 437.0], [24.6, 437.0], [24.7, 437.0], [24.8, 437.0], [24.9, 437.0], [25.0, 438.0], [25.1, 438.0], [25.2, 438.0], [25.3, 438.0], [25.4, 438.0], [25.5, 438.0], [25.6, 438.0], [25.7, 438.0], [25.8, 438.0], [25.9, 438.0], [26.0, 440.0], [26.1, 440.0], [26.2, 440.0], [26.3, 440.0], [26.4, 440.0], [26.5, 440.0], [26.6, 440.0], [26.7, 440.0], [26.8, 440.0], [26.9, 440.0], [27.0, 443.0], [27.1, 443.0], [27.2, 443.0], [27.3, 443.0], [27.4, 443.0], [27.5, 443.0], [27.6, 443.0], [27.7, 443.0], [27.8, 443.0], [27.9, 443.0], [28.0, 444.0], [28.1, 444.0], [28.2, 444.0], [28.3, 444.0], [28.4, 444.0], [28.5, 444.0], [28.6, 444.0], [28.7, 444.0], [28.8, 444.0], [28.9, 444.0], [29.0, 444.0], [29.1, 444.0], [29.2, 444.0], [29.3, 444.0], [29.4, 444.0], [29.5, 444.0], [29.6, 444.0], [29.7, 444.0], [29.8, 444.0], [29.9, 444.0], [30.0, 444.0], [30.1, 444.0], [30.2, 444.0], [30.3, 444.0], [30.4, 444.0], [30.5, 444.0], [30.6, 444.0], [30.7, 444.0], [30.8, 444.0], [30.9, 444.0], [31.0, 447.0], [31.1, 447.0], [31.2, 447.0], [31.3, 447.0], [31.4, 447.0], [31.5, 447.0], [31.6, 447.0], [31.7, 447.0], [31.8, 447.0], [31.9, 447.0], [32.0, 448.0], [32.1, 448.0], [32.2, 448.0], [32.3, 448.0], [32.4, 448.0], [32.5, 448.0], [32.6, 448.0], [32.7, 448.0], [32.8, 448.0], [32.9, 448.0], [33.0, 448.0], [33.1, 448.0], [33.2, 448.0], [33.3, 448.0], [33.4, 448.0], [33.5, 448.0], [33.6, 448.0], [33.7, 448.0], [33.8, 448.0], [33.9, 448.0], [34.0, 448.0], [34.1, 448.0], [34.2, 448.0], [34.3, 448.0], [34.4, 448.0], [34.5, 448.0], [34.6, 448.0], [34.7, 448.0], [34.8, 448.0], [34.9, 448.0], [35.0, 449.0], [35.1, 449.0], [35.2, 449.0], [35.3, 449.0], [35.4, 449.0], [35.5, 449.0], [35.6, 449.0], [35.7, 449.0], [35.8, 449.0], [35.9, 449.0], [36.0, 450.0], [36.1, 450.0], [36.2, 450.0], [36.3, 450.0], [36.4, 450.0], [36.5, 450.0], [36.6, 450.0], [36.7, 450.0], [36.8, 450.0], [36.9, 450.0], [37.0, 451.0], [37.1, 451.0], [37.2, 451.0], [37.3, 451.0], [37.4, 451.0], [37.5, 451.0], [37.6, 451.0], [37.7, 451.0], [37.8, 451.0], [37.9, 451.0], [38.0, 452.0], [38.1, 452.0], [38.2, 452.0], [38.3, 452.0], [38.4, 452.0], [38.5, 452.0], [38.6, 452.0], [38.7, 452.0], [38.8, 452.0], [38.9, 452.0], [39.0, 452.0], [39.1, 452.0], [39.2, 452.0], [39.3, 452.0], [39.4, 452.0], [39.5, 452.0], [39.6, 452.0], [39.7, 452.0], [39.8, 452.0], [39.9, 452.0], [40.0, 453.0], [40.1, 453.0], [40.2, 453.0], [40.3, 453.0], [40.4, 453.0], [40.5, 453.0], [40.6, 453.0], [40.7, 453.0], [40.8, 453.0], [40.9, 453.0], [41.0, 454.0], [41.1, 454.0], [41.2, 454.0], [41.3, 454.0], [41.4, 454.0], [41.5, 454.0], [41.6, 454.0], [41.7, 454.0], [41.8, 454.0], [41.9, 454.0], [42.0, 454.0], [42.1, 454.0], [42.2, 454.0], [42.3, 454.0], [42.4, 454.0], [42.5, 454.0], [42.6, 454.0], [42.7, 454.0], [42.8, 454.0], [42.9, 454.0], [43.0, 456.0], [43.1, 456.0], [43.2, 456.0], [43.3, 456.0], [43.4, 456.0], [43.5, 456.0], [43.6, 456.0], [43.7, 456.0], [43.8, 456.0], [43.9, 456.0], [44.0, 456.0], [44.1, 456.0], [44.2, 456.0], [44.3, 456.0], [44.4, 456.0], [44.5, 456.0], [44.6, 456.0], [44.7, 456.0], [44.8, 456.0], [44.9, 456.0], [45.0, 456.0], [45.1, 456.0], [45.2, 456.0], [45.3, 456.0], [45.4, 456.0], [45.5, 456.0], [45.6, 456.0], [45.7, 456.0], [45.8, 456.0], [45.9, 456.0], [46.0, 457.0], [46.1, 457.0], [46.2, 457.0], [46.3, 457.0], [46.4, 457.0], [46.5, 457.0], [46.6, 457.0], [46.7, 457.0], [46.8, 457.0], [46.9, 457.0], [47.0, 458.0], [47.1, 458.0], [47.2, 458.0], [47.3, 458.0], [47.4, 458.0], [47.5, 458.0], [47.6, 458.0], [47.7, 458.0], [47.8, 458.0], [47.9, 458.0], [48.0, 459.0], [48.1, 459.0], [48.2, 459.0], [48.3, 459.0], [48.4, 459.0], [48.5, 459.0], [48.6, 459.0], [48.7, 459.0], [48.8, 459.0], [48.9, 459.0], [49.0, 460.0], [49.1, 460.0], [49.2, 460.0], [49.3, 460.0], [49.4, 460.0], [49.5, 460.0], [49.6, 460.0], [49.7, 460.0], [49.8, 460.0], [49.9, 460.0], [50.0, 461.0], [50.1, 461.0], [50.2, 461.0], [50.3, 461.0], [50.4, 461.0], [50.5, 461.0], [50.6, 461.0], [50.7, 461.0], [50.8, 461.0], [50.9, 461.0], [51.0, 463.0], [51.1, 463.0], [51.2, 463.0], [51.3, 463.0], [51.4, 463.0], [51.5, 463.0], [51.6, 463.0], [51.7, 463.0], [51.8, 463.0], [51.9, 463.0], [52.0, 464.0], [52.1, 464.0], [52.2, 464.0], [52.3, 464.0], [52.4, 464.0], [52.5, 464.0], [52.6, 464.0], [52.7, 464.0], [52.8, 464.0], [52.9, 464.0], [53.0, 465.0], [53.1, 465.0], [53.2, 465.0], [53.3, 465.0], [53.4, 465.0], [53.5, 465.0], [53.6, 465.0], [53.7, 465.0], [53.8, 465.0], [53.9, 465.0], [54.0, 467.0], [54.1, 467.0], [54.2, 467.0], [54.3, 467.0], [54.4, 467.0], [54.5, 467.0], [54.6, 467.0], [54.7, 467.0], [54.8, 467.0], [54.9, 467.0], [55.0, 468.0], [55.1, 468.0], [55.2, 468.0], [55.3, 468.0], [55.4, 468.0], [55.5, 468.0], [55.6, 468.0], [55.7, 468.0], [55.8, 468.0], [55.9, 468.0], [56.0, 468.0], [56.1, 468.0], [56.2, 468.0], [56.3, 468.0], [56.4, 468.0], [56.5, 468.0], [56.6, 468.0], [56.7, 468.0], [56.8, 468.0], [56.9, 468.0], [57.0, 468.0], [57.1, 468.0], [57.2, 468.0], [57.3, 468.0], [57.4, 468.0], [57.5, 468.0], [57.6, 468.0], [57.7, 468.0], [57.8, 468.0], [57.9, 468.0], [58.0, 468.0], [58.1, 468.0], [58.2, 468.0], [58.3, 468.0], [58.4, 468.0], [58.5, 468.0], [58.6, 468.0], [58.7, 468.0], [58.8, 468.0], [58.9, 468.0], [59.0, 472.0], [59.1, 472.0], [59.2, 472.0], [59.3, 472.0], [59.4, 472.0], [59.5, 472.0], [59.6, 472.0], [59.7, 472.0], [59.8, 472.0], [59.9, 472.0], [60.0, 474.0], [60.1, 474.0], [60.2, 474.0], [60.3, 474.0], [60.4, 474.0], [60.5, 474.0], [60.6, 474.0], [60.7, 474.0], [60.8, 474.0], [60.9, 474.0], [61.0, 474.0], [61.1, 474.0], [61.2, 474.0], [61.3, 474.0], [61.4, 474.0], [61.5, 474.0], [61.6, 474.0], [61.7, 474.0], [61.8, 474.0], [61.9, 474.0], [62.0, 475.0], [62.1, 475.0], [62.2, 475.0], [62.3, 475.0], [62.4, 475.0], [62.5, 475.0], [62.6, 475.0], [62.7, 475.0], [62.8, 475.0], [62.9, 475.0], [63.0, 475.0], [63.1, 475.0], [63.2, 475.0], [63.3, 475.0], [63.4, 475.0], [63.5, 475.0], [63.6, 475.0], [63.7, 475.0], [63.8, 475.0], [63.9, 475.0], [64.0, 476.0], [64.1, 476.0], [64.2, 476.0], [64.3, 476.0], [64.4, 476.0], [64.5, 476.0], [64.6, 476.0], [64.7, 476.0], [64.8, 476.0], [64.9, 476.0], [65.0, 476.0], [65.1, 476.0], [65.2, 476.0], [65.3, 476.0], [65.4, 476.0], [65.5, 476.0], [65.6, 476.0], [65.7, 476.0], [65.8, 476.0], [65.9, 476.0], [66.0, 476.0], [66.1, 476.0], [66.2, 476.0], [66.3, 476.0], [66.4, 476.0], [66.5, 476.0], [66.6, 476.0], [66.7, 476.0], [66.8, 476.0], [66.9, 476.0], [67.0, 480.0], [67.1, 480.0], [67.2, 480.0], [67.3, 480.0], [67.4, 480.0], [67.5, 480.0], [67.6, 480.0], [67.7, 480.0], [67.8, 480.0], [67.9, 480.0], [68.0, 480.0], [68.1, 480.0], [68.2, 480.0], [68.3, 480.0], [68.4, 480.0], [68.5, 480.0], [68.6, 480.0], [68.7, 480.0], [68.8, 480.0], [68.9, 480.0], [69.0, 480.0], [69.1, 480.0], [69.2, 480.0], [69.3, 480.0], [69.4, 480.0], [69.5, 480.0], [69.6, 480.0], [69.7, 480.0], [69.8, 480.0], [69.9, 480.0], [70.0, 480.0], [70.1, 480.0], [70.2, 480.0], [70.3, 480.0], [70.4, 480.0], [70.5, 480.0], [70.6, 480.0], [70.7, 480.0], [70.8, 480.0], [70.9, 480.0], [71.0, 481.0], [71.1, 481.0], [71.2, 481.0], [71.3, 481.0], [71.4, 481.0], [71.5, 481.0], [71.6, 481.0], [71.7, 481.0], [71.8, 481.0], [71.9, 481.0], [72.0, 484.0], [72.1, 484.0], [72.2, 484.0], [72.3, 484.0], [72.4, 484.0], [72.5, 484.0], [72.6, 484.0], [72.7, 484.0], [72.8, 484.0], [72.9, 484.0], [73.0, 484.0], [73.1, 484.0], [73.2, 484.0], [73.3, 484.0], [73.4, 484.0], [73.5, 484.0], [73.6, 484.0], [73.7, 484.0], [73.8, 484.0], [73.9, 484.0], [74.0, 484.0], [74.1, 484.0], [74.2, 484.0], [74.3, 484.0], [74.4, 484.0], [74.5, 484.0], [74.6, 484.0], [74.7, 484.0], [74.8, 484.0], [74.9, 484.0], [75.0, 484.0], [75.1, 484.0], [75.2, 484.0], [75.3, 484.0], [75.4, 484.0], [75.5, 484.0], [75.6, 484.0], [75.7, 484.0], [75.8, 484.0], [75.9, 484.0], [76.0, 487.0], [76.1, 487.0], [76.2, 487.0], [76.3, 487.0], [76.4, 487.0], [76.5, 487.0], [76.6, 487.0], [76.7, 487.0], [76.8, 487.0], [76.9, 487.0], [77.0, 487.0], [77.1, 487.0], [77.2, 487.0], [77.3, 487.0], [77.4, 487.0], [77.5, 487.0], [77.6, 487.0], [77.7, 487.0], [77.8, 487.0], [77.9, 487.0], [78.0, 487.0], [78.1, 487.0], [78.2, 487.0], [78.3, 487.0], [78.4, 487.0], [78.5, 487.0], [78.6, 487.0], [78.7, 487.0], [78.8, 487.0], [78.9, 487.0], [79.0, 488.0], [79.1, 488.0], [79.2, 488.0], [79.3, 488.0], [79.4, 488.0], [79.5, 488.0], [79.6, 488.0], [79.7, 488.0], [79.8, 488.0], [79.9, 488.0], [80.0, 488.0], [80.1, 488.0], [80.2, 488.0], [80.3, 488.0], [80.4, 488.0], [80.5, 488.0], [80.6, 488.0], [80.7, 488.0], [80.8, 488.0], [80.9, 488.0], [81.0, 488.0], [81.1, 488.0], [81.2, 488.0], [81.3, 488.0], [81.4, 488.0], [81.5, 488.0], [81.6, 488.0], [81.7, 488.0], [81.8, 488.0], [81.9, 488.0], [82.0, 489.0], [82.1, 489.0], [82.2, 489.0], [82.3, 489.0], [82.4, 489.0], [82.5, 489.0], [82.6, 489.0], [82.7, 489.0], [82.8, 489.0], [82.9, 489.0], [83.0, 491.0], [83.1, 491.0], [83.2, 491.0], [83.3, 491.0], [83.4, 491.0], [83.5, 491.0], [83.6, 491.0], [83.7, 491.0], [83.8, 491.0], [83.9, 491.0], [84.0, 491.0], [84.1, 491.0], [84.2, 491.0], [84.3, 491.0], [84.4, 491.0], [84.5, 491.0], [84.6, 491.0], [84.7, 491.0], [84.8, 491.0], [84.9, 491.0], [85.0, 492.0], [85.1, 492.0], [85.2, 492.0], [85.3, 492.0], [85.4, 492.0], [85.5, 492.0], [85.6, 492.0], [85.7, 492.0], [85.8, 492.0], [85.9, 492.0], [86.0, 492.0], [86.1, 492.0], [86.2, 492.0], [86.3, 492.0], [86.4, 492.0], [86.5, 492.0], [86.6, 492.0], [86.7, 492.0], [86.8, 492.0], [86.9, 492.0], [87.0, 493.0], [87.1, 493.0], [87.2, 493.0], [87.3, 493.0], [87.4, 493.0], [87.5, 493.0], [87.6, 493.0], [87.7, 493.0], [87.8, 493.0], [87.9, 493.0], [88.0, 498.0], [88.1, 498.0], [88.2, 498.0], [88.3, 498.0], [88.4, 498.0], [88.5, 498.0], [88.6, 498.0], [88.7, 498.0], [88.8, 498.0], [88.9, 498.0], [89.0, 500.0], [89.1, 500.0], [89.2, 500.0], [89.3, 500.0], [89.4, 500.0], [89.5, 500.0], [89.6, 500.0], [89.7, 500.0], [89.8, 500.0], [89.9, 500.0], [90.0, 507.0], [90.1, 507.0], [90.2, 507.0], [90.3, 507.0], [90.4, 507.0], [90.5, 507.0], [90.6, 507.0], [90.7, 507.0], [90.8, 507.0], [90.9, 507.0], [91.0, 512.0], [91.1, 512.0], [91.2, 512.0], [91.3, 512.0], [91.4, 512.0], [91.5, 512.0], [91.6, 512.0], [91.7, 512.0], [91.8, 512.0], [91.9, 512.0], [92.0, 521.0], [92.1, 521.0], [92.2, 521.0], [92.3, 521.0], [92.4, 521.0], [92.5, 521.0], [92.6, 521.0], [92.7, 521.0], [92.8, 521.0], [92.9, 521.0], [93.0, 524.0], [93.1, 524.0], [93.2, 524.0], [93.3, 524.0], [93.4, 524.0], [93.5, 524.0], [93.6, 524.0], [93.7, 524.0], [93.8, 524.0], [93.9, 524.0], [94.0, 524.0], [94.1, 524.0], [94.2, 524.0], [94.3, 524.0], [94.4, 524.0], [94.5, 524.0], [94.6, 524.0], [94.7, 524.0], [94.8, 524.0], [94.9, 524.0], [95.0, 539.0], [95.1, 539.0], [95.2, 539.0], [95.3, 539.0], [95.4, 539.0], [95.5, 539.0], [95.6, 539.0], [95.7, 539.0], [95.8, 539.0], [95.9, 539.0], [96.0, 541.0], [96.1, 541.0], [96.2, 541.0], [96.3, 541.0], [96.4, 541.0], [96.5, 541.0], [96.6, 541.0], [96.7, 541.0], [96.8, 541.0], [96.9, 541.0], [97.0, 547.0], [97.1, 547.0], [97.2, 547.0], [97.3, 547.0], [97.4, 547.0], [97.5, 547.0], [97.6, 547.0], [97.7, 547.0], [97.8, 547.0], [97.9, 547.0], [98.0, 548.0], [98.1, 548.0], [98.2, 548.0], [98.3, 548.0], [98.4, 548.0], [98.5, 548.0], [98.6, 548.0], [98.7, 548.0], [98.8, 548.0], [98.9, 548.0], [99.0, 566.0], [99.1, 566.0], [99.2, 566.0], [99.3, 566.0], [99.4, 566.0], [99.5, 566.0], [99.6, 566.0], [99.7, 566.0], [99.8, 566.0], [99.9, 566.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 86.0, "series": [{"data": [[300.0, 4.0], [200.0, 80.0], [400.0, 16.0]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[600.0, 22.0], [700.0, 64.0], [800.0, 13.0], [900.0, 1.0]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1100.0, 5.0], [1200.0, 29.0], [1300.0, 51.0], [1400.0, 13.0], [1500.0, 1.0], [1600.0, 1.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[300.0, 71.0], [400.0, 29.0]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[300.0, 3.0], [400.0, 86.0], [500.0, 11.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 290.0, "series": [{"data": [[0.0, 290.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 208.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7123061E12, "maxY": 1.0, "series": [{"data": [[1.71230622E12, 1.0], [1.71230634E12, 1.0], [1.71230616E12, 1.0], [1.71230628E12, 1.0], [1.7123061E12, 1.0], [1.7123064E12, 1.0]], "isOverall": false, "label": "pg_tileserv_1", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123064E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 287.3500000000001, "minX": 1.0, "maxY": 1329.8500000000001, "series": [{"data": [[1.0, 287.3500000000001]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.0, 287.3500000000001]], "isOverall": false, "label": "Test_5-Aggregated", "isController": false}, {"data": [[1.0, 741.8099999999998]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.0, 741.8099999999998]], "isOverall": false, "label": "Test_1-Aggregated", "isController": false}, {"data": [[1.0, 1329.8500000000001]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.0, 1329.8500000000001]], "isOverall": false, "label": "Test_2-Aggregated", "isController": false}, {"data": [[1.0, 381.61000000000007]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.0, 381.61000000000007]], "isOverall": false, "label": "Test_3-Aggregated", "isController": false}, {"data": [[1.0, 460.8100000000001]], "isOverall": false, "label": "Test_4", "isController": false}, {"data": [[1.0, 460.8100000000001]], "isOverall": false, "label": "Test_4-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 175.95, "minX": 1.7123061E12, "maxY": 148581.3, "series": [{"data": [[1.71230622E12, 108911.73333333334], [1.71230634E12, 148581.3], [1.71230616E12, 126062.05], [1.71230628E12, 127333.46666666666], [1.7123061E12, 135142.25], [1.7123064E12, 15128.866666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71230622E12, 465.0], [1.71230634E12, 349.06666666666666], [1.71230616E12, 358.05], [1.71230628E12, 448.46666666666664], [1.7123061E12, 175.95], [1.7123064E12, 266.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123064E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 287.3500000000001, "minX": 1.7123061E12, "maxY": 1336.933333333333, "series": [{"data": [[1.7123064E12, 287.3500000000001]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 746.8709677419355], [1.7123061E12, 739.5362318840579]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 1336.933333333333], [1.71230616E12, 1335.0740740740737], [1.71230628E12, 1313.4285714285713]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230634E12, 382.8421052631579], [1.71230628E12, 380.85483870967744]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230634E12, 460.90816326530626], [1.7123064E12, 456.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123064E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123061E12, "maxY": 716.7096774193549, "series": [{"data": [[1.7123064E12, 287.24999999999983]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 716.7096774193549], [1.7123061E12, 709.9275362318841]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 0.0], [1.71230616E12, 0.0], [1.71230628E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230634E12, 375.36842105263145], [1.71230628E12, 364.54838709677415]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230634E12, 429.79591836734687], [1.7123064E12, 430.5]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123064E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7123061E12, "maxY": 1.101449275362319, "series": [{"data": [[1.7123064E12, 0.51]], "isOverall": false, "label": "Test_5", "isController": false}, {"data": [[1.71230616E12, 0.7419354838709677], [1.7123061E12, 1.101449275362319]], "isOverall": false, "label": "Test_1", "isController": false}, {"data": [[1.71230622E12, 0.0], [1.71230616E12, 0.0], [1.71230628E12, 0.0]], "isOverall": false, "label": "Test_2", "isController": false}, {"data": [[1.71230634E12, 0.6052631578947368], [1.71230628E12, 0.6612903225806449]], "isOverall": false, "label": "Test_3", "isController": false}, {"data": [[1.71230634E12, 0.5816326530612247], [1.7123064E12, 1.0]], "isOverall": false, "label": "Test_4", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123064E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 200.0, "minX": 1.7123061E12, "maxY": 1625.0, "series": [{"data": [[1.71230622E12, 1454.0], [1.71230634E12, 566.0], [1.71230616E12, 1625.0], [1.71230628E12, 1442.0], [1.7123061E12, 918.0], [1.7123064E12, 490.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71230622E12, 1416.2], [1.71230634E12, 492.3], [1.71230616E12, 1384.9], [1.71230628E12, 1340.1000000000001], [1.7123061E12, 829.0], [1.7123064E12, 425.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71230622E12, 1454.0], [1.71230634E12, 559.3399999999999], [1.71230616E12, 1625.0], [1.71230628E12, 1442.0], [1.7123061E12, 918.0], [1.7123064E12, 489.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71230622E12, 1442.0], [1.71230634E12, 524.0], [1.71230616E12, 1485.25], [1.71230628E12, 1396.45], [1.7123061E12, 873.5], [1.7123064E12, 438.7]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71230622E12, 1189.0], [1.71230634E12, 323.0], [1.71230616E12, 657.0], [1.71230628E12, 318.0], [1.7123061E12, 627.0], [1.7123064E12, 200.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71230622E12, 1341.0], [1.71230634E12, 448.0], [1.71230616E12, 837.0], [1.71230628E12, 410.0], [1.7123061E12, 732.0], [1.7123064E12, 262.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123064E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 252.0, "minX": 1.0, "maxY": 1281.0, "series": [{"data": [[1.0, 1281.0], [2.0, 471.0], [4.0, 260.5], [5.0, 252.0], [3.0, 376.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 442.5, "series": [{"data": [[1.0, 0.0], [2.0, 442.5], [4.0, 260.5], [5.0, 252.0], [3.0, 364.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.75, "minX": 1.7123061E12, "maxY": 2.2666666666666666, "series": [{"data": [[1.71230622E12, 0.75], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230628E12, 1.5], [1.7123061E12, 1.1666666666666667], [1.7123064E12, 1.6833333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123064E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.75, "minX": 1.7123061E12, "maxY": 2.2666666666666666, "series": [{"data": [[1.71230622E12, 0.75], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230628E12, 1.5], [1.7123061E12, 1.15], [1.7123064E12, 1.7]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7123064E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7123061E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.71230616E12, 0.5166666666666667], [1.7123061E12, 1.15]], "isOverall": false, "label": "Test_1-success", "isController": false}, {"data": [[1.7123064E12, 1.6666666666666667]], "isOverall": false, "label": "Test_5-success", "isController": false}, {"data": [[1.71230622E12, 0.75], [1.71230616E12, 0.45], [1.71230628E12, 0.4666666666666667]], "isOverall": false, "label": "Test_2-success", "isController": false}, {"data": [[1.71230634E12, 1.6333333333333333], [1.7123064E12, 0.03333333333333333]], "isOverall": false, "label": "Test_4-success", "isController": false}, {"data": [[1.71230634E12, 0.6333333333333333], [1.71230628E12, 1.0333333333333334]], "isOverall": false, "label": "Test_3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123064E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.75, "minX": 1.7123061E12, "maxY": 2.2666666666666666, "series": [{"data": [[1.71230622E12, 0.75], [1.71230634E12, 2.2666666666666666], [1.71230616E12, 0.9666666666666667], [1.71230628E12, 1.5], [1.7123061E12, 1.15], [1.7123064E12, 1.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7123064E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

